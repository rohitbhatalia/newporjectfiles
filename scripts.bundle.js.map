{"version":3,"sources":["C:/Local Projects/manualruf/my-app/node_modules/es5-shim/es5-shim.js","C:/Local Projects/manualruf/my-app/node_modules/es6-shim/es6-shim.js","C:/Local Projects/manualruf/my-app/node_modules/script-loader/addScript.js","C:/Local Projects/manualruf/my-app/node_modules/es5-shim/es5-shim.js?acaf","C:/Local Projects/manualruf/my-app/node_modules/es6-shim/es6-shim.js?67ca"],"names":[],"mappings":"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","file":"scripts.bundle.js","sourcesContent":["module.exports = \"/*!\\n * https://github.com/es-shims/es5-shim\\n * @license es5-shim Copyright 2009-2015 by contributors, MIT License\\n * see https://github.com/es-shims/es5-shim/blob/master/LICENSE\\n */\\n\\n// vim: ts=4 sts=4 sw=4 expandtab\\n\\n// Add semicolon to prevent IIFE from being passed as argument to concatenated code.\\n;\\n\\n// UMD (Universal Module Definition)\\n// see https://github.com/umdjs/umd/blob/master/templates/returnExports.js\\n(function (root, factory) {\\n    'use strict';\\n\\n    /* global define, exports, module */\\n    if (typeof define === 'function' && define.amd) {\\n        // AMD. Register as an anonymous module.\\n        define(factory);\\n    } else if (typeof exports === 'object') {\\n        // Node. Does not work with strict CommonJS, but\\n        // only CommonJS-like enviroments that support module.exports,\\n        // like Node.\\n        module.exports = factory();\\n    } else {\\n        // Browser globals (root is window)\\n        root.returnExports = factory();\\n    }\\n}(this, function () {\\n    /**\\n     * Brings an environment as close to ECMAScript 5 compliance\\n     * as is possible with the facilities of erstwhile engines.\\n     *\\n     * Annotated ES5: http://es5.github.com/ (specific links below)\\n     * ES5 Spec: http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\\n     * Required reading: http://javascriptweblog.wordpress.com/2011/12/05/extending-javascript-natives/\\n     */\\n\\n    // Shortcut to an often accessed properties, in order to avoid multiple\\n    // dereference that costs universally. This also holds a reference to known-good\\n    // functions.\\n    var $Array = Array;\\n    var ArrayPrototype = $Array.prototype;\\n    var $Object = Object;\\n    var ObjectPrototype = $Object.prototype;\\n    var $Function = Function;\\n    var FunctionPrototype = $Function.prototype;\\n    var $String = String;\\n    var StringPrototype = $String.prototype;\\n    var $Number = Number;\\n    var NumberPrototype = $Number.prototype;\\n    var array_slice = ArrayPrototype.slice;\\n    var array_splice = ArrayPrototype.splice;\\n    var array_push = ArrayPrototype.push;\\n    var array_unshift = ArrayPrototype.unshift;\\n    var array_concat = ArrayPrototype.concat;\\n    var array_join = ArrayPrototype.join;\\n    var call = FunctionPrototype.call;\\n    var apply = FunctionPrototype.apply;\\n    var max = Math.max;\\n    var min = Math.min;\\n\\n    // Having a toString local variable name breaks in Opera so use to_string.\\n    var to_string = ObjectPrototype.toString;\\n\\n    /* global Symbol */\\n    /* eslint-disable one-var-declaration-per-line, no-redeclare, max-statements-per-line */\\n    var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\\n    var isCallable; /* inlined from https://npmjs.com/is-callable */ var fnToStr = Function.prototype.toString, constructorRegex = /^\\\\s*class /, isES6ClassFn = function isES6ClassFn(value) { try { var fnStr = fnToStr.call(value); var singleStripped = fnStr.replace(/\\\\/\\\\/.*\\\\n/g, ''); var multiStripped = singleStripped.replace(/\\\\/\\\\*[.\\\\s\\\\S]*\\\\*\\\\//g, ''); var spaceStripped = multiStripped.replace(/\\\\n/mg, ' ').replace(/ {2}/g, ' '); return constructorRegex.test(spaceStripped); } catch (e) { return false; /* not a function */ } }, tryFunctionObject = function tryFunctionObject(value) { try { if (isES6ClassFn(value)) { return false; } fnToStr.call(value); return true; } catch (e) { return false; } }, fnClass = '[object Function]', genClass = '[object GeneratorFunction]', isCallable = function isCallable(value) { if (!value) { return false; } if (typeof value !== 'function' && typeof value !== 'object') { return false; } if (hasToStringTag) { return tryFunctionObject(value); } if (isES6ClassFn(value)) { return false; } var strClass = to_string.call(value); return strClass === fnClass || strClass === genClass; };\\n\\n    var isRegex; /* inlined from https://npmjs.com/is-regex */ var regexExec = RegExp.prototype.exec, tryRegexExec = function tryRegexExec(value) { try { regexExec.call(value); return true; } catch (e) { return false; } }, regexClass = '[object RegExp]'; isRegex = function isRegex(value) { if (typeof value !== 'object') { return false; } return hasToStringTag ? tryRegexExec(value) : to_string.call(value) === regexClass; };\\n    var isString; /* inlined from https://npmjs.com/is-string */ var strValue = String.prototype.valueOf, tryStringObject = function tryStringObject(value) { try { strValue.call(value); return true; } catch (e) { return false; } }, stringClass = '[object String]'; isString = function isString(value) { if (typeof value === 'string') { return true; } if (typeof value !== 'object') { return false; } return hasToStringTag ? tryStringObject(value) : to_string.call(value) === stringClass; };\\n    /* eslint-enable one-var-declaration-per-line, no-redeclare, max-statements-per-line */\\n\\n    /* inlined from http://npmjs.com/define-properties */\\n    var supportsDescriptors = $Object.defineProperty && (function () {\\n        try {\\n            var obj = {};\\n            $Object.defineProperty(obj, 'x', { enumerable: false, value: obj });\\n            for (var _ in obj) { // jscs:ignore disallowUnusedVariables\\n                return false;\\n            }\\n            return obj.x === obj;\\n        } catch (e) { /* this is ES3 */\\n            return false;\\n        }\\n    }());\\n    var defineProperties = (function (has) {\\n        // Define configurable, writable, and non-enumerable props\\n        // if they don't exist.\\n        var defineProperty;\\n        if (supportsDescriptors) {\\n            defineProperty = function (object, name, method, forceAssign) {\\n                if (!forceAssign && (name in object)) {\\n                    return;\\n                }\\n                $Object.defineProperty(object, name, {\\n                    configurable: true,\\n                    enumerable: false,\\n                    writable: true,\\n                    value: method\\n                });\\n            };\\n        } else {\\n            defineProperty = function (object, name, method, forceAssign) {\\n                if (!forceAssign && (name in object)) {\\n                    return;\\n                }\\n                object[name] = method;\\n            };\\n        }\\n        return function defineProperties(object, map, forceAssign) {\\n            for (var name in map) {\\n                if (has.call(map, name)) {\\n                    defineProperty(object, name, map[name], forceAssign);\\n                }\\n            }\\n        };\\n    }(ObjectPrototype.hasOwnProperty));\\n\\n    //\\n    // Util\\n    // ======\\n    //\\n\\n    /* replaceable with https://npmjs.com/package/es-abstract /helpers/isPrimitive */\\n    var isPrimitive = function isPrimitive(input) {\\n        var type = typeof input;\\n        return input === null || (type !== 'object' && type !== 'function');\\n    };\\n\\n    var isActualNaN = $Number.isNaN || function isActualNaN(x) {\\n        return x !== x;\\n    };\\n\\n    var ES = {\\n        // ES5 9.4\\n        // http://es5.github.com/#x9.4\\n        // http://jsperf.com/to-integer\\n        /* replaceable with https://npmjs.com/package/es-abstract ES5.ToInteger */\\n        ToInteger: function ToInteger(num) {\\n            var n = +num;\\n            if (isActualNaN(n)) {\\n                n = 0;\\n            } else if (n !== 0 && n !== (1 / 0) && n !== -(1 / 0)) {\\n                n = (n > 0 || -1) * Math.floor(Math.abs(n));\\n            }\\n            return n;\\n        },\\n\\n        /* replaceable with https://npmjs.com/package/es-abstract ES5.ToPrimitive */\\n        ToPrimitive: function ToPrimitive(input) {\\n            var val, valueOf, toStr;\\n            if (isPrimitive(input)) {\\n                return input;\\n            }\\n            valueOf = input.valueOf;\\n            if (isCallable(valueOf)) {\\n                val = valueOf.call(input);\\n                if (isPrimitive(val)) {\\n                    return val;\\n                }\\n            }\\n            toStr = input.toString;\\n            if (isCallable(toStr)) {\\n                val = toStr.call(input);\\n                if (isPrimitive(val)) {\\n                    return val;\\n                }\\n            }\\n            throw new TypeError();\\n        },\\n\\n        // ES5 9.9\\n        // http://es5.github.com/#x9.9\\n        /* replaceable with https://npmjs.com/package/es-abstract ES5.ToObject */\\n        ToObject: function (o) {\\n            if (o == null) { // this matches both null and undefined\\n                throw new TypeError(\\\"can't convert \\\" + o + ' to object');\\n            }\\n            return $Object(o);\\n        },\\n\\n        /* replaceable with https://npmjs.com/package/es-abstract ES5.ToUint32 */\\n        ToUint32: function ToUint32(x) {\\n            return x >>> 0;\\n        }\\n    };\\n\\n    //\\n    // Function\\n    // ========\\n    //\\n\\n    // ES-5 15.3.4.5\\n    // http://es5.github.com/#x15.3.4.5\\n\\n    var Empty = function Empty() {};\\n\\n    defineProperties(FunctionPrototype, {\\n        bind: function bind(that) { // .length is 1\\n            // 1. Let Target be the this value.\\n            var target = this;\\n            // 2. If IsCallable(Target) is false, throw a TypeError exception.\\n            if (!isCallable(target)) {\\n                throw new TypeError('Function.prototype.bind called on incompatible ' + target);\\n            }\\n            // 3. Let A be a new (possibly empty) internal list of all of the\\n            //   argument values provided after thisArg (arg1, arg2 etc), in order.\\n            // XXX slicedArgs will stand in for \\\"A\\\" if used\\n            var args = array_slice.call(arguments, 1); // for normal call\\n            // 4. Let F be a new native ECMAScript object.\\n            // 11. Set the [[Prototype]] internal property of F to the standard\\n            //   built-in Function prototype object as specified in 15.3.3.1.\\n            // 12. Set the [[Call]] internal property of F as described in\\n            //   15.3.4.5.1.\\n            // 13. Set the [[Construct]] internal property of F as described in\\n            //   15.3.4.5.2.\\n            // 14. Set the [[HasInstance]] internal property of F as described in\\n            //   15.3.4.5.3.\\n            var bound;\\n            var binder = function () {\\n\\n                if (this instanceof bound) {\\n                    // 15.3.4.5.2 [[Construct]]\\n                    // When the [[Construct]] internal method of a function object,\\n                    // F that was created using the bind function is called with a\\n                    // list of arguments ExtraArgs, the following steps are taken:\\n                    // 1. Let target be the value of F's [[TargetFunction]]\\n                    //   internal property.\\n                    // 2. If target has no [[Construct]] internal method, a\\n                    //   TypeError exception is thrown.\\n                    // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                    //   property.\\n                    // 4. Let args be a new list containing the same values as the\\n                    //   list boundArgs in the same order followed by the same\\n                    //   values as the list ExtraArgs in the same order.\\n                    // 5. Return the result of calling the [[Construct]] internal\\n                    //   method of target providing args as the arguments.\\n\\n                    var result = apply.call(\\n                        target,\\n                        this,\\n                        array_concat.call(args, array_slice.call(arguments))\\n                    );\\n                    if ($Object(result) === result) {\\n                        return result;\\n                    }\\n                    return this;\\n\\n                } else {\\n                    // 15.3.4.5.1 [[Call]]\\n                    // When the [[Call]] internal method of a function object, F,\\n                    // which was created using the bind function is called with a\\n                    // this value and a list of arguments ExtraArgs, the following\\n                    // steps are taken:\\n                    // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\\n                    //   property.\\n                    // 2. Let boundThis be the value of F's [[BoundThis]] internal\\n                    //   property.\\n                    // 3. Let target be the value of F's [[TargetFunction]] internal\\n                    //   property.\\n                    // 4. Let args be a new list containing the same values as the\\n                    //   list boundArgs in the same order followed by the same\\n                    //   values as the list ExtraArgs in the same order.\\n                    // 5. Return the result of calling the [[Call]] internal method\\n                    //   of target providing boundThis as the this value and\\n                    //   providing args as the arguments.\\n\\n                    // equiv: target.call(this, ...boundArgs, ...args)\\n                    return apply.call(\\n                        target,\\n                        that,\\n                        array_concat.call(args, array_slice.call(arguments))\\n                    );\\n\\n                }\\n\\n            };\\n\\n            // 15. If the [[Class]] internal property of Target is \\\"Function\\\", then\\n            //     a. Let L be the length property of Target minus the length of A.\\n            //     b. Set the length own property of F to either 0 or L, whichever is\\n            //       larger.\\n            // 16. Else set the length own property of F to 0.\\n\\n            var boundLength = max(0, target.length - args.length);\\n\\n            // 17. Set the attributes of the length own property of F to the values\\n            //   specified in 15.3.5.1.\\n            var boundArgs = [];\\n            for (var i = 0; i < boundLength; i++) {\\n                array_push.call(boundArgs, '$' + i);\\n            }\\n\\n            // XXX Build a dynamic function with desired amount of arguments is the only\\n            // way to set the length property of a function.\\n            // In environments where Content Security Policies enabled (Chrome extensions,\\n            // for ex.) all use of eval or Function costructor throws an exception.\\n            // However in all of these environments Function.prototype.bind exists\\n            // and so this code will never be executed.\\n            bound = $Function('binder', 'return function (' + array_join.call(boundArgs, ',') + '){ return binder.apply(this, arguments); }')(binder);\\n\\n            if (target.prototype) {\\n                Empty.prototype = target.prototype;\\n                bound.prototype = new Empty();\\n                // Clean up dangling references.\\n                Empty.prototype = null;\\n            }\\n\\n            // TODO\\n            // 18. Set the [[Extensible]] internal property of F to true.\\n\\n            // TODO\\n            // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\\n            // 20. Call the [[DefineOwnProperty]] internal method of F with\\n            //   arguments \\\"caller\\\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\\n            //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\\n            //   false.\\n            // 21. Call the [[DefineOwnProperty]] internal method of F with\\n            //   arguments \\\"arguments\\\", PropertyDescriptor {[[Get]]: thrower,\\n            //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\\n            //   and false.\\n\\n            // TODO\\n            // NOTE Function objects created using Function.prototype.bind do not\\n            // have a prototype property or the [[Code]], [[FormalParameters]], and\\n            // [[Scope]] internal properties.\\n            // XXX can't delete prototype in pure-js.\\n\\n            // 22. Return F.\\n            return bound;\\n        }\\n    });\\n\\n    // _Please note: Shortcuts are defined after `Function.prototype.bind` as we\\n    // use it in defining shortcuts.\\n    var owns = call.bind(ObjectPrototype.hasOwnProperty);\\n    var toStr = call.bind(ObjectPrototype.toString);\\n    var arraySlice = call.bind(array_slice);\\n    var arraySliceApply = apply.bind(array_slice);\\n    var strSlice = call.bind(StringPrototype.slice);\\n    var strSplit = call.bind(StringPrototype.split);\\n    var strIndexOf = call.bind(StringPrototype.indexOf);\\n    var pushCall = call.bind(array_push);\\n    var isEnum = call.bind(ObjectPrototype.propertyIsEnumerable);\\n    var arraySort = call.bind(ArrayPrototype.sort);\\n\\n    //\\n    // Array\\n    // =====\\n    //\\n\\n    var isArray = $Array.isArray || function isArray(obj) {\\n        return toStr(obj) === '[object Array]';\\n    };\\n\\n    // ES5 15.4.4.12\\n    // http://es5.github.com/#x15.4.4.13\\n    // Return len+argCount.\\n    // [bugfix, ielt8]\\n    // IE < 8 bug: [].unshift(0) === undefined but should be \\\"1\\\"\\n    var hasUnshiftReturnValueBug = [].unshift(0) !== 1;\\n    defineProperties(ArrayPrototype, {\\n        unshift: function () {\\n            array_unshift.apply(this, arguments);\\n            return this.length;\\n        }\\n    }, hasUnshiftReturnValueBug);\\n\\n    // ES5 15.4.3.2\\n    // http://es5.github.com/#x15.4.3.2\\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray\\n    defineProperties($Array, { isArray: isArray });\\n\\n    // The IsCallable() check in the Array functions\\n    // has been replaced with a strict check on the\\n    // internal class of the object to trap cases where\\n    // the provided function was actually a regular\\n    // expression literal, which in V8 and\\n    // JavaScriptCore is a typeof \\\"function\\\".  Only in\\n    // V8 are regular expression literals permitted as\\n    // reduce parameters, so it is desirable in the\\n    // general case for the shim to match the more\\n    // strict and common behavior of rejecting regular\\n    // expressions.\\n\\n    // ES5 15.4.4.18\\n    // http://es5.github.com/#x15.4.4.18\\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/array/forEach\\n\\n    // Check failure of by-index access of string characters (IE < 9)\\n    // and failure of `0 in boxedString` (Rhino)\\n    var boxedString = $Object('a');\\n    var splitString = boxedString[0] !== 'a' || !(0 in boxedString);\\n\\n    var properlyBoxesContext = function properlyBoxed(method) {\\n        // Check node 0.6.21 bug where third parameter is not boxed\\n        var properlyBoxesNonStrict = true;\\n        var properlyBoxesStrict = true;\\n        var threwException = false;\\n        if (method) {\\n            try {\\n                method.call('foo', function (_, __, context) {\\n                    if (typeof context !== 'object') {\\n                        properlyBoxesNonStrict = false;\\n                    }\\n                });\\n\\n                method.call([1], function () {\\n                    'use strict';\\n\\n                    properlyBoxesStrict = typeof this === 'string';\\n                }, 'x');\\n            } catch (e) {\\n                threwException = true;\\n            }\\n        }\\n        return !!method && !threwException && properlyBoxesNonStrict && properlyBoxesStrict;\\n    };\\n\\n    defineProperties(ArrayPrototype, {\\n        forEach: function forEach(callbackfn/*, thisArg*/) {\\n            var object = ES.ToObject(this);\\n            var self = splitString && isString(this) ? strSplit(this, '') : object;\\n            var i = -1;\\n            var length = ES.ToUint32(self.length);\\n            var T;\\n            if (arguments.length > 1) {\\n                T = arguments[1];\\n            }\\n\\n            // If no callback function or if callback is not a callable function\\n            if (!isCallable(callbackfn)) {\\n                throw new TypeError('Array.prototype.forEach callback must be a function');\\n            }\\n\\n            while (++i < length) {\\n                if (i in self) {\\n                    // Invoke the callback function with call, passing arguments:\\n                    // context, property value, property key, thisArg object\\n                    if (typeof T === 'undefined') {\\n                        callbackfn(self[i], i, object);\\n                    } else {\\n                        callbackfn.call(T, self[i], i, object);\\n                    }\\n                }\\n            }\\n        }\\n    }, !properlyBoxesContext(ArrayPrototype.forEach));\\n\\n    // ES5 15.4.4.19\\n    // http://es5.github.com/#x15.4.4.19\\n    // https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map\\n    defineProperties(ArrayPrototype, {\\n        map: function map(callbackfn/*, thisArg*/) {\\n            var object = ES.ToObject(this);\\n            var self = splitString && isString(this) ? strSplit(this, '') : object;\\n            var length = ES.ToUint32(self.length);\\n            var result = $Array(length);\\n            var T;\\n            if (arguments.length > 1) {\\n                T = arguments[1];\\n            }\\n\\n            // If no callback function or if callback is not a callable function\\n            if (!isCallable(callbackfn)) {\\n                throw new TypeError('Array.prototype.map callback must be a function');\\n            }\\n\\n            for (var i = 0; i < length; i++) {\\n                if (i in self) {\\n                    if (typeof T === 'undefined') {\\n                        result[i] = callbackfn(self[i], i, object);\\n                    } else {\\n                        result[i] = callbackfn.call(T, self[i], i, object);\\n                    }\\n                }\\n            }\\n            return result;\\n        }\\n    }, !properlyBoxesContext(ArrayPrototype.map));\\n\\n    // ES5 15.4.4.20\\n    // http://es5.github.com/#x15.4.4.20\\n    // https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\\n    defineProperties(ArrayPrototype, {\\n        filter: function filter(callbackfn/*, thisArg*/) {\\n            var object = ES.ToObject(this);\\n            var self = splitString && isString(this) ? strSplit(this, '') : object;\\n            var length = ES.ToUint32(self.length);\\n            var result = [];\\n            var value;\\n            var T;\\n            if (arguments.length > 1) {\\n                T = arguments[1];\\n            }\\n\\n            // If no callback function or if callback is not a callable function\\n            if (!isCallable(callbackfn)) {\\n                throw new TypeError('Array.prototype.filter callback must be a function');\\n            }\\n\\n            for (var i = 0; i < length; i++) {\\n                if (i in self) {\\n                    value = self[i];\\n                    if (typeof T === 'undefined' ? callbackfn(value, i, object) : callbackfn.call(T, value, i, object)) {\\n                        pushCall(result, value);\\n                    }\\n                }\\n            }\\n            return result;\\n        }\\n    }, !properlyBoxesContext(ArrayPrototype.filter));\\n\\n    // ES5 15.4.4.16\\n    // http://es5.github.com/#x15.4.4.16\\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every\\n    defineProperties(ArrayPrototype, {\\n        every: function every(callbackfn/*, thisArg*/) {\\n            var object = ES.ToObject(this);\\n            var self = splitString && isString(this) ? strSplit(this, '') : object;\\n            var length = ES.ToUint32(self.length);\\n            var T;\\n            if (arguments.length > 1) {\\n                T = arguments[1];\\n            }\\n\\n            // If no callback function or if callback is not a callable function\\n            if (!isCallable(callbackfn)) {\\n                throw new TypeError('Array.prototype.every callback must be a function');\\n            }\\n\\n            for (var i = 0; i < length; i++) {\\n                if (i in self && !(typeof T === 'undefined' ? callbackfn(self[i], i, object) : callbackfn.call(T, self[i], i, object))) {\\n                    return false;\\n                }\\n            }\\n            return true;\\n        }\\n    }, !properlyBoxesContext(ArrayPrototype.every));\\n\\n    // ES5 15.4.4.17\\n    // http://es5.github.com/#x15.4.4.17\\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some\\n    defineProperties(ArrayPrototype, {\\n        some: function some(callbackfn/*, thisArg */) {\\n            var object = ES.ToObject(this);\\n            var self = splitString && isString(this) ? strSplit(this, '') : object;\\n            var length = ES.ToUint32(self.length);\\n            var T;\\n            if (arguments.length > 1) {\\n                T = arguments[1];\\n            }\\n\\n            // If no callback function or if callback is not a callable function\\n            if (!isCallable(callbackfn)) {\\n                throw new TypeError('Array.prototype.some callback must be a function');\\n            }\\n\\n            for (var i = 0; i < length; i++) {\\n                if (i in self && (typeof T === 'undefined' ? callbackfn(self[i], i, object) : callbackfn.call(T, self[i], i, object))) {\\n                    return true;\\n                }\\n            }\\n            return false;\\n        }\\n    }, !properlyBoxesContext(ArrayPrototype.some));\\n\\n    // ES5 15.4.4.21\\n    // http://es5.github.com/#x15.4.4.21\\n    // https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduce\\n    var reduceCoercesToObject = false;\\n    if (ArrayPrototype.reduce) {\\n        reduceCoercesToObject = typeof ArrayPrototype.reduce.call('es5', function (_, __, ___, list) {\\n            return list;\\n        }) === 'object';\\n    }\\n    defineProperties(ArrayPrototype, {\\n        reduce: function reduce(callbackfn/*, initialValue*/) {\\n            var object = ES.ToObject(this);\\n            var self = splitString && isString(this) ? strSplit(this, '') : object;\\n            var length = ES.ToUint32(self.length);\\n\\n            // If no callback function or if callback is not a callable function\\n            if (!isCallable(callbackfn)) {\\n                throw new TypeError('Array.prototype.reduce callback must be a function');\\n            }\\n\\n            // no value to return if no initial value and an empty array\\n            if (length === 0 && arguments.length === 1) {\\n                throw new TypeError('reduce of empty array with no initial value');\\n            }\\n\\n            var i = 0;\\n            var result;\\n            if (arguments.length >= 2) {\\n                result = arguments[1];\\n            } else {\\n                do {\\n                    if (i in self) {\\n                        result = self[i++];\\n                        break;\\n                    }\\n\\n                    // if array contains no values, no initial value to return\\n                    if (++i >= length) {\\n                        throw new TypeError('reduce of empty array with no initial value');\\n                    }\\n                } while (true);\\n            }\\n\\n            for (; i < length; i++) {\\n                if (i in self) {\\n                    result = callbackfn(result, self[i], i, object);\\n                }\\n            }\\n\\n            return result;\\n        }\\n    }, !reduceCoercesToObject);\\n\\n    // ES5 15.4.4.22\\n    // http://es5.github.com/#x15.4.4.22\\n    // https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduceRight\\n    var reduceRightCoercesToObject = false;\\n    if (ArrayPrototype.reduceRight) {\\n        reduceRightCoercesToObject = typeof ArrayPrototype.reduceRight.call('es5', function (_, __, ___, list) {\\n            return list;\\n        }) === 'object';\\n    }\\n    defineProperties(ArrayPrototype, {\\n        reduceRight: function reduceRight(callbackfn/*, initial*/) {\\n            var object = ES.ToObject(this);\\n            var self = splitString && isString(this) ? strSplit(this, '') : object;\\n            var length = ES.ToUint32(self.length);\\n\\n            // If no callback function or if callback is not a callable function\\n            if (!isCallable(callbackfn)) {\\n                throw new TypeError('Array.prototype.reduceRight callback must be a function');\\n            }\\n\\n            // no value to return if no initial value, empty array\\n            if (length === 0 && arguments.length === 1) {\\n                throw new TypeError('reduceRight of empty array with no initial value');\\n            }\\n\\n            var result;\\n            var i = length - 1;\\n            if (arguments.length >= 2) {\\n                result = arguments[1];\\n            } else {\\n                do {\\n                    if (i in self) {\\n                        result = self[i--];\\n                        break;\\n                    }\\n\\n                    // if array contains no values, no initial value to return\\n                    if (--i < 0) {\\n                        throw new TypeError('reduceRight of empty array with no initial value');\\n                    }\\n                } while (true);\\n            }\\n\\n            if (i < 0) {\\n                return result;\\n            }\\n\\n            do {\\n                if (i in self) {\\n                    result = callbackfn(result, self[i], i, object);\\n                }\\n            } while (i--);\\n\\n            return result;\\n        }\\n    }, !reduceRightCoercesToObject);\\n\\n    // ES5 15.4.4.14\\n    // http://es5.github.com/#x15.4.4.14\\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\\n    var hasFirefox2IndexOfBug = ArrayPrototype.indexOf && [0, 1].indexOf(1, 2) !== -1;\\n    defineProperties(ArrayPrototype, {\\n        indexOf: function indexOf(searchElement/*, fromIndex */) {\\n            var self = splitString && isString(this) ? strSplit(this, '') : ES.ToObject(this);\\n            var length = ES.ToUint32(self.length);\\n\\n            if (length === 0) {\\n                return -1;\\n            }\\n\\n            var i = 0;\\n            if (arguments.length > 1) {\\n                i = ES.ToInteger(arguments[1]);\\n            }\\n\\n            // handle negative indices\\n            i = i >= 0 ? i : max(0, length + i);\\n            for (; i < length; i++) {\\n                if (i in self && self[i] === searchElement) {\\n                    return i;\\n                }\\n            }\\n            return -1;\\n        }\\n    }, hasFirefox2IndexOfBug);\\n\\n    // ES5 15.4.4.15\\n    // http://es5.github.com/#x15.4.4.15\\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/lastIndexOf\\n    var hasFirefox2LastIndexOfBug = ArrayPrototype.lastIndexOf && [0, 1].lastIndexOf(0, -3) !== -1;\\n    defineProperties(ArrayPrototype, {\\n        lastIndexOf: function lastIndexOf(searchElement/*, fromIndex */) {\\n            var self = splitString && isString(this) ? strSplit(this, '') : ES.ToObject(this);\\n            var length = ES.ToUint32(self.length);\\n\\n            if (length === 0) {\\n                return -1;\\n            }\\n            var i = length - 1;\\n            if (arguments.length > 1) {\\n                i = min(i, ES.ToInteger(arguments[1]));\\n            }\\n            // handle negative indices\\n            i = i >= 0 ? i : length - Math.abs(i);\\n            for (; i >= 0; i--) {\\n                if (i in self && searchElement === self[i]) {\\n                    return i;\\n                }\\n            }\\n            return -1;\\n        }\\n    }, hasFirefox2LastIndexOfBug);\\n\\n    // ES5 15.4.4.12\\n    // http://es5.github.com/#x15.4.4.12\\n    var spliceNoopReturnsEmptyArray = (function () {\\n        var a = [1, 2];\\n        var result = a.splice();\\n        return a.length === 2 && isArray(result) && result.length === 0;\\n    }());\\n    defineProperties(ArrayPrototype, {\\n        // Safari 5.0 bug where .splice() returns undefined\\n        splice: function splice(start, deleteCount) {\\n            if (arguments.length === 0) {\\n                return [];\\n            } else {\\n                return array_splice.apply(this, arguments);\\n            }\\n        }\\n    }, !spliceNoopReturnsEmptyArray);\\n\\n    var spliceWorksWithEmptyObject = (function () {\\n        var obj = {};\\n        ArrayPrototype.splice.call(obj, 0, 0, 1);\\n        return obj.length === 1;\\n    }());\\n    defineProperties(ArrayPrototype, {\\n        splice: function splice(start, deleteCount) {\\n            if (arguments.length === 0) {\\n                return [];\\n            }\\n            var args = arguments;\\n            this.length = max(ES.ToInteger(this.length), 0);\\n            if (arguments.length > 0 && typeof deleteCount !== 'number') {\\n                args = arraySlice(arguments);\\n                if (args.length < 2) {\\n                    pushCall(args, this.length - start);\\n                } else {\\n                    args[1] = ES.ToInteger(deleteCount);\\n                }\\n            }\\n            return array_splice.apply(this, args);\\n        }\\n    }, !spliceWorksWithEmptyObject);\\n    var spliceWorksWithLargeSparseArrays = (function () {\\n        // Per https://github.com/es-shims/es5-shim/issues/295\\n        // Safari 7/8 breaks with sparse arrays of size 1e5 or greater\\n        var arr = new $Array(1e5);\\n        // note: the index MUST be 8 or larger or the test will false pass\\n        arr[8] = 'x';\\n        arr.splice(1, 1);\\n        // note: this test must be defined *after* the indexOf shim\\n        // per https://github.com/es-shims/es5-shim/issues/313\\n        return arr.indexOf('x') === 7;\\n    }());\\n    var spliceWorksWithSmallSparseArrays = (function () {\\n        // Per https://github.com/es-shims/es5-shim/issues/295\\n        // Opera 12.15 breaks on this, no idea why.\\n        var n = 256;\\n        var arr = [];\\n        arr[n] = 'a';\\n        arr.splice(n + 1, 0, 'b');\\n        return arr[n] === 'a';\\n    }());\\n    defineProperties(ArrayPrototype, {\\n        splice: function splice(start, deleteCount) {\\n            var O = ES.ToObject(this);\\n            var A = [];\\n            var len = ES.ToUint32(O.length);\\n            var relativeStart = ES.ToInteger(start);\\n            var actualStart = relativeStart < 0 ? max((len + relativeStart), 0) : min(relativeStart, len);\\n            var actualDeleteCount = min(max(ES.ToInteger(deleteCount), 0), len - actualStart);\\n\\n            var k = 0;\\n            var from;\\n            while (k < actualDeleteCount) {\\n                from = $String(actualStart + k);\\n                if (owns(O, from)) {\\n                    A[k] = O[from];\\n                }\\n                k += 1;\\n            }\\n\\n            var items = arraySlice(arguments, 2);\\n            var itemCount = items.length;\\n            var to;\\n            if (itemCount < actualDeleteCount) {\\n                k = actualStart;\\n                var maxK = len - actualDeleteCount;\\n                while (k < maxK) {\\n                    from = $String(k + actualDeleteCount);\\n                    to = $String(k + itemCount);\\n                    if (owns(O, from)) {\\n                        O[to] = O[from];\\n                    } else {\\n                        delete O[to];\\n                    }\\n                    k += 1;\\n                }\\n                k = len;\\n                var minK = len - actualDeleteCount + itemCount;\\n                while (k > minK) {\\n                    delete O[k - 1];\\n                    k -= 1;\\n                }\\n            } else if (itemCount > actualDeleteCount) {\\n                k = len - actualDeleteCount;\\n                while (k > actualStart) {\\n                    from = $String(k + actualDeleteCount - 1);\\n                    to = $String(k + itemCount - 1);\\n                    if (owns(O, from)) {\\n                        O[to] = O[from];\\n                    } else {\\n                        delete O[to];\\n                    }\\n                    k -= 1;\\n                }\\n            }\\n            k = actualStart;\\n            for (var i = 0; i < items.length; ++i) {\\n                O[k] = items[i];\\n                k += 1;\\n            }\\n            O.length = len - actualDeleteCount + itemCount;\\n\\n            return A;\\n        }\\n    }, !spliceWorksWithLargeSparseArrays || !spliceWorksWithSmallSparseArrays);\\n\\n    var originalJoin = ArrayPrototype.join;\\n    var hasStringJoinBug;\\n    try {\\n        hasStringJoinBug = Array.prototype.join.call('123', ',') !== '1,2,3';\\n    } catch (e) {\\n        hasStringJoinBug = true;\\n    }\\n    if (hasStringJoinBug) {\\n        defineProperties(ArrayPrototype, {\\n            join: function join(separator) {\\n                var sep = typeof separator === 'undefined' ? ',' : separator;\\n                return originalJoin.call(isString(this) ? strSplit(this, '') : this, sep);\\n            }\\n        }, hasStringJoinBug);\\n    }\\n\\n    var hasJoinUndefinedBug = [1, 2].join(undefined) !== '1,2';\\n    if (hasJoinUndefinedBug) {\\n        defineProperties(ArrayPrototype, {\\n            join: function join(separator) {\\n                var sep = typeof separator === 'undefined' ? ',' : separator;\\n                return originalJoin.call(this, sep);\\n            }\\n        }, hasJoinUndefinedBug);\\n    }\\n\\n    var pushShim = function push(item) {\\n        var O = ES.ToObject(this);\\n        var n = ES.ToUint32(O.length);\\n        var i = 0;\\n        while (i < arguments.length) {\\n            O[n + i] = arguments[i];\\n            i += 1;\\n        }\\n        O.length = n + i;\\n        return n + i;\\n    };\\n\\n    var pushIsNotGeneric = (function () {\\n        var obj = {};\\n        var result = Array.prototype.push.call(obj, undefined);\\n        return result !== 1 || obj.length !== 1 || typeof obj[0] !== 'undefined' || !owns(obj, 0);\\n    }());\\n    defineProperties(ArrayPrototype, {\\n        push: function push(item) {\\n            if (isArray(this)) {\\n                return array_push.apply(this, arguments);\\n            }\\n            return pushShim.apply(this, arguments);\\n        }\\n    }, pushIsNotGeneric);\\n\\n    // This fixes a very weird bug in Opera 10.6 when pushing `undefined\\n    var pushUndefinedIsWeird = (function () {\\n        var arr = [];\\n        var result = arr.push(undefined);\\n        return result !== 1 || arr.length !== 1 || typeof arr[0] !== 'undefined' || !owns(arr, 0);\\n    }());\\n    defineProperties(ArrayPrototype, { push: pushShim }, pushUndefinedIsWeird);\\n\\n    // ES5 15.2.3.14\\n    // http://es5.github.io/#x15.4.4.10\\n    // Fix boxed string bug\\n    defineProperties(ArrayPrototype, {\\n        slice: function (start, end) {\\n            var arr = isString(this) ? strSplit(this, '') : this;\\n            return arraySliceApply(arr, arguments);\\n        }\\n    }, splitString);\\n\\n    var sortIgnoresNonFunctions = (function () {\\n        try {\\n            [1, 2].sort(null);\\n            [1, 2].sort({});\\n            return true;\\n        } catch (e) {}\\n        return false;\\n    }());\\n    var sortThrowsOnRegex = (function () {\\n        // this is a problem in Firefox 4, in which `typeof /a/ === 'function'`\\n        try {\\n            [1, 2].sort(/a/);\\n            return false;\\n        } catch (e) {}\\n        return true;\\n    }());\\n    var sortIgnoresUndefined = (function () {\\n        // applies in IE 8, for one.\\n        try {\\n            [1, 2].sort(undefined);\\n            return true;\\n        } catch (e) {}\\n        return false;\\n    }());\\n    defineProperties(ArrayPrototype, {\\n        sort: function sort(compareFn) {\\n            if (typeof compareFn === 'undefined') {\\n                return arraySort(this);\\n            }\\n            if (!isCallable(compareFn)) {\\n                throw new TypeError('Array.prototype.sort callback must be a function');\\n            }\\n            return arraySort(this, compareFn);\\n        }\\n    }, sortIgnoresNonFunctions || !sortIgnoresUndefined || !sortThrowsOnRegex);\\n\\n    //\\n    // Object\\n    // ======\\n    //\\n\\n    // ES5 15.2.3.14\\n    // http://es5.github.com/#x15.2.3.14\\n\\n    // http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\\n    var hasDontEnumBug = !isEnum({ 'toString': null }, 'toString');\\n    var hasProtoEnumBug = isEnum(function () {}, 'prototype');\\n    var hasStringEnumBug = !owns('x', '0');\\n    var equalsConstructorPrototype = function (o) {\\n        var ctor = o.constructor;\\n        return ctor && ctor.prototype === o;\\n    };\\n    var blacklistedKeys = {\\n        $window: true,\\n        $console: true,\\n        $parent: true,\\n        $self: true,\\n        $frame: true,\\n        $frames: true,\\n        $frameElement: true,\\n        $webkitIndexedDB: true,\\n        $webkitStorageInfo: true,\\n        $external: true\\n    };\\n    var hasAutomationEqualityBug = (function () {\\n        /* globals window */\\n        if (typeof window === 'undefined') {\\n            return false;\\n        }\\n        for (var k in window) {\\n            try {\\n                if (!blacklistedKeys['$' + k] && owns(window, k) && window[k] !== null && typeof window[k] === 'object') {\\n                    equalsConstructorPrototype(window[k]);\\n                }\\n            } catch (e) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }());\\n    var equalsConstructorPrototypeIfNotBuggy = function (object) {\\n        if (typeof window === 'undefined' || !hasAutomationEqualityBug) {\\n            return equalsConstructorPrototype(object);\\n        }\\n        try {\\n            return equalsConstructorPrototype(object);\\n        } catch (e) {\\n            return false;\\n        }\\n    };\\n    var dontEnums = [\\n        'toString',\\n        'toLocaleString',\\n        'valueOf',\\n        'hasOwnProperty',\\n        'isPrototypeOf',\\n        'propertyIsEnumerable',\\n        'constructor'\\n    ];\\n    var dontEnumsLength = dontEnums.length;\\n\\n    // taken directly from https://github.com/ljharb/is-arguments/blob/master/index.js\\n    // can be replaced with require('is-arguments') if we ever use a build process instead\\n    var isStandardArguments = function isArguments(value) {\\n        return toStr(value) === '[object Arguments]';\\n    };\\n    var isLegacyArguments = function isArguments(value) {\\n        return value !== null &&\\n            typeof value === 'object' &&\\n            typeof value.length === 'number' &&\\n            value.length >= 0 &&\\n            !isArray(value) &&\\n            isCallable(value.callee);\\n    };\\n    var isArguments = isStandardArguments(arguments) ? isStandardArguments : isLegacyArguments;\\n\\n    defineProperties($Object, {\\n        keys: function keys(object) {\\n            var isFn = isCallable(object);\\n            var isArgs = isArguments(object);\\n            var isObject = object !== null && typeof object === 'object';\\n            var isStr = isObject && isString(object);\\n\\n            if (!isObject && !isFn && !isArgs) {\\n                throw new TypeError('Object.keys called on a non-object');\\n            }\\n\\n            var theKeys = [];\\n            var skipProto = hasProtoEnumBug && isFn;\\n            if ((isStr && hasStringEnumBug) || isArgs) {\\n                for (var i = 0; i < object.length; ++i) {\\n                    pushCall(theKeys, $String(i));\\n                }\\n            }\\n\\n            if (!isArgs) {\\n                for (var name in object) {\\n                    if (!(skipProto && name === 'prototype') && owns(object, name)) {\\n                        pushCall(theKeys, $String(name));\\n                    }\\n                }\\n            }\\n\\n            if (hasDontEnumBug) {\\n                var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\\n                for (var j = 0; j < dontEnumsLength; j++) {\\n                    var dontEnum = dontEnums[j];\\n                    if (!(skipConstructor && dontEnum === 'constructor') && owns(object, dontEnum)) {\\n                        pushCall(theKeys, dontEnum);\\n                    }\\n                }\\n            }\\n            return theKeys;\\n        }\\n    });\\n\\n    var keysWorksWithArguments = $Object.keys && (function () {\\n        // Safari 5.0 bug\\n        return $Object.keys(arguments).length === 2;\\n    }(1, 2));\\n    var keysHasArgumentsLengthBug = $Object.keys && (function () {\\n        var argKeys = $Object.keys(arguments);\\n        return arguments.length !== 1 || argKeys.length !== 1 || argKeys[0] !== 1;\\n    }(1));\\n    var originalKeys = $Object.keys;\\n    defineProperties($Object, {\\n        keys: function keys(object) {\\n            if (isArguments(object)) {\\n                return originalKeys(arraySlice(object));\\n            } else {\\n                return originalKeys(object);\\n            }\\n        }\\n    }, !keysWorksWithArguments || keysHasArgumentsLengthBug);\\n\\n    //\\n    // Date\\n    // ====\\n    //\\n\\n    var hasNegativeMonthYearBug = new Date(-3509827329600292).getUTCMonth() !== 0;\\n    var aNegativeTestDate = new Date(-1509842289600292);\\n    var aPositiveTestDate = new Date(1449662400000);\\n    var hasToUTCStringFormatBug = aNegativeTestDate.toUTCString() !== 'Mon, 01 Jan -45875 11:59:59 GMT';\\n    var hasToDateStringFormatBug;\\n    var hasToStringFormatBug;\\n    var timeZoneOffset = aNegativeTestDate.getTimezoneOffset();\\n    if (timeZoneOffset < -720) {\\n        hasToDateStringFormatBug = aNegativeTestDate.toDateString() !== 'Tue Jan 02 -45875';\\n        hasToStringFormatBug = !(/^Thu Dec 10 2015 \\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d GMT[-\\\\+]\\\\d\\\\d\\\\d\\\\d(?: |$)/).test(aPositiveTestDate.toString());\\n    } else {\\n        hasToDateStringFormatBug = aNegativeTestDate.toDateString() !== 'Mon Jan 01 -45875';\\n        hasToStringFormatBug = !(/^Wed Dec 09 2015 \\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d GMT[-\\\\+]\\\\d\\\\d\\\\d\\\\d(?: |$)/).test(aPositiveTestDate.toString());\\n    }\\n\\n    var originalGetFullYear = call.bind(Date.prototype.getFullYear);\\n    var originalGetMonth = call.bind(Date.prototype.getMonth);\\n    var originalGetDate = call.bind(Date.prototype.getDate);\\n    var originalGetUTCFullYear = call.bind(Date.prototype.getUTCFullYear);\\n    var originalGetUTCMonth = call.bind(Date.prototype.getUTCMonth);\\n    var originalGetUTCDate = call.bind(Date.prototype.getUTCDate);\\n    var originalGetUTCDay = call.bind(Date.prototype.getUTCDay);\\n    var originalGetUTCHours = call.bind(Date.prototype.getUTCHours);\\n    var originalGetUTCMinutes = call.bind(Date.prototype.getUTCMinutes);\\n    var originalGetUTCSeconds = call.bind(Date.prototype.getUTCSeconds);\\n    var originalGetUTCMilliseconds = call.bind(Date.prototype.getUTCMilliseconds);\\n    var dayName = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\\n    var monthName = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\\n    var daysInMonth = function daysInMonth(month, year) {\\n        return originalGetDate(new Date(year, month, 0));\\n    };\\n\\n    defineProperties(Date.prototype, {\\n        getFullYear: function getFullYear() {\\n            if (!this || !(this instanceof Date)) {\\n                throw new TypeError('this is not a Date object.');\\n            }\\n            var year = originalGetFullYear(this);\\n            if (year < 0 && originalGetMonth(this) > 11) {\\n                return year + 1;\\n            }\\n            return year;\\n        },\\n        getMonth: function getMonth() {\\n            if (!this || !(this instanceof Date)) {\\n                throw new TypeError('this is not a Date object.');\\n            }\\n            var year = originalGetFullYear(this);\\n            var month = originalGetMonth(this);\\n            if (year < 0 && month > 11) {\\n                return 0;\\n            }\\n            return month;\\n        },\\n        getDate: function getDate() {\\n            if (!this || !(this instanceof Date)) {\\n                throw new TypeError('this is not a Date object.');\\n            }\\n            var year = originalGetFullYear(this);\\n            var month = originalGetMonth(this);\\n            var date = originalGetDate(this);\\n            if (year < 0 && month > 11) {\\n                if (month === 12) {\\n                    return date;\\n                }\\n                var days = daysInMonth(0, year + 1);\\n                return (days - date) + 1;\\n            }\\n            return date;\\n        },\\n        getUTCFullYear: function getUTCFullYear() {\\n            if (!this || !(this instanceof Date)) {\\n                throw new TypeError('this is not a Date object.');\\n            }\\n            var year = originalGetUTCFullYear(this);\\n            if (year < 0 && originalGetUTCMonth(this) > 11) {\\n                return year + 1;\\n            }\\n            return year;\\n        },\\n        getUTCMonth: function getUTCMonth() {\\n            if (!this || !(this instanceof Date)) {\\n                throw new TypeError('this is not a Date object.');\\n            }\\n            var year = originalGetUTCFullYear(this);\\n            var month = originalGetUTCMonth(this);\\n            if (year < 0 && month > 11) {\\n                return 0;\\n            }\\n            return month;\\n        },\\n        getUTCDate: function getUTCDate() {\\n            if (!this || !(this instanceof Date)) {\\n                throw new TypeError('this is not a Date object.');\\n            }\\n            var year = originalGetUTCFullYear(this);\\n            var month = originalGetUTCMonth(this);\\n            var date = originalGetUTCDate(this);\\n            if (year < 0 && month > 11) {\\n                if (month === 12) {\\n                    return date;\\n                }\\n                var days = daysInMonth(0, year + 1);\\n                return (days - date) + 1;\\n            }\\n            return date;\\n        }\\n    }, hasNegativeMonthYearBug);\\n\\n    defineProperties(Date.prototype, {\\n        toUTCString: function toUTCString() {\\n            if (!this || !(this instanceof Date)) {\\n                throw new TypeError('this is not a Date object.');\\n            }\\n            var day = originalGetUTCDay(this);\\n            var date = originalGetUTCDate(this);\\n            var month = originalGetUTCMonth(this);\\n            var year = originalGetUTCFullYear(this);\\n            var hour = originalGetUTCHours(this);\\n            var minute = originalGetUTCMinutes(this);\\n            var second = originalGetUTCSeconds(this);\\n            return dayName[day] + ', ' +\\n                (date < 10 ? '0' + date : date) + ' ' +\\n                monthName[month] + ' ' +\\n                year + ' ' +\\n                (hour < 10 ? '0' + hour : hour) + ':' +\\n                (minute < 10 ? '0' + minute : minute) + ':' +\\n                (second < 10 ? '0' + second : second) + ' GMT';\\n        }\\n    }, hasNegativeMonthYearBug || hasToUTCStringFormatBug);\\n\\n    // Opera 12 has `,`\\n    defineProperties(Date.prototype, {\\n        toDateString: function toDateString() {\\n            if (!this || !(this instanceof Date)) {\\n                throw new TypeError('this is not a Date object.');\\n            }\\n            var day = this.getDay();\\n            var date = this.getDate();\\n            var month = this.getMonth();\\n            var year = this.getFullYear();\\n            return dayName[day] + ' ' +\\n                monthName[month] + ' ' +\\n                (date < 10 ? '0' + date : date) + ' ' +\\n                year;\\n        }\\n    }, hasNegativeMonthYearBug || hasToDateStringFormatBug);\\n\\n    // can't use defineProperties here because of toString enumeration issue in IE <= 8\\n    if (hasNegativeMonthYearBug || hasToStringFormatBug) {\\n        Date.prototype.toString = function toString() {\\n            if (!this || !(this instanceof Date)) {\\n                throw new TypeError('this is not a Date object.');\\n            }\\n            var day = this.getDay();\\n            var date = this.getDate();\\n            var month = this.getMonth();\\n            var year = this.getFullYear();\\n            var hour = this.getHours();\\n            var minute = this.getMinutes();\\n            var second = this.getSeconds();\\n            var timezoneOffset = this.getTimezoneOffset();\\n            var hoursOffset = Math.floor(Math.abs(timezoneOffset) / 60);\\n            var minutesOffset = Math.floor(Math.abs(timezoneOffset) % 60);\\n            return dayName[day] + ' ' +\\n                monthName[month] + ' ' +\\n                (date < 10 ? '0' + date : date) + ' ' +\\n                year + ' ' +\\n                (hour < 10 ? '0' + hour : hour) + ':' +\\n                (minute < 10 ? '0' + minute : minute) + ':' +\\n                (second < 10 ? '0' + second : second) + ' GMT' +\\n                (timezoneOffset > 0 ? '-' : '+') +\\n                (hoursOffset < 10 ? '0' + hoursOffset : hoursOffset) +\\n                (minutesOffset < 10 ? '0' + minutesOffset : minutesOffset);\\n        };\\n        if (supportsDescriptors) {\\n            $Object.defineProperty(Date.prototype, 'toString', {\\n                configurable: true,\\n                enumerable: false,\\n                writable: true\\n            });\\n        }\\n    }\\n\\n    // ES5 15.9.5.43\\n    // http://es5.github.com/#x15.9.5.43\\n    // This function returns a String value represent the instance in time\\n    // represented by this Date object. The format of the String is the Date Time\\n    // string format defined in 15.9.1.15. All fields are present in the String.\\n    // The time zone is always UTC, denoted by the suffix Z. If the time value of\\n    // this object is not a finite Number a RangeError exception is thrown.\\n    var negativeDate = -62198755200000;\\n    var negativeYearString = '-000001';\\n    var hasNegativeDateBug = Date.prototype.toISOString && new Date(negativeDate).toISOString().indexOf(negativeYearString) === -1;\\n    var hasSafari51DateBug = Date.prototype.toISOString && new Date(-1).toISOString() !== '1969-12-31T23:59:59.999Z';\\n\\n    var getTime = call.bind(Date.prototype.getTime);\\n\\n    defineProperties(Date.prototype, {\\n        toISOString: function toISOString() {\\n            if (!isFinite(this) || !isFinite(getTime(this))) {\\n                // Adope Photoshop requires the second check.\\n                throw new RangeError('Date.prototype.toISOString called on non-finite value.');\\n            }\\n\\n            var year = originalGetUTCFullYear(this);\\n\\n            var month = originalGetUTCMonth(this);\\n            // see https://github.com/es-shims/es5-shim/issues/111\\n            year += Math.floor(month / 12);\\n            month = (month % 12 + 12) % 12;\\n\\n            // the date time string format is specified in 15.9.1.15.\\n            var result = [month + 1, originalGetUTCDate(this), originalGetUTCHours(this), originalGetUTCMinutes(this), originalGetUTCSeconds(this)];\\n            year = (\\n                (year < 0 ? '-' : (year > 9999 ? '+' : '')) +\\n                strSlice('00000' + Math.abs(year), (0 <= year && year <= 9999) ? -4 : -6)\\n            );\\n\\n            for (var i = 0; i < result.length; ++i) {\\n                // pad months, days, hours, minutes, and seconds to have two digits.\\n                result[i] = strSlice('00' + result[i], -2);\\n            }\\n            // pad milliseconds to have three digits.\\n            return (\\n                year + '-' + arraySlice(result, 0, 2).join('-') +\\n                'T' + arraySlice(result, 2).join(':') + '.' +\\n                strSlice('000' + originalGetUTCMilliseconds(this), -3) + 'Z'\\n            );\\n        }\\n    }, hasNegativeDateBug || hasSafari51DateBug);\\n\\n    // ES5 15.9.5.44\\n    // http://es5.github.com/#x15.9.5.44\\n    // This function provides a String representation of a Date object for use by\\n    // JSON.stringify (15.12.3).\\n    var dateToJSONIsSupported = (function () {\\n        try {\\n            return Date.prototype.toJSON &&\\n                new Date(NaN).toJSON() === null &&\\n                new Date(negativeDate).toJSON().indexOf(negativeYearString) !== -1 &&\\n                Date.prototype.toJSON.call({ // generic\\n                    toISOString: function () { return true; }\\n                });\\n        } catch (e) {\\n            return false;\\n        }\\n    }());\\n    if (!dateToJSONIsSupported) {\\n        Date.prototype.toJSON = function toJSON(key) {\\n            // When the toJSON method is called with argument key, the following\\n            // steps are taken:\\n\\n            // 1.  Let O be the result of calling ToObject, giving it the this\\n            // value as its argument.\\n            // 2. Let tv be ES.ToPrimitive(O, hint Number).\\n            var O = $Object(this);\\n            var tv = ES.ToPrimitive(O);\\n            // 3. If tv is a Number and is not finite, return null.\\n            if (typeof tv === 'number' && !isFinite(tv)) {\\n                return null;\\n            }\\n            // 4. Let toISO be the result of calling the [[Get]] internal method of\\n            // O with argument \\\"toISOString\\\".\\n            var toISO = O.toISOString;\\n            // 5. If IsCallable(toISO) is false, throw a TypeError exception.\\n            if (!isCallable(toISO)) {\\n                throw new TypeError('toISOString property is not callable');\\n            }\\n            // 6. Return the result of calling the [[Call]] internal method of\\n            //  toISO with O as the this value and an empty argument list.\\n            return toISO.call(O);\\n\\n            // NOTE 1 The argument is ignored.\\n\\n            // NOTE 2 The toJSON function is intentionally generic; it does not\\n            // require that its this value be a Date object. Therefore, it can be\\n            // transferred to other kinds of objects for use as a method. However,\\n            // it does require that any such object have a toISOString method. An\\n            // object is free to use the argument key to filter its\\n            // stringification.\\n        };\\n    }\\n\\n    // ES5 15.9.4.2\\n    // http://es5.github.com/#x15.9.4.2\\n    // based on work shared by Daniel Friesen (dantman)\\n    // http://gist.github.com/303249\\n    var supportsExtendedYears = Date.parse('+033658-09-27T01:46:40.000Z') === 1e15;\\n    var acceptsInvalidDates = !isNaN(Date.parse('2012-04-04T24:00:00.500Z')) || !isNaN(Date.parse('2012-11-31T23:59:59.000Z')) || !isNaN(Date.parse('2012-12-31T23:59:60.000Z'));\\n    var doesNotParseY2KNewYear = isNaN(Date.parse('2000-01-01T00:00:00.000Z'));\\n    if (doesNotParseY2KNewYear || acceptsInvalidDates || !supportsExtendedYears) {\\n        // XXX global assignment won't work in embeddings that use\\n        // an alternate object for the context.\\n        /* global Date: true */\\n        /* eslint-disable no-undef */\\n        var maxSafeUnsigned32Bit = Math.pow(2, 31) - 1;\\n        var hasSafariSignedIntBug = isActualNaN(new Date(1970, 0, 1, 0, 0, 0, maxSafeUnsigned32Bit + 1).getTime());\\n        /* eslint-disable no-implicit-globals */\\n        Date = (function (NativeDate) {\\n        /* eslint-enable no-implicit-globals */\\n        /* eslint-enable no-undef */\\n            // Date.length === 7\\n            var DateShim = function Date(Y, M, D, h, m, s, ms) {\\n                var length = arguments.length;\\n                var date;\\n                if (this instanceof NativeDate) {\\n                    var seconds = s;\\n                    var millis = ms;\\n                    if (hasSafariSignedIntBug && length >= 7 && ms > maxSafeUnsigned32Bit) {\\n                        // work around a Safari 8/9 bug where it treats the seconds as signed\\n                        var msToShift = Math.floor(ms / maxSafeUnsigned32Bit) * maxSafeUnsigned32Bit;\\n                        var sToShift = Math.floor(msToShift / 1e3);\\n                        seconds += sToShift;\\n                        millis -= sToShift * 1e3;\\n                    }\\n                    date = length === 1 && $String(Y) === Y ? // isString(Y)\\n                        // We explicitly pass it through parse:\\n                        new NativeDate(DateShim.parse(Y)) :\\n                        // We have to manually make calls depending on argument\\n                        // length here\\n                        length >= 7 ? new NativeDate(Y, M, D, h, m, seconds, millis) :\\n                        length >= 6 ? new NativeDate(Y, M, D, h, m, seconds) :\\n                        length >= 5 ? new NativeDate(Y, M, D, h, m) :\\n                        length >= 4 ? new NativeDate(Y, M, D, h) :\\n                        length >= 3 ? new NativeDate(Y, M, D) :\\n                        length >= 2 ? new NativeDate(Y, M) :\\n                        length >= 1 ? new NativeDate(Y instanceof NativeDate ? +Y : Y) :\\n                                      new NativeDate();\\n                } else {\\n                    date = NativeDate.apply(this, arguments);\\n                }\\n                if (!isPrimitive(date)) {\\n                    // Prevent mixups with unfixed Date object\\n                    defineProperties(date, { constructor: DateShim }, true);\\n                }\\n                return date;\\n            };\\n\\n            // 15.9.1.15 Date Time String Format.\\n            var isoDateExpression = new RegExp('^' +\\n                '(\\\\\\\\d{4}|[+-]\\\\\\\\d{6})' + // four-digit year capture or sign +\\n                                          // 6-digit extended year\\n                '(?:-(\\\\\\\\d{2})' + // optional month capture\\n                '(?:-(\\\\\\\\d{2})' + // optional day capture\\n                '(?:' + // capture hours:minutes:seconds.milliseconds\\n                    'T(\\\\\\\\d{2})' + // hours capture\\n                    ':(\\\\\\\\d{2})' + // minutes capture\\n                    '(?:' + // optional :seconds.milliseconds\\n                        ':(\\\\\\\\d{2})' + // seconds capture\\n                        '(?:(\\\\\\\\.\\\\\\\\d{1,}))?' + // milliseconds capture\\n                    ')?' +\\n                '(' + // capture UTC offset component\\n                    'Z|' + // UTC capture\\n                    '(?:' + // offset specifier +/-hours:minutes\\n                        '([-+])' + // sign capture\\n                        '(\\\\\\\\d{2})' + // hours offset capture\\n                        ':(\\\\\\\\d{2})' + // minutes offset capture\\n                    ')' +\\n                ')?)?)?)?' +\\n            '$');\\n\\n            var months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\\n\\n            var dayFromMonth = function dayFromMonth(year, month) {\\n                var t = month > 1 ? 1 : 0;\\n                return (\\n                    months[month] +\\n                    Math.floor((year - 1969 + t) / 4) -\\n                    Math.floor((year - 1901 + t) / 100) +\\n                    Math.floor((year - 1601 + t) / 400) +\\n                    365 * (year - 1970)\\n                );\\n            };\\n\\n            var toUTC = function toUTC(t) {\\n                var s = 0;\\n                var ms = t;\\n                if (hasSafariSignedIntBug && ms > maxSafeUnsigned32Bit) {\\n                    // work around a Safari 8/9 bug where it treats the seconds as signed\\n                    var msToShift = Math.floor(ms / maxSafeUnsigned32Bit) * maxSafeUnsigned32Bit;\\n                    var sToShift = Math.floor(msToShift / 1e3);\\n                    s += sToShift;\\n                    ms -= sToShift * 1e3;\\n                }\\n                return $Number(new NativeDate(1970, 0, 1, 0, 0, s, ms));\\n            };\\n\\n            // Copy any custom methods a 3rd party library may have added\\n            for (var key in NativeDate) {\\n                if (owns(NativeDate, key)) {\\n                    DateShim[key] = NativeDate[key];\\n                }\\n            }\\n\\n            // Copy \\\"native\\\" methods explicitly; they may be non-enumerable\\n            defineProperties(DateShim, {\\n                now: NativeDate.now,\\n                UTC: NativeDate.UTC\\n            }, true);\\n            DateShim.prototype = NativeDate.prototype;\\n            defineProperties(DateShim.prototype, {\\n                constructor: DateShim\\n            }, true);\\n\\n            // Upgrade Date.parse to handle simplified ISO 8601 strings\\n            var parseShim = function parse(string) {\\n                var match = isoDateExpression.exec(string);\\n                if (match) {\\n                    // parse months, days, hours, minutes, seconds, and milliseconds\\n                    // provide default values if necessary\\n                    // parse the UTC offset component\\n                    var year = $Number(match[1]),\\n                        month = $Number(match[2] || 1) - 1,\\n                        day = $Number(match[3] || 1) - 1,\\n                        hour = $Number(match[4] || 0),\\n                        minute = $Number(match[5] || 0),\\n                        second = $Number(match[6] || 0),\\n                        millisecond = Math.floor($Number(match[7] || 0) * 1000),\\n                        // When time zone is missed, local offset should be used\\n                        // (ES 5.1 bug)\\n                        // see https://bugs.ecmascript.org/show_bug.cgi?id=112\\n                        isLocalTime = Boolean(match[4] && !match[8]),\\n                        signOffset = match[9] === '-' ? 1 : -1,\\n                        hourOffset = $Number(match[10] || 0),\\n                        minuteOffset = $Number(match[11] || 0),\\n                        result;\\n                    var hasMinutesOrSecondsOrMilliseconds = minute > 0 || second > 0 || millisecond > 0;\\n                    if (\\n                        hour < (hasMinutesOrSecondsOrMilliseconds ? 24 : 25) &&\\n                        minute < 60 && second < 60 && millisecond < 1000 &&\\n                        month > -1 && month < 12 && hourOffset < 24 &&\\n                        minuteOffset < 60 && // detect invalid offsets\\n                        day > -1 &&\\n                        day < (dayFromMonth(year, month + 1) - dayFromMonth(year, month))\\n                    ) {\\n                        result = (\\n                            (dayFromMonth(year, month) + day) * 24 +\\n                            hour +\\n                            hourOffset * signOffset\\n                        ) * 60;\\n                        result = (\\n                            (result + minute + minuteOffset * signOffset) * 60 +\\n                            second\\n                        ) * 1000 + millisecond;\\n                        if (isLocalTime) {\\n                            result = toUTC(result);\\n                        }\\n                        if (-8.64e15 <= result && result <= 8.64e15) {\\n                            return result;\\n                        }\\n                    }\\n                    return NaN;\\n                }\\n                return NativeDate.parse.apply(this, arguments);\\n            };\\n            defineProperties(DateShim, { parse: parseShim });\\n\\n            return DateShim;\\n        }(Date));\\n        /* global Date: false */\\n    }\\n\\n    // ES5 15.9.4.4\\n    // http://es5.github.com/#x15.9.4.4\\n    if (!Date.now) {\\n        Date.now = function now() {\\n            return new Date().getTime();\\n        };\\n    }\\n\\n    //\\n    // Number\\n    // ======\\n    //\\n\\n    // ES5.1 15.7.4.5\\n    // http://es5.github.com/#x15.7.4.5\\n    var hasToFixedBugs = NumberPrototype.toFixed && (\\n      (0.00008).toFixed(3) !== '0.000' ||\\n      (0.9).toFixed(0) !== '1' ||\\n      (1.255).toFixed(2) !== '1.25' ||\\n      (1000000000000000128).toFixed(0) !== '1000000000000000128'\\n    );\\n\\n    var toFixedHelpers = {\\n        base: 1e7,\\n        size: 6,\\n        data: [0, 0, 0, 0, 0, 0],\\n        multiply: function multiply(n, c) {\\n            var i = -1;\\n            var c2 = c;\\n            while (++i < toFixedHelpers.size) {\\n                c2 += n * toFixedHelpers.data[i];\\n                toFixedHelpers.data[i] = c2 % toFixedHelpers.base;\\n                c2 = Math.floor(c2 / toFixedHelpers.base);\\n            }\\n        },\\n        divide: function divide(n) {\\n            var i = toFixedHelpers.size;\\n            var c = 0;\\n            while (--i >= 0) {\\n                c += toFixedHelpers.data[i];\\n                toFixedHelpers.data[i] = Math.floor(c / n);\\n                c = (c % n) * toFixedHelpers.base;\\n            }\\n        },\\n        numToString: function numToString() {\\n            var i = toFixedHelpers.size;\\n            var s = '';\\n            while (--i >= 0) {\\n                if (s !== '' || i === 0 || toFixedHelpers.data[i] !== 0) {\\n                    var t = $String(toFixedHelpers.data[i]);\\n                    if (s === '') {\\n                        s = t;\\n                    } else {\\n                        s += strSlice('0000000', 0, 7 - t.length) + t;\\n                    }\\n                }\\n            }\\n            return s;\\n        },\\n        pow: function pow(x, n, acc) {\\n            return (n === 0 ? acc : (n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc)));\\n        },\\n        log: function log(x) {\\n            var n = 0;\\n            var x2 = x;\\n            while (x2 >= 4096) {\\n                n += 12;\\n                x2 /= 4096;\\n            }\\n            while (x2 >= 2) {\\n                n += 1;\\n                x2 /= 2;\\n            }\\n            return n;\\n        }\\n    };\\n\\n    var toFixedShim = function toFixed(fractionDigits) {\\n        var f, x, s, m, e, z, j, k;\\n\\n        // Test for NaN and round fractionDigits down\\n        f = $Number(fractionDigits);\\n        f = isActualNaN(f) ? 0 : Math.floor(f);\\n\\n        if (f < 0 || f > 20) {\\n            throw new RangeError('Number.toFixed called with invalid number of decimals');\\n        }\\n\\n        x = $Number(this);\\n\\n        if (isActualNaN(x)) {\\n            return 'NaN';\\n        }\\n\\n        // If it is too big or small, return the string value of the number\\n        if (x <= -1e21 || x >= 1e21) {\\n            return $String(x);\\n        }\\n\\n        s = '';\\n\\n        if (x < 0) {\\n            s = '-';\\n            x = -x;\\n        }\\n\\n        m = '0';\\n\\n        if (x > 1e-21) {\\n            // 1e-21 < x < 1e21\\n            // -70 < log2(x) < 70\\n            e = toFixedHelpers.log(x * toFixedHelpers.pow(2, 69, 1)) - 69;\\n            z = (e < 0 ? x * toFixedHelpers.pow(2, -e, 1) : x / toFixedHelpers.pow(2, e, 1));\\n            z *= 0x10000000000000; // Math.pow(2, 52);\\n            e = 52 - e;\\n\\n            // -18 < e < 122\\n            // x = z / 2 ^ e\\n            if (e > 0) {\\n                toFixedHelpers.multiply(0, z);\\n                j = f;\\n\\n                while (j >= 7) {\\n                    toFixedHelpers.multiply(1e7, 0);\\n                    j -= 7;\\n                }\\n\\n                toFixedHelpers.multiply(toFixedHelpers.pow(10, j, 1), 0);\\n                j = e - 1;\\n\\n                while (j >= 23) {\\n                    toFixedHelpers.divide(1 << 23);\\n                    j -= 23;\\n                }\\n\\n                toFixedHelpers.divide(1 << j);\\n                toFixedHelpers.multiply(1, 1);\\n                toFixedHelpers.divide(2);\\n                m = toFixedHelpers.numToString();\\n            } else {\\n                toFixedHelpers.multiply(0, z);\\n                toFixedHelpers.multiply(1 << (-e), 0);\\n                m = toFixedHelpers.numToString() + strSlice('0.00000000000000000000', 2, 2 + f);\\n            }\\n        }\\n\\n        if (f > 0) {\\n            k = m.length;\\n\\n            if (k <= f) {\\n                m = s + strSlice('0.0000000000000000000', 0, f - k + 2) + m;\\n            } else {\\n                m = s + strSlice(m, 0, k - f) + '.' + strSlice(m, k - f);\\n            }\\n        } else {\\n            m = s + m;\\n        }\\n\\n        return m;\\n    };\\n    defineProperties(NumberPrototype, { toFixed: toFixedShim }, hasToFixedBugs);\\n\\n    var hasToPrecisionUndefinedBug = (function () {\\n        try {\\n            return 1.0.toPrecision(undefined) === '1';\\n        } catch (e) {\\n            return true;\\n        }\\n    }());\\n    var originalToPrecision = NumberPrototype.toPrecision;\\n    defineProperties(NumberPrototype, {\\n        toPrecision: function toPrecision(precision) {\\n            return typeof precision === 'undefined' ? originalToPrecision.call(this) : originalToPrecision.call(this, precision);\\n        }\\n    }, hasToPrecisionUndefinedBug);\\n\\n    //\\n    // String\\n    // ======\\n    //\\n\\n    // ES5 15.5.4.14\\n    // http://es5.github.com/#x15.5.4.14\\n\\n    // [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]\\n    // Many browsers do not split properly with regular expressions or they\\n    // do not perform the split correctly under obscure conditions.\\n    // See http://blog.stevenlevithan.com/archives/cross-browser-split\\n    // I've tested in many browsers and this seems to cover the deviant ones:\\n    //    'ab'.split(/(?:ab)*/) should be [\\\"\\\", \\\"\\\"], not [\\\"\\\"]\\n    //    '.'.split(/(.?)(.?)/) should be [\\\"\\\", \\\".\\\", \\\"\\\", \\\"\\\"], not [\\\"\\\", \\\"\\\"]\\n    //    'tesst'.split(/(s)*/) should be [\\\"t\\\", undefined, \\\"e\\\", \\\"s\\\", \\\"t\\\"], not\\n    //       [undefined, \\\"t\\\", undefined, \\\"e\\\", ...]\\n    //    ''.split(/.?/) should be [], not [\\\"\\\"]\\n    //    '.'.split(/()()/) should be [\\\".\\\"], not [\\\"\\\", \\\"\\\", \\\".\\\"]\\n\\n    if (\\n        'ab'.split(/(?:ab)*/).length !== 2 ||\\n        '.'.split(/(.?)(.?)/).length !== 4 ||\\n        'tesst'.split(/(s)*/)[1] === 't' ||\\n        'test'.split(/(?:)/, -1).length !== 4 ||\\n        ''.split(/.?/).length ||\\n        '.'.split(/()()/).length > 1\\n    ) {\\n        (function () {\\n            var compliantExecNpcg = typeof (/()??/).exec('')[1] === 'undefined'; // NPCG: nonparticipating capturing group\\n            var maxSafe32BitInt = Math.pow(2, 32) - 1;\\n\\n            StringPrototype.split = function (separator, limit) {\\n                var string = String(this);\\n                if (typeof separator === 'undefined' && limit === 0) {\\n                    return [];\\n                }\\n\\n                // If `separator` is not a regex, use native split\\n                if (!isRegex(separator)) {\\n                    return strSplit(this, separator, limit);\\n                }\\n\\n                var output = [];\\n                var flags = (separator.ignoreCase ? 'i' : '') +\\n                            (separator.multiline ? 'm' : '') +\\n                            (separator.unicode ? 'u' : '') + // in ES6\\n                            (separator.sticky ? 'y' : ''), // Firefox 3+ and ES6\\n                    lastLastIndex = 0,\\n                    // Make `global` and avoid `lastIndex` issues by working with a copy\\n                    separator2, match, lastIndex, lastLength;\\n                var separatorCopy = new RegExp(separator.source, flags + 'g');\\n                if (!compliantExecNpcg) {\\n                    // Doesn't need flags gy, but they don't hurt\\n                    separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\\\\\s)', flags);\\n                }\\n                /* Values for `limit`, per the spec:\\n                 * If undefined: 4294967295 // maxSafe32BitInt\\n                 * If 0, Infinity, or NaN: 0\\n                 * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\\n                 * If negative number: 4294967296 - Math.floor(Math.abs(limit))\\n                 * If other: Type-convert, then use the above rules\\n                 */\\n                var splitLimit = typeof limit === 'undefined' ? maxSafe32BitInt : ES.ToUint32(limit);\\n                match = separatorCopy.exec(string);\\n                while (match) {\\n                    // `separatorCopy.lastIndex` is not reliable cross-browser\\n                    lastIndex = match.index + match[0].length;\\n                    if (lastIndex > lastLastIndex) {\\n                        pushCall(output, strSlice(string, lastLastIndex, match.index));\\n                        // Fix browsers whose `exec` methods don't consistently return `undefined` for\\n                        // nonparticipating capturing groups\\n                        if (!compliantExecNpcg && match.length > 1) {\\n                            /* eslint-disable no-loop-func */\\n                            match[0].replace(separator2, function () {\\n                                for (var i = 1; i < arguments.length - 2; i++) {\\n                                    if (typeof arguments[i] === 'undefined') {\\n                                        match[i] = void 0;\\n                                    }\\n                                }\\n                            });\\n                            /* eslint-enable no-loop-func */\\n                        }\\n                        if (match.length > 1 && match.index < string.length) {\\n                            array_push.apply(output, arraySlice(match, 1));\\n                        }\\n                        lastLength = match[0].length;\\n                        lastLastIndex = lastIndex;\\n                        if (output.length >= splitLimit) {\\n                            break;\\n                        }\\n                    }\\n                    if (separatorCopy.lastIndex === match.index) {\\n                        separatorCopy.lastIndex++; // Avoid an infinite loop\\n                    }\\n                    match = separatorCopy.exec(string);\\n                }\\n                if (lastLastIndex === string.length) {\\n                    if (lastLength || !separatorCopy.test('')) {\\n                        pushCall(output, '');\\n                    }\\n                } else {\\n                    pushCall(output, strSlice(string, lastLastIndex));\\n                }\\n                return output.length > splitLimit ? arraySlice(output, 0, splitLimit) : output;\\n            };\\n        }());\\n\\n    // [bugfix, chrome]\\n    // If separator is undefined, then the result array contains just one String,\\n    // which is the this value (converted to a String). If limit is not undefined,\\n    // then the output array is truncated so that it contains no more than limit\\n    // elements.\\n    // \\\"0\\\".split(undefined, 0) -> []\\n    } else if ('0'.split(void 0, 0).length) {\\n        StringPrototype.split = function split(separator, limit) {\\n            if (typeof separator === 'undefined' && limit === 0) {\\n                return [];\\n            }\\n            return strSplit(this, separator, limit);\\n        };\\n    }\\n\\n    var str_replace = StringPrototype.replace;\\n    var replaceReportsGroupsCorrectly = (function () {\\n        var groups = [];\\n        'x'.replace(/x(.)?/g, function (match, group) {\\n            pushCall(groups, group);\\n        });\\n        return groups.length === 1 && typeof groups[0] === 'undefined';\\n    }());\\n\\n    if (!replaceReportsGroupsCorrectly) {\\n        StringPrototype.replace = function replace(searchValue, replaceValue) {\\n            var isFn = isCallable(replaceValue);\\n            var hasCapturingGroups = isRegex(searchValue) && (/\\\\)[*?]/).test(searchValue.source);\\n            if (!isFn || !hasCapturingGroups) {\\n                return str_replace.call(this, searchValue, replaceValue);\\n            } else {\\n                var wrappedReplaceValue = function (match) {\\n                    var length = arguments.length;\\n                    var originalLastIndex = searchValue.lastIndex;\\n                    searchValue.lastIndex = 0;\\n                    var args = searchValue.exec(match) || [];\\n                    searchValue.lastIndex = originalLastIndex;\\n                    pushCall(args, arguments[length - 2], arguments[length - 1]);\\n                    return replaceValue.apply(this, args);\\n                };\\n                return str_replace.call(this, searchValue, wrappedReplaceValue);\\n            }\\n        };\\n    }\\n\\n    // ECMA-262, 3rd B.2.3\\n    // Not an ECMAScript standard, although ECMAScript 3rd Edition has a\\n    // non-normative section suggesting uniform semantics and it should be\\n    // normalized across all browsers\\n    // [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE\\n    var string_substr = StringPrototype.substr;\\n    var hasNegativeSubstrBug = ''.substr && '0b'.substr(-1) !== 'b';\\n    defineProperties(StringPrototype, {\\n        substr: function substr(start, length) {\\n            var normalizedStart = start;\\n            if (start < 0) {\\n                normalizedStart = max(this.length + start, 0);\\n            }\\n            return string_substr.call(this, normalizedStart, length);\\n        }\\n    }, hasNegativeSubstrBug);\\n\\n    // ES5 15.5.4.20\\n    // whitespace from: http://es5.github.io/#x15.5.4.20\\n    var ws = '\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003' +\\n        '\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028' +\\n        '\\\\u2029\\\\uFEFF';\\n    var zeroWidth = '\\\\u200b';\\n    var wsRegexChars = '[' + ws + ']';\\n    var trimBeginRegexp = new RegExp('^' + wsRegexChars + wsRegexChars + '*');\\n    var trimEndRegexp = new RegExp(wsRegexChars + wsRegexChars + '*$');\\n    var hasTrimWhitespaceBug = StringPrototype.trim && (ws.trim() || !zeroWidth.trim());\\n    defineProperties(StringPrototype, {\\n        // http://blog.stevenlevithan.com/archives/faster-trim-javascript\\n        // http://perfectionkills.com/whitespace-deviations/\\n        trim: function trim() {\\n            if (typeof this === 'undefined' || this === null) {\\n                throw new TypeError(\\\"can't convert \\\" + this + ' to object');\\n            }\\n            return $String(this).replace(trimBeginRegexp, '').replace(trimEndRegexp, '');\\n        }\\n    }, hasTrimWhitespaceBug);\\n    var trim = call.bind(String.prototype.trim);\\n\\n    var hasLastIndexBug = StringPrototype.lastIndexOf && 'abcあい'.lastIndexOf('あい', 2) !== -1;\\n    defineProperties(StringPrototype, {\\n        lastIndexOf: function lastIndexOf(searchString) {\\n            if (typeof this === 'undefined' || this === null) {\\n                throw new TypeError(\\\"can't convert \\\" + this + ' to object');\\n            }\\n            var S = $String(this);\\n            var searchStr = $String(searchString);\\n            var numPos = arguments.length > 1 ? $Number(arguments[1]) : NaN;\\n            var pos = isActualNaN(numPos) ? Infinity : ES.ToInteger(numPos);\\n            var start = min(max(pos, 0), S.length);\\n            var searchLen = searchStr.length;\\n            var k = start + searchLen;\\n            while (k > 0) {\\n                k = max(0, k - searchLen);\\n                var index = strIndexOf(strSlice(S, k, start + searchLen), searchStr);\\n                if (index !== -1) {\\n                    return k + index;\\n                }\\n            }\\n            return -1;\\n        }\\n    }, hasLastIndexBug);\\n\\n    var originalLastIndexOf = StringPrototype.lastIndexOf;\\n    defineProperties(StringPrototype, {\\n        lastIndexOf: function lastIndexOf(searchString) {\\n            return originalLastIndexOf.apply(this, arguments);\\n        }\\n    }, StringPrototype.lastIndexOf.length !== 1);\\n\\n    // ES-5 15.1.2.2\\n    /* eslint-disable radix */\\n    if (parseInt(ws + '08') !== 8 || parseInt(ws + '0x16') !== 22) {\\n    /* eslint-enable radix */\\n        /* global parseInt: true */\\n        parseInt = (function (origParseInt) {\\n            var hexRegex = /^[\\\\-+]?0[xX]/;\\n            return function parseInt(str, radix) {\\n                var string = trim(String(str));\\n                var defaultedRadix = $Number(radix) || (hexRegex.test(string) ? 16 : 10);\\n                return origParseInt(string, defaultedRadix);\\n            };\\n        }(parseInt));\\n    }\\n\\n    // https://es5.github.io/#x15.1.2.3\\n    if (1 / parseFloat('-0') !== -Infinity) {\\n        /* global parseFloat: true */\\n        parseFloat = (function (origParseFloat) {\\n            return function parseFloat(string) {\\n                var inputString = trim(String(string));\\n                var result = origParseFloat(inputString);\\n                return result === 0 && strSlice(inputString, 0, 1) === '-' ? -0 : result;\\n            };\\n        }(parseFloat));\\n    }\\n\\n    if (String(new RangeError('test')) !== 'RangeError: test') {\\n        var errorToStringShim = function toString() {\\n            if (typeof this === 'undefined' || this === null) {\\n                throw new TypeError(\\\"can't convert \\\" + this + ' to object');\\n            }\\n            var name = this.name;\\n            if (typeof name === 'undefined') {\\n                name = 'Error';\\n            } else if (typeof name !== 'string') {\\n                name = $String(name);\\n            }\\n            var msg = this.message;\\n            if (typeof msg === 'undefined') {\\n                msg = '';\\n            } else if (typeof msg !== 'string') {\\n                msg = $String(msg);\\n            }\\n            if (!name) {\\n                return msg;\\n            }\\n            if (!msg) {\\n                return name;\\n            }\\n            return name + ': ' + msg;\\n        };\\n        // can't use defineProperties here because of toString enumeration issue in IE <= 8\\n        Error.prototype.toString = errorToStringShim;\\n    }\\n\\n    if (supportsDescriptors) {\\n        var ensureNonEnumerable = function (obj, prop) {\\n            if (isEnum(obj, prop)) {\\n                var desc = Object.getOwnPropertyDescriptor(obj, prop);\\n                if (desc.configurable) {\\n                    desc.enumerable = false;\\n                    Object.defineProperty(obj, prop, desc);\\n                }\\n            }\\n        };\\n        ensureNonEnumerable(Error.prototype, 'message');\\n        if (Error.prototype.message !== '') {\\n            Error.prototype.message = '';\\n        }\\n        ensureNonEnumerable(Error.prototype, 'name');\\n    }\\n\\n    if (String(/a/mig) !== '/a/gim') {\\n        var regexToString = function toString() {\\n            var str = '/' + this.source + '/';\\n            if (this.global) {\\n                str += 'g';\\n            }\\n            if (this.ignoreCase) {\\n                str += 'i';\\n            }\\n            if (this.multiline) {\\n                str += 'm';\\n            }\\n            return str;\\n        };\\n        // can't use defineProperties here because of toString enumeration issue in IE <= 8\\n        RegExp.prototype.toString = regexToString;\\n    }\\n}));\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Local Projects/manualruf/my-app/node_modules/raw-loader!C:/Local Projects/manualruf/my-app/node_modules/es5-shim/es5-shim.js\n// module id = ../../../../raw-loader/index.js!../../../../es5-shim/es5-shim.js\n// module chunks = scripts","module.exports = \" /*!\\n  * https://github.com/paulmillr/es6-shim\\n  * @license es6-shim Copyright 2013-2016 by Paul Miller (http://paulmillr.com)\\n  *   and contributors,  MIT License\\n  * es6-shim: v0.35.1\\n  * see https://github.com/paulmillr/es6-shim/blob/0.35.1/LICENSE\\n  * Details and documentation:\\n  * https://github.com/paulmillr/es6-shim/\\n  */\\n\\n// UMD (Universal Module Definition)\\n// see https://github.com/umdjs/umd/blob/master/returnExports.js\\n(function (root, factory) {\\n  /*global define, module, exports */\\n  if (typeof define === 'function' && define.amd) {\\n    // AMD. Register as an anonymous module.\\n    define(factory);\\n  } else if (typeof exports === 'object') {\\n    // Node. Does not work with strict CommonJS, but\\n    // only CommonJS-like environments that support module.exports,\\n    // like Node.\\n    module.exports = factory();\\n  } else {\\n    // Browser globals (root is window)\\n    root.returnExports = factory();\\n  }\\n}(this, function () {\\n  'use strict';\\n\\n  var _apply = Function.call.bind(Function.apply);\\n  var _call = Function.call.bind(Function.call);\\n  var isArray = Array.isArray;\\n  var keys = Object.keys;\\n\\n  var not = function notThunker(func) {\\n    return function notThunk() {\\n      return !_apply(func, this, arguments);\\n    };\\n  };\\n  var throwsError = function (func) {\\n    try {\\n      func();\\n      return false;\\n    } catch (e) {\\n      return true;\\n    }\\n  };\\n  var valueOrFalseIfThrows = function valueOrFalseIfThrows(func) {\\n    try {\\n      return func();\\n    } catch (e) {\\n      return false;\\n    }\\n  };\\n\\n  var isCallableWithoutNew = not(throwsError);\\n  var arePropertyDescriptorsSupported = function () {\\n    // if Object.defineProperty exists but throws, it's IE 8\\n    return !throwsError(function () {\\n      Object.defineProperty({}, 'x', { get: function () {} });\\n    });\\n  };\\n  var supportsDescriptors = !!Object.defineProperty && arePropertyDescriptorsSupported();\\n  var functionsHaveNames = (function foo() {}).name === 'foo'; // eslint-disable-line no-extra-parens\\n\\n  var _forEach = Function.call.bind(Array.prototype.forEach);\\n  var _reduce = Function.call.bind(Array.prototype.reduce);\\n  var _filter = Function.call.bind(Array.prototype.filter);\\n  var _some = Function.call.bind(Array.prototype.some);\\n\\n  var defineProperty = function (object, name, value, force) {\\n    if (!force && name in object) { return; }\\n    if (supportsDescriptors) {\\n      Object.defineProperty(object, name, {\\n        configurable: true,\\n        enumerable: false,\\n        writable: true,\\n        value: value\\n      });\\n    } else {\\n      object[name] = value;\\n    }\\n  };\\n\\n  // Define configurable, writable and non-enumerable props\\n  // if they don’t exist.\\n  var defineProperties = function (object, map, forceOverride) {\\n    _forEach(keys(map), function (name) {\\n      var method = map[name];\\n      defineProperty(object, name, method, !!forceOverride);\\n    });\\n  };\\n\\n  var _toString = Function.call.bind(Object.prototype.toString);\\n  var isCallable = typeof /abc/ === 'function' ? function IsCallableSlow(x) {\\n    // Some old browsers (IE, FF) say that typeof /abc/ === 'function'\\n    return typeof x === 'function' && _toString(x) === '[object Function]';\\n  } : function IsCallableFast(x) { return typeof x === 'function'; };\\n\\n  var Value = {\\n    getter: function (object, name, getter) {\\n      if (!supportsDescriptors) {\\n        throw new TypeError('getters require true ES5 support');\\n      }\\n      Object.defineProperty(object, name, {\\n        configurable: true,\\n        enumerable: false,\\n        get: getter\\n      });\\n    },\\n    proxy: function (originalObject, key, targetObject) {\\n      if (!supportsDescriptors) {\\n        throw new TypeError('getters require true ES5 support');\\n      }\\n      var originalDescriptor = Object.getOwnPropertyDescriptor(originalObject, key);\\n      Object.defineProperty(targetObject, key, {\\n        configurable: originalDescriptor.configurable,\\n        enumerable: originalDescriptor.enumerable,\\n        get: function getKey() { return originalObject[key]; },\\n        set: function setKey(value) { originalObject[key] = value; }\\n      });\\n    },\\n    redefine: function (object, property, newValue) {\\n      if (supportsDescriptors) {\\n        var descriptor = Object.getOwnPropertyDescriptor(object, property);\\n        descriptor.value = newValue;\\n        Object.defineProperty(object, property, descriptor);\\n      } else {\\n        object[property] = newValue;\\n      }\\n    },\\n    defineByDescriptor: function (object, property, descriptor) {\\n      if (supportsDescriptors) {\\n        Object.defineProperty(object, property, descriptor);\\n      } else if ('value' in descriptor) {\\n        object[property] = descriptor.value;\\n      }\\n    },\\n    preserveToString: function (target, source) {\\n      if (source && isCallable(source.toString)) {\\n        defineProperty(target, 'toString', source.toString.bind(source), true);\\n      }\\n    }\\n  };\\n\\n  // Simple shim for Object.create on ES3 browsers\\n  // (unlike real shim, no attempt to support `prototype === null`)\\n  var create = Object.create || function (prototype, properties) {\\n    var Prototype = function Prototype() {};\\n    Prototype.prototype = prototype;\\n    var object = new Prototype();\\n    if (typeof properties !== 'undefined') {\\n      keys(properties).forEach(function (key) {\\n        Value.defineByDescriptor(object, key, properties[key]);\\n      });\\n    }\\n    return object;\\n  };\\n\\n  var supportsSubclassing = function (C, f) {\\n    if (!Object.setPrototypeOf) { return false; /* skip test on IE < 11 */ }\\n    return valueOrFalseIfThrows(function () {\\n      var Sub = function Subclass(arg) {\\n        var o = new C(arg);\\n        Object.setPrototypeOf(o, Subclass.prototype);\\n        return o;\\n      };\\n      Object.setPrototypeOf(Sub, C);\\n      Sub.prototype = create(C.prototype, {\\n        constructor: { value: Sub }\\n      });\\n      return f(Sub);\\n    });\\n  };\\n\\n  var getGlobal = function () {\\n    /* global self, window, global */\\n    // the only reliable means to get the global object is\\n    // `Function('return this')()`\\n    // However, this causes CSP violations in Chrome apps.\\n    if (typeof self !== 'undefined') { return self; }\\n    if (typeof window !== 'undefined') { return window; }\\n    if (typeof global !== 'undefined') { return global; }\\n    throw new Error('unable to locate global object');\\n  };\\n\\n  var globals = getGlobal();\\n  var globalIsFinite = globals.isFinite;\\n  var _indexOf = Function.call.bind(String.prototype.indexOf);\\n  var _arrayIndexOfApply = Function.apply.bind(Array.prototype.indexOf);\\n  var _concat = Function.call.bind(Array.prototype.concat);\\n  // var _sort = Function.call.bind(Array.prototype.sort);\\n  var _strSlice = Function.call.bind(String.prototype.slice);\\n  var _push = Function.call.bind(Array.prototype.push);\\n  var _pushApply = Function.apply.bind(Array.prototype.push);\\n  var _shift = Function.call.bind(Array.prototype.shift);\\n  var _max = Math.max;\\n  var _min = Math.min;\\n  var _floor = Math.floor;\\n  var _abs = Math.abs;\\n  var _exp = Math.exp;\\n  var _log = Math.log;\\n  var _sqrt = Math.sqrt;\\n  var _hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\\n  var ArrayIterator; // make our implementation private\\n  var noop = function () {};\\n\\n  var OrigMap = globals.Map;\\n  var origMapDelete = OrigMap && OrigMap.prototype['delete'];\\n  var origMapGet = OrigMap && OrigMap.prototype.get;\\n  var origMapHas = OrigMap && OrigMap.prototype.has;\\n  var origMapSet = OrigMap && OrigMap.prototype.set;\\n\\n  var Symbol = globals.Symbol || {};\\n  var symbolSpecies = Symbol.species || '@@species';\\n\\n  var numberIsNaN = Number.isNaN || function isNaN(value) {\\n    // NaN !== NaN, but they are identical.\\n    // NaNs are the only non-reflexive value, i.e., if x !== x,\\n    // then x is NaN.\\n    // isNaN is broken: it converts its argument to number, so\\n    // isNaN('foo') => true\\n    return value !== value;\\n  };\\n  var numberIsFinite = Number.isFinite || function isFinite(value) {\\n    return typeof value === 'number' && globalIsFinite(value);\\n  };\\n  var _sign = isCallable(Math.sign) ? Math.sign : function sign(value) {\\n    var number = Number(value);\\n    if (number === 0) { return number; }\\n    if (numberIsNaN(number)) { return number; }\\n    return number < 0 ? -1 : 1;\\n  };\\n\\n  // taken directly from https://github.com/ljharb/is-arguments/blob/master/index.js\\n  // can be replaced with require('is-arguments') if we ever use a build process instead\\n  var isStandardArguments = function isArguments(value) {\\n    return _toString(value) === '[object Arguments]';\\n  };\\n  var isLegacyArguments = function isArguments(value) {\\n    return value !== null &&\\n      typeof value === 'object' &&\\n      typeof value.length === 'number' &&\\n      value.length >= 0 &&\\n      _toString(value) !== '[object Array]' &&\\n      _toString(value.callee) === '[object Function]';\\n  };\\n  var isArguments = isStandardArguments(arguments) ? isStandardArguments : isLegacyArguments;\\n\\n  var Type = {\\n    primitive: function (x) { return x === null || (typeof x !== 'function' && typeof x !== 'object'); },\\n    string: function (x) { return _toString(x) === '[object String]'; },\\n    regex: function (x) { return _toString(x) === '[object RegExp]'; },\\n    symbol: function (x) {\\n      return typeof globals.Symbol === 'function' && typeof x === 'symbol';\\n    }\\n  };\\n\\n  var overrideNative = function overrideNative(object, property, replacement) {\\n    var original = object[property];\\n    defineProperty(object, property, replacement, true);\\n    Value.preserveToString(object[property], original);\\n  };\\n\\n  // eslint-disable-next-line no-restricted-properties\\n  var hasSymbols = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' && Type.symbol(Symbol());\\n\\n  // This is a private name in the es6 spec, equal to '[Symbol.iterator]'\\n  // we're going to use an arbitrary _-prefixed name to make our shims\\n  // work properly with each other, even though we don't have full Iterator\\n  // support.  That is, `Array.from(map.keys())` will work, but we don't\\n  // pretend to export a \\\"real\\\" Iterator interface.\\n  var $iterator$ = Type.symbol(Symbol.iterator) ? Symbol.iterator : '_es6-shim iterator_';\\n  // Firefox ships a partial implementation using the name @@iterator.\\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=907077#c14\\n  // So use that name if we detect it.\\n  if (globals.Set && typeof new globals.Set()['@@iterator'] === 'function') {\\n    $iterator$ = '@@iterator';\\n  }\\n\\n  // Reflect\\n  if (!globals.Reflect) {\\n    defineProperty(globals, 'Reflect', {}, true);\\n  }\\n  var Reflect = globals.Reflect;\\n\\n  var $String = String;\\n\\n  /* global document */\\n  var domAll = (typeof document === 'undefined' || !document) ? null : document.all;\\n  /* jshint eqnull:true */\\n  var isNullOrUndefined = domAll == null ? function isNullOrUndefined(x) {\\n    /* jshint eqnull:true */\\n    return x == null;\\n  } : function isNullOrUndefinedAndNotDocumentAll(x) {\\n    /* jshint eqnull:true */\\n    return x == null && x !== domAll;\\n  };\\n\\n  var ES = {\\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-call\\n    Call: function Call(F, V) {\\n      var args = arguments.length > 2 ? arguments[2] : [];\\n      if (!ES.IsCallable(F)) {\\n        throw new TypeError(F + ' is not a function');\\n      }\\n      return _apply(F, V, args);\\n    },\\n\\n    RequireObjectCoercible: function (x, optMessage) {\\n      if (isNullOrUndefined(x)) {\\n        throw new TypeError(optMessage || 'Cannot call method on ' + x);\\n      }\\n      return x;\\n    },\\n\\n    // This might miss the \\\"(non-standard exotic and does not implement\\n    // [[Call]])\\\" case from\\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-typeof-operator-runtime-semantics-evaluation\\n    // but we can't find any evidence these objects exist in practice.\\n    // If we find some in the future, you could test `Object(x) === x`,\\n    // which is reliable according to\\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toobject\\n    // but is not well optimized by runtimes and creates an object\\n    // whenever it returns false, and thus is very slow.\\n    TypeIsObject: function (x) {\\n      if (x === void 0 || x === null || x === true || x === false) {\\n        return false;\\n      }\\n      return typeof x === 'function' || typeof x === 'object' || x === domAll;\\n    },\\n\\n    ToObject: function (o, optMessage) {\\n      return Object(ES.RequireObjectCoercible(o, optMessage));\\n    },\\n\\n    IsCallable: isCallable,\\n\\n    IsConstructor: function (x) {\\n      // We can't tell callables from constructors in ES5\\n      return ES.IsCallable(x);\\n    },\\n\\n    ToInt32: function (x) {\\n      return ES.ToNumber(x) >> 0;\\n    },\\n\\n    ToUint32: function (x) {\\n      return ES.ToNumber(x) >>> 0;\\n    },\\n\\n    ToNumber: function (value) {\\n      if (_toString(value) === '[object Symbol]') {\\n        throw new TypeError('Cannot convert a Symbol value to a number');\\n      }\\n      return +value;\\n    },\\n\\n    ToInteger: function (value) {\\n      var number = ES.ToNumber(value);\\n      if (numberIsNaN(number)) { return 0; }\\n      if (number === 0 || !numberIsFinite(number)) { return number; }\\n      return (number > 0 ? 1 : -1) * _floor(_abs(number));\\n    },\\n\\n    ToLength: function (value) {\\n      var len = ES.ToInteger(value);\\n      if (len <= 0) { return 0; } // includes converting -0 to +0\\n      if (len > Number.MAX_SAFE_INTEGER) { return Number.MAX_SAFE_INTEGER; }\\n      return len;\\n    },\\n\\n    SameValue: function (a, b) {\\n      if (a === b) {\\n        // 0 === -0, but they are not identical.\\n        if (a === 0) { return 1 / a === 1 / b; }\\n        return true;\\n      }\\n      return numberIsNaN(a) && numberIsNaN(b);\\n    },\\n\\n    SameValueZero: function (a, b) {\\n      // same as SameValue except for SameValueZero(+0, -0) == true\\n      return (a === b) || (numberIsNaN(a) && numberIsNaN(b));\\n    },\\n\\n    IsIterable: function (o) {\\n      return ES.TypeIsObject(o) && (typeof o[$iterator$] !== 'undefined' || isArguments(o));\\n    },\\n\\n    GetIterator: function (o) {\\n      if (isArguments(o)) {\\n        // special case support for `arguments`\\n        return new ArrayIterator(o, 'value');\\n      }\\n      var itFn = ES.GetMethod(o, $iterator$);\\n      if (!ES.IsCallable(itFn)) {\\n        // Better diagnostics if itFn is null or undefined\\n        throw new TypeError('value is not an iterable');\\n      }\\n      var it = ES.Call(itFn, o);\\n      if (!ES.TypeIsObject(it)) {\\n        throw new TypeError('bad iterator');\\n      }\\n      return it;\\n    },\\n\\n    GetMethod: function (o, p) {\\n      var func = ES.ToObject(o)[p];\\n      if (isNullOrUndefined(func)) {\\n        return void 0;\\n      }\\n      if (!ES.IsCallable(func)) {\\n        throw new TypeError('Method not callable: ' + p);\\n      }\\n      return func;\\n    },\\n\\n    IteratorComplete: function (iterResult) {\\n      return !!iterResult.done;\\n    },\\n\\n    IteratorClose: function (iterator, completionIsThrow) {\\n      var returnMethod = ES.GetMethod(iterator, 'return');\\n      if (returnMethod === void 0) {\\n        return;\\n      }\\n      var innerResult, innerException;\\n      try {\\n        innerResult = ES.Call(returnMethod, iterator);\\n      } catch (e) {\\n        innerException = e;\\n      }\\n      if (completionIsThrow) {\\n        return;\\n      }\\n      if (innerException) {\\n        throw innerException;\\n      }\\n      if (!ES.TypeIsObject(innerResult)) {\\n        throw new TypeError(\\\"Iterator's return method returned a non-object.\\\");\\n      }\\n    },\\n\\n    IteratorNext: function (it) {\\n      var result = arguments.length > 1 ? it.next(arguments[1]) : it.next();\\n      if (!ES.TypeIsObject(result)) {\\n        throw new TypeError('bad iterator');\\n      }\\n      return result;\\n    },\\n\\n    IteratorStep: function (it) {\\n      var result = ES.IteratorNext(it);\\n      var done = ES.IteratorComplete(result);\\n      return done ? false : result;\\n    },\\n\\n    Construct: function (C, args, newTarget, isES6internal) {\\n      var target = typeof newTarget === 'undefined' ? C : newTarget;\\n\\n      if (!isES6internal && Reflect.construct) {\\n        // Try to use Reflect.construct if available\\n        return Reflect.construct(C, args, target);\\n      }\\n      // OK, we have to fake it.  This will only work if the\\n      // C.[[ConstructorKind]] == \\\"base\\\" -- but that's the only\\n      // kind we can make in ES5 code anyway.\\n\\n      // OrdinaryCreateFromConstructor(target, \\\"%ObjectPrototype%\\\")\\n      var proto = target.prototype;\\n      if (!ES.TypeIsObject(proto)) {\\n        proto = Object.prototype;\\n      }\\n      var obj = create(proto);\\n      // Call the constructor.\\n      var result = ES.Call(C, obj, args);\\n      return ES.TypeIsObject(result) ? result : obj;\\n    },\\n\\n    SpeciesConstructor: function (O, defaultConstructor) {\\n      var C = O.constructor;\\n      if (C === void 0) {\\n        return defaultConstructor;\\n      }\\n      if (!ES.TypeIsObject(C)) {\\n        throw new TypeError('Bad constructor');\\n      }\\n      var S = C[symbolSpecies];\\n      if (isNullOrUndefined(S)) {\\n        return defaultConstructor;\\n      }\\n      if (!ES.IsConstructor(S)) {\\n        throw new TypeError('Bad @@species');\\n      }\\n      return S;\\n    },\\n\\n    CreateHTML: function (string, tag, attribute, value) {\\n      var S = ES.ToString(string);\\n      var p1 = '<' + tag;\\n      if (attribute !== '') {\\n        var V = ES.ToString(value);\\n        var escapedV = V.replace(/\\\"/g, '&quot;');\\n        p1 += ' ' + attribute + '=\\\"' + escapedV + '\\\"';\\n      }\\n      var p2 = p1 + '>';\\n      var p3 = p2 + S;\\n      return p3 + '</' + tag + '>';\\n    },\\n\\n    IsRegExp: function IsRegExp(argument) {\\n      if (!ES.TypeIsObject(argument)) {\\n        return false;\\n      }\\n      var isRegExp = argument[Symbol.match];\\n      if (typeof isRegExp !== 'undefined') {\\n        return !!isRegExp;\\n      }\\n      return Type.regex(argument);\\n    },\\n\\n    ToString: function ToString(string) {\\n      return $String(string);\\n    }\\n  };\\n\\n  // Well-known Symbol shims\\n  if (supportsDescriptors && hasSymbols) {\\n    var defineWellKnownSymbol = function defineWellKnownSymbol(name) {\\n      if (Type.symbol(Symbol[name])) {\\n        return Symbol[name];\\n      }\\n      // eslint-disable-next-line no-restricted-properties\\n      var sym = Symbol['for']('Symbol.' + name);\\n      Object.defineProperty(Symbol, name, {\\n        configurable: false,\\n        enumerable: false,\\n        writable: false,\\n        value: sym\\n      });\\n      return sym;\\n    };\\n    if (!Type.symbol(Symbol.search)) {\\n      var symbolSearch = defineWellKnownSymbol('search');\\n      var originalSearch = String.prototype.search;\\n      defineProperty(RegExp.prototype, symbolSearch, function search(string) {\\n        return ES.Call(originalSearch, string, [this]);\\n      });\\n      var searchShim = function search(regexp) {\\n        var O = ES.RequireObjectCoercible(this);\\n        if (!isNullOrUndefined(regexp)) {\\n          var searcher = ES.GetMethod(regexp, symbolSearch);\\n          if (typeof searcher !== 'undefined') {\\n            return ES.Call(searcher, regexp, [O]);\\n          }\\n        }\\n        return ES.Call(originalSearch, O, [ES.ToString(regexp)]);\\n      };\\n      overrideNative(String.prototype, 'search', searchShim);\\n    }\\n    if (!Type.symbol(Symbol.replace)) {\\n      var symbolReplace = defineWellKnownSymbol('replace');\\n      var originalReplace = String.prototype.replace;\\n      defineProperty(RegExp.prototype, symbolReplace, function replace(string, replaceValue) {\\n        return ES.Call(originalReplace, string, [this, replaceValue]);\\n      });\\n      var replaceShim = function replace(searchValue, replaceValue) {\\n        var O = ES.RequireObjectCoercible(this);\\n        if (!isNullOrUndefined(searchValue)) {\\n          var replacer = ES.GetMethod(searchValue, symbolReplace);\\n          if (typeof replacer !== 'undefined') {\\n            return ES.Call(replacer, searchValue, [O, replaceValue]);\\n          }\\n        }\\n        return ES.Call(originalReplace, O, [ES.ToString(searchValue), replaceValue]);\\n      };\\n      overrideNative(String.prototype, 'replace', replaceShim);\\n    }\\n    if (!Type.symbol(Symbol.split)) {\\n      var symbolSplit = defineWellKnownSymbol('split');\\n      var originalSplit = String.prototype.split;\\n      defineProperty(RegExp.prototype, symbolSplit, function split(string, limit) {\\n        return ES.Call(originalSplit, string, [this, limit]);\\n      });\\n      var splitShim = function split(separator, limit) {\\n        var O = ES.RequireObjectCoercible(this);\\n        if (!isNullOrUndefined(separator)) {\\n          var splitter = ES.GetMethod(separator, symbolSplit);\\n          if (typeof splitter !== 'undefined') {\\n            return ES.Call(splitter, separator, [O, limit]);\\n          }\\n        }\\n        return ES.Call(originalSplit, O, [ES.ToString(separator), limit]);\\n      };\\n      overrideNative(String.prototype, 'split', splitShim);\\n    }\\n    var symbolMatchExists = Type.symbol(Symbol.match);\\n    var stringMatchIgnoresSymbolMatch = symbolMatchExists && (function () {\\n      // Firefox 41, through Nightly 45 has Symbol.match, but String#match ignores it.\\n      // Firefox 40 and below have Symbol.match but String#match works fine.\\n      var o = {};\\n      o[Symbol.match] = function () { return 42; };\\n      return 'a'.match(o) !== 42;\\n    }());\\n    if (!symbolMatchExists || stringMatchIgnoresSymbolMatch) {\\n      var symbolMatch = defineWellKnownSymbol('match');\\n\\n      var originalMatch = String.prototype.match;\\n      defineProperty(RegExp.prototype, symbolMatch, function match(string) {\\n        return ES.Call(originalMatch, string, [this]);\\n      });\\n\\n      var matchShim = function match(regexp) {\\n        var O = ES.RequireObjectCoercible(this);\\n        if (!isNullOrUndefined(regexp)) {\\n          var matcher = ES.GetMethod(regexp, symbolMatch);\\n          if (typeof matcher !== 'undefined') {\\n            return ES.Call(matcher, regexp, [O]);\\n          }\\n        }\\n        return ES.Call(originalMatch, O, [ES.ToString(regexp)]);\\n      };\\n      overrideNative(String.prototype, 'match', matchShim);\\n    }\\n  }\\n\\n  var wrapConstructor = function wrapConstructor(original, replacement, keysToSkip) {\\n    Value.preserveToString(replacement, original);\\n    if (Object.setPrototypeOf) {\\n      // sets up proper prototype chain where possible\\n      Object.setPrototypeOf(original, replacement);\\n    }\\n    if (supportsDescriptors) {\\n      _forEach(Object.getOwnPropertyNames(original), function (key) {\\n        if (key in noop || keysToSkip[key]) { return; }\\n        Value.proxy(original, key, replacement);\\n      });\\n    } else {\\n      _forEach(Object.keys(original), function (key) {\\n        if (key in noop || keysToSkip[key]) { return; }\\n        replacement[key] = original[key];\\n      });\\n    }\\n    replacement.prototype = original.prototype;\\n    Value.redefine(original.prototype, 'constructor', replacement);\\n  };\\n\\n  var defaultSpeciesGetter = function () { return this; };\\n  var addDefaultSpecies = function (C) {\\n    if (supportsDescriptors && !_hasOwnProperty(C, symbolSpecies)) {\\n      Value.getter(C, symbolSpecies, defaultSpeciesGetter);\\n    }\\n  };\\n\\n  var addIterator = function (prototype, impl) {\\n    var implementation = impl || function iterator() { return this; };\\n    defineProperty(prototype, $iterator$, implementation);\\n    if (!prototype[$iterator$] && Type.symbol($iterator$)) {\\n      // implementations are buggy when $iterator$ is a Symbol\\n      prototype[$iterator$] = implementation;\\n    }\\n  };\\n\\n  var createDataProperty = function createDataProperty(object, name, value) {\\n    if (supportsDescriptors) {\\n      Object.defineProperty(object, name, {\\n        configurable: true,\\n        enumerable: true,\\n        writable: true,\\n        value: value\\n      });\\n    } else {\\n      object[name] = value;\\n    }\\n  };\\n  var createDataPropertyOrThrow = function createDataPropertyOrThrow(object, name, value) {\\n    createDataProperty(object, name, value);\\n    if (!ES.SameValue(object[name], value)) {\\n      throw new TypeError('property is nonconfigurable');\\n    }\\n  };\\n\\n  var emulateES6construct = function (o, defaultNewTarget, defaultProto, slots) {\\n    // This is an es5 approximation to es6 construct semantics.  in es6,\\n    // 'new Foo' invokes Foo.[[Construct]] which (for almost all objects)\\n    // just sets the internal variable NewTarget (in es6 syntax `new.target`)\\n    // to Foo and then returns Foo().\\n\\n    // Many ES6 object then have constructors of the form:\\n    // 1. If NewTarget is undefined, throw a TypeError exception\\n    // 2. Let xxx by OrdinaryCreateFromConstructor(NewTarget, yyy, zzz)\\n\\n    // So we're going to emulate those first two steps.\\n    if (!ES.TypeIsObject(o)) {\\n      throw new TypeError('Constructor requires `new`: ' + defaultNewTarget.name);\\n    }\\n    var proto = defaultNewTarget.prototype;\\n    if (!ES.TypeIsObject(proto)) {\\n      proto = defaultProto;\\n    }\\n    var obj = create(proto);\\n    for (var name in slots) {\\n      if (_hasOwnProperty(slots, name)) {\\n        var value = slots[name];\\n        defineProperty(obj, name, value, true);\\n      }\\n    }\\n    return obj;\\n  };\\n\\n  // Firefox 31 reports this function's length as 0\\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1062484\\n  if (String.fromCodePoint && String.fromCodePoint.length !== 1) {\\n    var originalFromCodePoint = String.fromCodePoint;\\n    overrideNative(String, 'fromCodePoint', function fromCodePoint(codePoints) {\\n      return ES.Call(originalFromCodePoint, this, arguments);\\n    });\\n  }\\n\\n  var StringShims = {\\n    fromCodePoint: function fromCodePoint(codePoints) {\\n      var result = [];\\n      var next;\\n      for (var i = 0, length = arguments.length; i < length; i++) {\\n        next = Number(arguments[i]);\\n        if (!ES.SameValue(next, ES.ToInteger(next)) || next < 0 || next > 0x10FFFF) {\\n          throw new RangeError('Invalid code point ' + next);\\n        }\\n\\n        if (next < 0x10000) {\\n          _push(result, String.fromCharCode(next));\\n        } else {\\n          next -= 0x10000;\\n          _push(result, String.fromCharCode((next >> 10) + 0xD800));\\n          _push(result, String.fromCharCode((next % 0x400) + 0xDC00));\\n        }\\n      }\\n      return result.join('');\\n    },\\n\\n    raw: function raw(callSite) {\\n      var cooked = ES.ToObject(callSite, 'bad callSite');\\n      var rawString = ES.ToObject(cooked.raw, 'bad raw value');\\n      var len = rawString.length;\\n      var literalsegments = ES.ToLength(len);\\n      if (literalsegments <= 0) {\\n        return '';\\n      }\\n\\n      var stringElements = [];\\n      var nextIndex = 0;\\n      var nextKey, next, nextSeg, nextSub;\\n      while (nextIndex < literalsegments) {\\n        nextKey = ES.ToString(nextIndex);\\n        nextSeg = ES.ToString(rawString[nextKey]);\\n        _push(stringElements, nextSeg);\\n        if (nextIndex + 1 >= literalsegments) {\\n          break;\\n        }\\n        next = nextIndex + 1 < arguments.length ? arguments[nextIndex + 1] : '';\\n        nextSub = ES.ToString(next);\\n        _push(stringElements, nextSub);\\n        nextIndex += 1;\\n      }\\n      return stringElements.join('');\\n    }\\n  };\\n  if (String.raw && String.raw({ raw: { 0: 'x', 1: 'y', length: 2 } }) !== 'xy') {\\n    // IE 11 TP has a broken String.raw implementation\\n    overrideNative(String, 'raw', StringShims.raw);\\n  }\\n  defineProperties(String, StringShims);\\n\\n  // Fast repeat, uses the `Exponentiation by squaring` algorithm.\\n  // Perf: http://jsperf.com/string-repeat2/2\\n  var stringRepeat = function repeat(s, times) {\\n    if (times < 1) { return ''; }\\n    if (times % 2) { return repeat(s, times - 1) + s; }\\n    var half = repeat(s, times / 2);\\n    return half + half;\\n  };\\n  var stringMaxLength = Infinity;\\n\\n  var StringPrototypeShims = {\\n    repeat: function repeat(times) {\\n      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\\n      var numTimes = ES.ToInteger(times);\\n      if (numTimes < 0 || numTimes >= stringMaxLength) {\\n        throw new RangeError('repeat count must be less than infinity and not overflow maximum string size');\\n      }\\n      return stringRepeat(thisStr, numTimes);\\n    },\\n\\n    startsWith: function startsWith(searchString) {\\n      var S = ES.ToString(ES.RequireObjectCoercible(this));\\n      if (ES.IsRegExp(searchString)) {\\n        throw new TypeError('Cannot call method \\\"startsWith\\\" with a regex');\\n      }\\n      var searchStr = ES.ToString(searchString);\\n      var position;\\n      if (arguments.length > 1) {\\n        position = arguments[1];\\n      }\\n      var start = _max(ES.ToInteger(position), 0);\\n      return _strSlice(S, start, start + searchStr.length) === searchStr;\\n    },\\n\\n    endsWith: function endsWith(searchString) {\\n      var S = ES.ToString(ES.RequireObjectCoercible(this));\\n      if (ES.IsRegExp(searchString)) {\\n        throw new TypeError('Cannot call method \\\"endsWith\\\" with a regex');\\n      }\\n      var searchStr = ES.ToString(searchString);\\n      var len = S.length;\\n      var endPosition;\\n      if (arguments.length > 1) {\\n        endPosition = arguments[1];\\n      }\\n      var pos = typeof endPosition === 'undefined' ? len : ES.ToInteger(endPosition);\\n      var end = _min(_max(pos, 0), len);\\n      return _strSlice(S, end - searchStr.length, end) === searchStr;\\n    },\\n\\n    includes: function includes(searchString) {\\n      if (ES.IsRegExp(searchString)) {\\n        throw new TypeError('\\\"includes\\\" does not accept a RegExp');\\n      }\\n      var searchStr = ES.ToString(searchString);\\n      var position;\\n      if (arguments.length > 1) {\\n        position = arguments[1];\\n      }\\n      // Somehow this trick makes method 100% compat with the spec.\\n      return _indexOf(this, searchStr, position) !== -1;\\n    },\\n\\n    codePointAt: function codePointAt(pos) {\\n      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\\n      var position = ES.ToInteger(pos);\\n      var length = thisStr.length;\\n      if (position >= 0 && position < length) {\\n        var first = thisStr.charCodeAt(position);\\n        var isEnd = position + 1 === length;\\n        if (first < 0xD800 || first > 0xDBFF || isEnd) { return first; }\\n        var second = thisStr.charCodeAt(position + 1);\\n        if (second < 0xDC00 || second > 0xDFFF) { return first; }\\n        return ((first - 0xD800) * 1024) + (second - 0xDC00) + 0x10000;\\n      }\\n    }\\n  };\\n  if (String.prototype.includes && 'a'.includes('a', Infinity) !== false) {\\n    overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\\n  }\\n\\n  if (String.prototype.startsWith && String.prototype.endsWith) {\\n    var startsWithRejectsRegex = throwsError(function () {\\n      /* throws if spec-compliant */\\n      '/a/'.startsWith(/a/);\\n    });\\n    var startsWithHandlesInfinity = valueOrFalseIfThrows(function () {\\n      return 'abc'.startsWith('a', Infinity) === false;\\n    });\\n    if (!startsWithRejectsRegex || !startsWithHandlesInfinity) {\\n      // Firefox (< 37?) and IE 11 TP have a noncompliant startsWith implementation\\n      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\\n      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\\n    }\\n  }\\n  if (hasSymbols) {\\n    var startsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\\n      var re = /a/;\\n      re[Symbol.match] = false;\\n      return '/a/'.startsWith(re);\\n    });\\n    if (!startsWithSupportsSymbolMatch) {\\n      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\\n    }\\n    var endsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\\n      var re = /a/;\\n      re[Symbol.match] = false;\\n      return '/a/'.endsWith(re);\\n    });\\n    if (!endsWithSupportsSymbolMatch) {\\n      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\\n    }\\n    var includesSupportsSymbolMatch = valueOrFalseIfThrows(function () {\\n      var re = /a/;\\n      re[Symbol.match] = false;\\n      return '/a/'.includes(re);\\n    });\\n    if (!includesSupportsSymbolMatch) {\\n      overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\\n    }\\n  }\\n\\n  defineProperties(String.prototype, StringPrototypeShims);\\n\\n  // whitespace from: http://es5.github.io/#x15.5.4.20\\n  // implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324\\n  var ws = [\\n    '\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003',\\n    '\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028',\\n    '\\\\u2029\\\\uFEFF'\\n  ].join('');\\n  var trimRegexp = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');\\n  var trimShim = function trim() {\\n    return ES.ToString(ES.RequireObjectCoercible(this)).replace(trimRegexp, '');\\n  };\\n  var nonWS = ['\\\\u0085', '\\\\u200b', '\\\\ufffe'].join('');\\n  var nonWSregex = new RegExp('[' + nonWS + ']', 'g');\\n  var isBadHexRegex = /^[-+]0x[0-9a-f]+$/i;\\n  var hasStringTrimBug = nonWS.trim().length !== nonWS.length;\\n  defineProperty(String.prototype, 'trim', trimShim, hasStringTrimBug);\\n\\n  // Given an argument x, it will return an IteratorResult object,\\n  // with value set to x and done to false.\\n  // Given no arguments, it will return an iterator completion object.\\n  var iteratorResult = function (x) {\\n    return { value: x, done: arguments.length === 0 };\\n  };\\n\\n  // see http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype-@@iterator\\n  var StringIterator = function (s) {\\n    ES.RequireObjectCoercible(s);\\n    this._s = ES.ToString(s);\\n    this._i = 0;\\n  };\\n  StringIterator.prototype.next = function () {\\n    var s = this._s;\\n    var i = this._i;\\n    if (typeof s === 'undefined' || i >= s.length) {\\n      this._s = void 0;\\n      return iteratorResult();\\n    }\\n    var first = s.charCodeAt(i);\\n    var second, len;\\n    if (first < 0xD800 || first > 0xDBFF || (i + 1) === s.length) {\\n      len = 1;\\n    } else {\\n      second = s.charCodeAt(i + 1);\\n      len = (second < 0xDC00 || second > 0xDFFF) ? 1 : 2;\\n    }\\n    this._i = i + len;\\n    return iteratorResult(s.substr(i, len));\\n  };\\n  addIterator(StringIterator.prototype);\\n  addIterator(String.prototype, function () {\\n    return new StringIterator(this);\\n  });\\n\\n  var ArrayShims = {\\n    from: function from(items) {\\n      var C = this;\\n      var mapFn;\\n      if (arguments.length > 1) {\\n        mapFn = arguments[1];\\n      }\\n      var mapping, T;\\n      if (typeof mapFn === 'undefined') {\\n        mapping = false;\\n      } else {\\n        if (!ES.IsCallable(mapFn)) {\\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\\n        }\\n        if (arguments.length > 2) {\\n          T = arguments[2];\\n        }\\n        mapping = true;\\n      }\\n\\n      // Note that that Arrays will use ArrayIterator:\\n      // https://bugs.ecmascript.org/show_bug.cgi?id=2416\\n      var usingIterator = typeof (isArguments(items) || ES.GetMethod(items, $iterator$)) !== 'undefined';\\n\\n      var length, result, i;\\n      if (usingIterator) {\\n        result = ES.IsConstructor(C) ? Object(new C()) : [];\\n        var iterator = ES.GetIterator(items);\\n        var next, nextValue;\\n\\n        i = 0;\\n        while (true) {\\n          next = ES.IteratorStep(iterator);\\n          if (next === false) {\\n            break;\\n          }\\n          nextValue = next.value;\\n          try {\\n            if (mapping) {\\n              nextValue = typeof T === 'undefined' ? mapFn(nextValue, i) : _call(mapFn, T, nextValue, i);\\n            }\\n            result[i] = nextValue;\\n          } catch (e) {\\n            ES.IteratorClose(iterator, true);\\n            throw e;\\n          }\\n          i += 1;\\n        }\\n        length = i;\\n      } else {\\n        var arrayLike = ES.ToObject(items);\\n        length = ES.ToLength(arrayLike.length);\\n        result = ES.IsConstructor(C) ? Object(new C(length)) : new Array(length);\\n        var value;\\n        for (i = 0; i < length; ++i) {\\n          value = arrayLike[i];\\n          if (mapping) {\\n            value = typeof T === 'undefined' ? mapFn(value, i) : _call(mapFn, T, value, i);\\n          }\\n          createDataPropertyOrThrow(result, i, value);\\n        }\\n      }\\n\\n      result.length = length;\\n      return result;\\n    },\\n\\n    of: function of() {\\n      var len = arguments.length;\\n      var C = this;\\n      var A = isArray(C) || !ES.IsCallable(C) ? new Array(len) : ES.Construct(C, [len]);\\n      for (var k = 0; k < len; ++k) {\\n        createDataPropertyOrThrow(A, k, arguments[k]);\\n      }\\n      A.length = len;\\n      return A;\\n    }\\n  };\\n  defineProperties(Array, ArrayShims);\\n  addDefaultSpecies(Array);\\n\\n  // Our ArrayIterator is private; see\\n  // https://github.com/paulmillr/es6-shim/issues/252\\n  ArrayIterator = function (array, kind) {\\n    this.i = 0;\\n    this.array = array;\\n    this.kind = kind;\\n  };\\n\\n  defineProperties(ArrayIterator.prototype, {\\n    next: function () {\\n      var i = this.i;\\n      var array = this.array;\\n      if (!(this instanceof ArrayIterator)) {\\n        throw new TypeError('Not an ArrayIterator');\\n      }\\n      if (typeof array !== 'undefined') {\\n        var len = ES.ToLength(array.length);\\n        for (; i < len; i++) {\\n          var kind = this.kind;\\n          var retval;\\n          if (kind === 'key') {\\n            retval = i;\\n          } else if (kind === 'value') {\\n            retval = array[i];\\n          } else if (kind === 'entry') {\\n            retval = [i, array[i]];\\n          }\\n          this.i = i + 1;\\n          return iteratorResult(retval);\\n        }\\n      }\\n      this.array = void 0;\\n      return iteratorResult();\\n    }\\n  });\\n  addIterator(ArrayIterator.prototype);\\n\\n/*\\n  var orderKeys = function orderKeys(a, b) {\\n    var aNumeric = String(ES.ToInteger(a)) === a;\\n    var bNumeric = String(ES.ToInteger(b)) === b;\\n    if (aNumeric && bNumeric) {\\n      return b - a;\\n    } else if (aNumeric && !bNumeric) {\\n      return -1;\\n    } else if (!aNumeric && bNumeric) {\\n      return 1;\\n    } else {\\n      return a.localeCompare(b);\\n    }\\n  };\\n\\n  var getAllKeys = function getAllKeys(object) {\\n    var ownKeys = [];\\n    var keys = [];\\n\\n    for (var key in object) {\\n      _push(_hasOwnProperty(object, key) ? ownKeys : keys, key);\\n    }\\n    _sort(ownKeys, orderKeys);\\n    _sort(keys, orderKeys);\\n\\n    return _concat(ownKeys, keys);\\n  };\\n  */\\n\\n  // note: this is positioned here because it depends on ArrayIterator\\n  var arrayOfSupportsSubclassing = Array.of === ArrayShims.of || (function () {\\n    // Detects a bug in Webkit nightly r181886\\n    var Foo = function Foo(len) { this.length = len; };\\n    Foo.prototype = [];\\n    var fooArr = Array.of.apply(Foo, [1, 2]);\\n    return fooArr instanceof Foo && fooArr.length === 2;\\n  }());\\n  if (!arrayOfSupportsSubclassing) {\\n    overrideNative(Array, 'of', ArrayShims.of);\\n  }\\n\\n  var ArrayPrototypeShims = {\\n    copyWithin: function copyWithin(target, start) {\\n      var o = ES.ToObject(this);\\n      var len = ES.ToLength(o.length);\\n      var relativeTarget = ES.ToInteger(target);\\n      var relativeStart = ES.ToInteger(start);\\n      var to = relativeTarget < 0 ? _max(len + relativeTarget, 0) : _min(relativeTarget, len);\\n      var from = relativeStart < 0 ? _max(len + relativeStart, 0) : _min(relativeStart, len);\\n      var end;\\n      if (arguments.length > 2) {\\n        end = arguments[2];\\n      }\\n      var relativeEnd = typeof end === 'undefined' ? len : ES.ToInteger(end);\\n      var finalItem = relativeEnd < 0 ? _max(len + relativeEnd, 0) : _min(relativeEnd, len);\\n      var count = _min(finalItem - from, len - to);\\n      var direction = 1;\\n      if (from < to && to < (from + count)) {\\n        direction = -1;\\n        from += count - 1;\\n        to += count - 1;\\n      }\\n      while (count > 0) {\\n        if (from in o) {\\n          o[to] = o[from];\\n        } else {\\n          delete o[to];\\n        }\\n        from += direction;\\n        to += direction;\\n        count -= 1;\\n      }\\n      return o;\\n    },\\n\\n    fill: function fill(value) {\\n      var start;\\n      if (arguments.length > 1) {\\n        start = arguments[1];\\n      }\\n      var end;\\n      if (arguments.length > 2) {\\n        end = arguments[2];\\n      }\\n      var O = ES.ToObject(this);\\n      var len = ES.ToLength(O.length);\\n      start = ES.ToInteger(typeof start === 'undefined' ? 0 : start);\\n      end = ES.ToInteger(typeof end === 'undefined' ? len : end);\\n\\n      var relativeStart = start < 0 ? _max(len + start, 0) : _min(start, len);\\n      var relativeEnd = end < 0 ? len + end : end;\\n\\n      for (var i = relativeStart; i < len && i < relativeEnd; ++i) {\\n        O[i] = value;\\n      }\\n      return O;\\n    },\\n\\n    find: function find(predicate) {\\n      var list = ES.ToObject(this);\\n      var length = ES.ToLength(list.length);\\n      if (!ES.IsCallable(predicate)) {\\n        throw new TypeError('Array#find: predicate must be a function');\\n      }\\n      var thisArg = arguments.length > 1 ? arguments[1] : null;\\n      for (var i = 0, value; i < length; i++) {\\n        value = list[i];\\n        if (thisArg) {\\n          if (_call(predicate, thisArg, value, i, list)) {\\n            return value;\\n          }\\n        } else if (predicate(value, i, list)) {\\n          return value;\\n        }\\n      }\\n    },\\n\\n    findIndex: function findIndex(predicate) {\\n      var list = ES.ToObject(this);\\n      var length = ES.ToLength(list.length);\\n      if (!ES.IsCallable(predicate)) {\\n        throw new TypeError('Array#findIndex: predicate must be a function');\\n      }\\n      var thisArg = arguments.length > 1 ? arguments[1] : null;\\n      for (var i = 0; i < length; i++) {\\n        if (thisArg) {\\n          if (_call(predicate, thisArg, list[i], i, list)) {\\n            return i;\\n          }\\n        } else if (predicate(list[i], i, list)) {\\n          return i;\\n        }\\n      }\\n      return -1;\\n    },\\n\\n    keys: function keys() {\\n      return new ArrayIterator(this, 'key');\\n    },\\n\\n    values: function values() {\\n      return new ArrayIterator(this, 'value');\\n    },\\n\\n    entries: function entries() {\\n      return new ArrayIterator(this, 'entry');\\n    }\\n  };\\n  // Safari 7.1 defines Array#keys and Array#entries natively,\\n  // but the resulting ArrayIterator objects don't have a \\\"next\\\" method.\\n  if (Array.prototype.keys && !ES.IsCallable([1].keys().next)) {\\n    delete Array.prototype.keys;\\n  }\\n  if (Array.prototype.entries && !ES.IsCallable([1].entries().next)) {\\n    delete Array.prototype.entries;\\n  }\\n\\n  // Chrome 38 defines Array#keys and Array#entries, and Array#@@iterator, but not Array#values\\n  if (Array.prototype.keys && Array.prototype.entries && !Array.prototype.values && Array.prototype[$iterator$]) {\\n    defineProperties(Array.prototype, {\\n      values: Array.prototype[$iterator$]\\n    });\\n    if (Type.symbol(Symbol.unscopables)) {\\n      Array.prototype[Symbol.unscopables].values = true;\\n    }\\n  }\\n  // Chrome 40 defines Array#values with the incorrect name, although Array#{keys,entries} have the correct name\\n  if (functionsHaveNames && Array.prototype.values && Array.prototype.values.name !== 'values') {\\n    var originalArrayPrototypeValues = Array.prototype.values;\\n    overrideNative(Array.prototype, 'values', function values() { return ES.Call(originalArrayPrototypeValues, this, arguments); });\\n    defineProperty(Array.prototype, $iterator$, Array.prototype.values, true);\\n  }\\n  defineProperties(Array.prototype, ArrayPrototypeShims);\\n\\n  if (1 / [true].indexOf(true, -0) < 0) {\\n    // indexOf when given a position arg of -0 should return +0.\\n    // https://github.com/tc39/ecma262/pull/316\\n    defineProperty(Array.prototype, 'indexOf', function indexOf(searchElement) {\\n      var value = _arrayIndexOfApply(this, arguments);\\n      if (value === 0 && (1 / value) < 0) {\\n        return 0;\\n      }\\n      return value;\\n    }, true);\\n  }\\n\\n  addIterator(Array.prototype, function () { return this.values(); });\\n  // Chrome defines keys/values/entries on Array, but doesn't give us\\n  // any way to identify its iterator.  So add our own shimmed field.\\n  if (Object.getPrototypeOf) {\\n    addIterator(Object.getPrototypeOf([].values()));\\n  }\\n\\n  // note: this is positioned here because it relies on Array#entries\\n  var arrayFromSwallowsNegativeLengths = (function () {\\n    // Detects a Firefox bug in v32\\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1063993\\n    return valueOrFalseIfThrows(function () {\\n      return Array.from({ length: -1 }).length === 0;\\n    });\\n  }());\\n  var arrayFromHandlesIterables = (function () {\\n    // Detects a bug in Webkit nightly r181886\\n    var arr = Array.from([0].entries());\\n    return arr.length === 1 && isArray(arr[0]) && arr[0][0] === 0 && arr[0][1] === 0;\\n  }());\\n  if (!arrayFromSwallowsNegativeLengths || !arrayFromHandlesIterables) {\\n    overrideNative(Array, 'from', ArrayShims.from);\\n  }\\n  var arrayFromHandlesUndefinedMapFunction = (function () {\\n    // Microsoft Edge v0.11 throws if the mapFn argument is *provided* but undefined,\\n    // but the spec doesn't care if it's provided or not - undefined doesn't throw.\\n    return valueOrFalseIfThrows(function () {\\n      return Array.from([0], void 0);\\n    });\\n  }());\\n  if (!arrayFromHandlesUndefinedMapFunction) {\\n    var origArrayFrom = Array.from;\\n    overrideNative(Array, 'from', function from(items) {\\n      if (arguments.length > 1 && typeof arguments[1] !== 'undefined') {\\n        return ES.Call(origArrayFrom, this, arguments);\\n      } else {\\n        return _call(origArrayFrom, this, items);\\n      }\\n    });\\n  }\\n\\n  var int32sAsOne = -(Math.pow(2, 32) - 1);\\n  var toLengthsCorrectly = function (method, reversed) {\\n    var obj = { length: int32sAsOne };\\n    obj[reversed ? (obj.length >>> 0) - 1 : 0] = true;\\n    return valueOrFalseIfThrows(function () {\\n      _call(method, obj, function () {\\n        // note: in nonconforming browsers, this will be called\\n        // -1 >>> 0 times, which is 4294967295, so the throw matters.\\n        throw new RangeError('should not reach here');\\n      }, []);\\n      return true;\\n    });\\n  };\\n  if (!toLengthsCorrectly(Array.prototype.forEach)) {\\n    var originalForEach = Array.prototype.forEach;\\n    overrideNative(Array.prototype, 'forEach', function forEach(callbackFn) {\\n      return ES.Call(originalForEach, this.length >= 0 ? this : [], arguments);\\n    }, true);\\n  }\\n  if (!toLengthsCorrectly(Array.prototype.map)) {\\n    var originalMap = Array.prototype.map;\\n    overrideNative(Array.prototype, 'map', function map(callbackFn) {\\n      return ES.Call(originalMap, this.length >= 0 ? this : [], arguments);\\n    }, true);\\n  }\\n  if (!toLengthsCorrectly(Array.prototype.filter)) {\\n    var originalFilter = Array.prototype.filter;\\n    overrideNative(Array.prototype, 'filter', function filter(callbackFn) {\\n      return ES.Call(originalFilter, this.length >= 0 ? this : [], arguments);\\n    }, true);\\n  }\\n  if (!toLengthsCorrectly(Array.prototype.some)) {\\n    var originalSome = Array.prototype.some;\\n    overrideNative(Array.prototype, 'some', function some(callbackFn) {\\n      return ES.Call(originalSome, this.length >= 0 ? this : [], arguments);\\n    }, true);\\n  }\\n  if (!toLengthsCorrectly(Array.prototype.every)) {\\n    var originalEvery = Array.prototype.every;\\n    overrideNative(Array.prototype, 'every', function every(callbackFn) {\\n      return ES.Call(originalEvery, this.length >= 0 ? this : [], arguments);\\n    }, true);\\n  }\\n  if (!toLengthsCorrectly(Array.prototype.reduce)) {\\n    var originalReduce = Array.prototype.reduce;\\n    overrideNative(Array.prototype, 'reduce', function reduce(callbackFn) {\\n      return ES.Call(originalReduce, this.length >= 0 ? this : [], arguments);\\n    }, true);\\n  }\\n  if (!toLengthsCorrectly(Array.prototype.reduceRight, true)) {\\n    var originalReduceRight = Array.prototype.reduceRight;\\n    overrideNative(Array.prototype, 'reduceRight', function reduceRight(callbackFn) {\\n      return ES.Call(originalReduceRight, this.length >= 0 ? this : [], arguments);\\n    }, true);\\n  }\\n\\n  var lacksOctalSupport = Number('0o10') !== 8;\\n  var lacksBinarySupport = Number('0b10') !== 2;\\n  var trimsNonWhitespace = _some(nonWS, function (c) {\\n    return Number(c + 0 + c) === 0;\\n  });\\n  if (lacksOctalSupport || lacksBinarySupport || trimsNonWhitespace) {\\n    var OrigNumber = Number;\\n    var binaryRegex = /^0b[01]+$/i;\\n    var octalRegex = /^0o[0-7]+$/i;\\n    // Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \\\"test\\\" is an own property of regexes. wtf.\\n    var isBinary = binaryRegex.test.bind(binaryRegex);\\n    var isOctal = octalRegex.test.bind(octalRegex);\\n    var toPrimitive = function (O) { // need to replace this with `es-to-primitive/es6`\\n      var result;\\n      if (typeof O.valueOf === 'function') {\\n        result = O.valueOf();\\n        if (Type.primitive(result)) {\\n          return result;\\n        }\\n      }\\n      if (typeof O.toString === 'function') {\\n        result = O.toString();\\n        if (Type.primitive(result)) {\\n          return result;\\n        }\\n      }\\n      throw new TypeError('No default value');\\n    };\\n    var hasNonWS = nonWSregex.test.bind(nonWSregex);\\n    var isBadHex = isBadHexRegex.test.bind(isBadHexRegex);\\n    var NumberShim = (function () {\\n      // this is wrapped in an IIFE because of IE 6-8's wacky scoping issues with named function expressions.\\n      var NumberShim = function Number(value) {\\n        var primValue;\\n        if (arguments.length > 0) {\\n          primValue = Type.primitive(value) ? value : toPrimitive(value, 'number');\\n        } else {\\n          primValue = 0;\\n        }\\n        if (typeof primValue === 'string') {\\n          primValue = ES.Call(trimShim, primValue);\\n          if (isBinary(primValue)) {\\n            primValue = parseInt(_strSlice(primValue, 2), 2);\\n          } else if (isOctal(primValue)) {\\n            primValue = parseInt(_strSlice(primValue, 2), 8);\\n          } else if (hasNonWS(primValue) || isBadHex(primValue)) {\\n            primValue = NaN;\\n          }\\n        }\\n        var receiver = this;\\n        var valueOfSucceeds = valueOrFalseIfThrows(function () {\\n          OrigNumber.prototype.valueOf.call(receiver);\\n          return true;\\n        });\\n        if (receiver instanceof NumberShim && !valueOfSucceeds) {\\n          return new OrigNumber(primValue);\\n        }\\n        /* jshint newcap: false */\\n        return OrigNumber(primValue);\\n        /* jshint newcap: true */\\n      };\\n      return NumberShim;\\n    }());\\n    wrapConstructor(OrigNumber, NumberShim, {});\\n    // this is necessary for ES3 browsers, where these properties are non-enumerable.\\n    defineProperties(NumberShim, {\\n      NaN: OrigNumber.NaN,\\n      MAX_VALUE: OrigNumber.MAX_VALUE,\\n      MIN_VALUE: OrigNumber.MIN_VALUE,\\n      NEGATIVE_INFINITY: OrigNumber.NEGATIVE_INFINITY,\\n      POSITIVE_INFINITY: OrigNumber.POSITIVE_INFINITY\\n    });\\n    /* globals Number: true */\\n    /* eslint-disable no-undef, no-global-assign */\\n    /* jshint -W020 */\\n    Number = NumberShim;\\n    Value.redefine(globals, 'Number', NumberShim);\\n    /* jshint +W020 */\\n    /* eslint-enable no-undef, no-global-assign */\\n    /* globals Number: false */\\n  }\\n\\n  var maxSafeInteger = Math.pow(2, 53) - 1;\\n  defineProperties(Number, {\\n    MAX_SAFE_INTEGER: maxSafeInteger,\\n    MIN_SAFE_INTEGER: -maxSafeInteger,\\n    EPSILON: 2.220446049250313e-16,\\n\\n    parseInt: globals.parseInt,\\n    parseFloat: globals.parseFloat,\\n\\n    isFinite: numberIsFinite,\\n\\n    isInteger: function isInteger(value) {\\n      return numberIsFinite(value) && ES.ToInteger(value) === value;\\n    },\\n\\n    isSafeInteger: function isSafeInteger(value) {\\n      return Number.isInteger(value) && _abs(value) <= Number.MAX_SAFE_INTEGER;\\n    },\\n\\n    isNaN: numberIsNaN\\n  });\\n  // Firefox 37 has a conforming Number.parseInt, but it's not === to the global parseInt (fixed in v40)\\n  defineProperty(Number, 'parseInt', globals.parseInt, Number.parseInt !== globals.parseInt);\\n\\n  // Work around bugs in Array#find and Array#findIndex -- early\\n  // implementations skipped holes in sparse arrays. (Note that the\\n  // implementations of find/findIndex indirectly use shimmed\\n  // methods of Number, so this test has to happen down here.)\\n  /*jshint elision: true */\\n  /* eslint-disable no-sparse-arrays */\\n  if ([, 1].find(function () { return true; }) === 1) {\\n    overrideNative(Array.prototype, 'find', ArrayPrototypeShims.find);\\n  }\\n  if ([, 1].findIndex(function () { return true; }) !== 0) {\\n    overrideNative(Array.prototype, 'findIndex', ArrayPrototypeShims.findIndex);\\n  }\\n  /* eslint-enable no-sparse-arrays */\\n  /*jshint elision: false */\\n\\n  var isEnumerableOn = Function.bind.call(Function.bind, Object.prototype.propertyIsEnumerable);\\n  var ensureEnumerable = function ensureEnumerable(obj, prop) {\\n    if (supportsDescriptors && isEnumerableOn(obj, prop)) {\\n      Object.defineProperty(obj, prop, { enumerable: false });\\n    }\\n  };\\n  var sliceArgs = function sliceArgs() {\\n    // per https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\\n    // and https://gist.github.com/WebReflection/4327762cb87a8c634a29\\n    var initial = Number(this);\\n    var len = arguments.length;\\n    var desiredArgCount = len - initial;\\n    var args = new Array(desiredArgCount < 0 ? 0 : desiredArgCount);\\n    for (var i = initial; i < len; ++i) {\\n      args[i - initial] = arguments[i];\\n    }\\n    return args;\\n  };\\n  var assignTo = function assignTo(source) {\\n    return function assignToSource(target, key) {\\n      target[key] = source[key];\\n      return target;\\n    };\\n  };\\n  var assignReducer = function (target, source) {\\n    var sourceKeys = keys(Object(source));\\n    var symbols;\\n    if (ES.IsCallable(Object.getOwnPropertySymbols)) {\\n      symbols = _filter(Object.getOwnPropertySymbols(Object(source)), isEnumerableOn(source));\\n    }\\n    return _reduce(_concat(sourceKeys, symbols || []), assignTo(source), target);\\n  };\\n\\n  var ObjectShims = {\\n    // 19.1.3.1\\n    assign: function (target, source) {\\n      var to = ES.ToObject(target, 'Cannot convert undefined or null to object');\\n      return _reduce(ES.Call(sliceArgs, 1, arguments), assignReducer, to);\\n    },\\n\\n    // Added in WebKit in https://bugs.webkit.org/show_bug.cgi?id=143865\\n    is: function is(a, b) {\\n      return ES.SameValue(a, b);\\n    }\\n  };\\n  var assignHasPendingExceptions = Object.assign && Object.preventExtensions && (function () {\\n    // Firefox 37 still has \\\"pending exception\\\" logic in its Object.assign implementation,\\n    // which is 72% slower than our shim, and Firefox 40's native implementation.\\n    var thrower = Object.preventExtensions({ 1: 2 });\\n    try {\\n      Object.assign(thrower, 'xy');\\n    } catch (e) {\\n      return thrower[1] === 'y';\\n    }\\n  }());\\n  if (assignHasPendingExceptions) {\\n    overrideNative(Object, 'assign', ObjectShims.assign);\\n  }\\n  defineProperties(Object, ObjectShims);\\n\\n  if (supportsDescriptors) {\\n    var ES5ObjectShims = {\\n      // 19.1.3.9\\n      // shim from https://gist.github.com/WebReflection/5593554\\n      setPrototypeOf: (function (Object, magic) {\\n        var set;\\n\\n        var checkArgs = function (O, proto) {\\n          if (!ES.TypeIsObject(O)) {\\n            throw new TypeError('cannot set prototype on a non-object');\\n          }\\n          if (!(proto === null || ES.TypeIsObject(proto))) {\\n            throw new TypeError('can only set prototype to an object or null' + proto);\\n          }\\n        };\\n\\n        var setPrototypeOf = function (O, proto) {\\n          checkArgs(O, proto);\\n          _call(set, O, proto);\\n          return O;\\n        };\\n\\n        try {\\n          // this works already in Firefox and Safari\\n          set = Object.getOwnPropertyDescriptor(Object.prototype, magic).set;\\n          _call(set, {}, null);\\n        } catch (e) {\\n          if (Object.prototype !== {}[magic]) {\\n            // IE < 11 cannot be shimmed\\n            return;\\n          }\\n          // probably Chrome or some old Mobile stock browser\\n          set = function (proto) {\\n            this[magic] = proto;\\n          };\\n          // please note that this will **not** work\\n          // in those browsers that do not inherit\\n          // __proto__ by mistake from Object.prototype\\n          // in these cases we should probably throw an error\\n          // or at least be informed about the issue\\n          setPrototypeOf.polyfill = setPrototypeOf(\\n            setPrototypeOf({}, null),\\n            Object.prototype\\n          ) instanceof Object;\\n          // setPrototypeOf.polyfill === true means it works as meant\\n          // setPrototypeOf.polyfill === false means it's not 100% reliable\\n          // setPrototypeOf.polyfill === undefined\\n          // or\\n          // setPrototypeOf.polyfill ==  null means it's not a polyfill\\n          // which means it works as expected\\n          // we can even delete Object.prototype.__proto__;\\n        }\\n        return setPrototypeOf;\\n      }(Object, '__proto__'))\\n    };\\n\\n    defineProperties(Object, ES5ObjectShims);\\n  }\\n\\n  // Workaround bug in Opera 12 where setPrototypeOf(x, null) doesn't work,\\n  // but Object.create(null) does.\\n  if (Object.setPrototypeOf && Object.getPrototypeOf &&\\n      Object.getPrototypeOf(Object.setPrototypeOf({}, null)) !== null &&\\n      Object.getPrototypeOf(Object.create(null)) === null) {\\n    (function () {\\n      var FAKENULL = Object.create(null);\\n      var gpo = Object.getPrototypeOf;\\n      var spo = Object.setPrototypeOf;\\n      Object.getPrototypeOf = function (o) {\\n        var result = gpo(o);\\n        return result === FAKENULL ? null : result;\\n      };\\n      Object.setPrototypeOf = function (o, p) {\\n        var proto = p === null ? FAKENULL : p;\\n        return spo(o, proto);\\n      };\\n      Object.setPrototypeOf.polyfill = false;\\n    }());\\n  }\\n\\n  var objectKeysAcceptsPrimitives = !throwsError(function () { Object.keys('foo'); });\\n  if (!objectKeysAcceptsPrimitives) {\\n    var originalObjectKeys = Object.keys;\\n    overrideNative(Object, 'keys', function keys(value) {\\n      return originalObjectKeys(ES.ToObject(value));\\n    });\\n    keys = Object.keys;\\n  }\\n  var objectKeysRejectsRegex = throwsError(function () { Object.keys(/a/g); });\\n  if (objectKeysRejectsRegex) {\\n    var regexRejectingObjectKeys = Object.keys;\\n    overrideNative(Object, 'keys', function keys(value) {\\n      if (Type.regex(value)) {\\n        var regexKeys = [];\\n        for (var k in value) {\\n          if (_hasOwnProperty(value, k)) {\\n            _push(regexKeys, k);\\n          }\\n        }\\n        return regexKeys;\\n      }\\n      return regexRejectingObjectKeys(value);\\n    });\\n    keys = Object.keys;\\n  }\\n\\n  if (Object.getOwnPropertyNames) {\\n    var objectGOPNAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyNames('foo'); });\\n    if (!objectGOPNAcceptsPrimitives) {\\n      var cachedWindowNames = typeof window === 'object' ? Object.getOwnPropertyNames(window) : [];\\n      var originalObjectGetOwnPropertyNames = Object.getOwnPropertyNames;\\n      overrideNative(Object, 'getOwnPropertyNames', function getOwnPropertyNames(value) {\\n        var val = ES.ToObject(value);\\n        if (_toString(val) === '[object Window]') {\\n          try {\\n            return originalObjectGetOwnPropertyNames(val);\\n          } catch (e) {\\n            // IE bug where layout engine calls userland gOPN for cross-domain `window` objects\\n            return _concat([], cachedWindowNames);\\n          }\\n        }\\n        return originalObjectGetOwnPropertyNames(val);\\n      });\\n    }\\n  }\\n  if (Object.getOwnPropertyDescriptor) {\\n    var objectGOPDAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyDescriptor('foo', 'bar'); });\\n    if (!objectGOPDAcceptsPrimitives) {\\n      var originalObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\\n      overrideNative(Object, 'getOwnPropertyDescriptor', function getOwnPropertyDescriptor(value, property) {\\n        return originalObjectGetOwnPropertyDescriptor(ES.ToObject(value), property);\\n      });\\n    }\\n  }\\n  if (Object.seal) {\\n    var objectSealAcceptsPrimitives = !throwsError(function () { Object.seal('foo'); });\\n    if (!objectSealAcceptsPrimitives) {\\n      var originalObjectSeal = Object.seal;\\n      overrideNative(Object, 'seal', function seal(value) {\\n        if (!ES.TypeIsObject(value)) { return value; }\\n        return originalObjectSeal(value);\\n      });\\n    }\\n  }\\n  if (Object.isSealed) {\\n    var objectIsSealedAcceptsPrimitives = !throwsError(function () { Object.isSealed('foo'); });\\n    if (!objectIsSealedAcceptsPrimitives) {\\n      var originalObjectIsSealed = Object.isSealed;\\n      overrideNative(Object, 'isSealed', function isSealed(value) {\\n        if (!ES.TypeIsObject(value)) { return true; }\\n        return originalObjectIsSealed(value);\\n      });\\n    }\\n  }\\n  if (Object.freeze) {\\n    var objectFreezeAcceptsPrimitives = !throwsError(function () { Object.freeze('foo'); });\\n    if (!objectFreezeAcceptsPrimitives) {\\n      var originalObjectFreeze = Object.freeze;\\n      overrideNative(Object, 'freeze', function freeze(value) {\\n        if (!ES.TypeIsObject(value)) { return value; }\\n        return originalObjectFreeze(value);\\n      });\\n    }\\n  }\\n  if (Object.isFrozen) {\\n    var objectIsFrozenAcceptsPrimitives = !throwsError(function () { Object.isFrozen('foo'); });\\n    if (!objectIsFrozenAcceptsPrimitives) {\\n      var originalObjectIsFrozen = Object.isFrozen;\\n      overrideNative(Object, 'isFrozen', function isFrozen(value) {\\n        if (!ES.TypeIsObject(value)) { return true; }\\n        return originalObjectIsFrozen(value);\\n      });\\n    }\\n  }\\n  if (Object.preventExtensions) {\\n    var objectPreventExtensionsAcceptsPrimitives = !throwsError(function () { Object.preventExtensions('foo'); });\\n    if (!objectPreventExtensionsAcceptsPrimitives) {\\n      var originalObjectPreventExtensions = Object.preventExtensions;\\n      overrideNative(Object, 'preventExtensions', function preventExtensions(value) {\\n        if (!ES.TypeIsObject(value)) { return value; }\\n        return originalObjectPreventExtensions(value);\\n      });\\n    }\\n  }\\n  if (Object.isExtensible) {\\n    var objectIsExtensibleAcceptsPrimitives = !throwsError(function () { Object.isExtensible('foo'); });\\n    if (!objectIsExtensibleAcceptsPrimitives) {\\n      var originalObjectIsExtensible = Object.isExtensible;\\n      overrideNative(Object, 'isExtensible', function isExtensible(value) {\\n        if (!ES.TypeIsObject(value)) { return false; }\\n        return originalObjectIsExtensible(value);\\n      });\\n    }\\n  }\\n  if (Object.getPrototypeOf) {\\n    var objectGetProtoAcceptsPrimitives = !throwsError(function () { Object.getPrototypeOf('foo'); });\\n    if (!objectGetProtoAcceptsPrimitives) {\\n      var originalGetProto = Object.getPrototypeOf;\\n      overrideNative(Object, 'getPrototypeOf', function getPrototypeOf(value) {\\n        return originalGetProto(ES.ToObject(value));\\n      });\\n    }\\n  }\\n\\n  var hasFlags = supportsDescriptors && (function () {\\n    var desc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');\\n    return desc && ES.IsCallable(desc.get);\\n  }());\\n  if (supportsDescriptors && !hasFlags) {\\n    var regExpFlagsGetter = function flags() {\\n      if (!ES.TypeIsObject(this)) {\\n        throw new TypeError('Method called on incompatible type: must be an object.');\\n      }\\n      var result = '';\\n      if (this.global) {\\n        result += 'g';\\n      }\\n      if (this.ignoreCase) {\\n        result += 'i';\\n      }\\n      if (this.multiline) {\\n        result += 'm';\\n      }\\n      if (this.unicode) {\\n        result += 'u';\\n      }\\n      if (this.sticky) {\\n        result += 'y';\\n      }\\n      return result;\\n    };\\n\\n    Value.getter(RegExp.prototype, 'flags', regExpFlagsGetter);\\n  }\\n\\n  var regExpSupportsFlagsWithRegex = supportsDescriptors && valueOrFalseIfThrows(function () {\\n    return String(new RegExp(/a/g, 'i')) === '/a/i';\\n  });\\n  var regExpNeedsToSupportSymbolMatch = hasSymbols && supportsDescriptors && (function () {\\n    // Edge 0.12 supports flags fully, but does not support Symbol.match\\n    var regex = /./;\\n    regex[Symbol.match] = false;\\n    return RegExp(regex) === regex;\\n  }());\\n\\n  var regexToStringIsGeneric = valueOrFalseIfThrows(function () {\\n    return RegExp.prototype.toString.call({ source: 'abc' }) === '/abc/';\\n  });\\n  var regexToStringSupportsGenericFlags = regexToStringIsGeneric && valueOrFalseIfThrows(function () {\\n    return RegExp.prototype.toString.call({ source: 'a', flags: 'b' }) === '/a/b';\\n  });\\n  if (!regexToStringIsGeneric || !regexToStringSupportsGenericFlags) {\\n    var origRegExpToString = RegExp.prototype.toString;\\n    defineProperty(RegExp.prototype, 'toString', function toString() {\\n      var R = ES.RequireObjectCoercible(this);\\n      if (Type.regex(R)) {\\n        return _call(origRegExpToString, R);\\n      }\\n      var pattern = $String(R.source);\\n      var flags = $String(R.flags);\\n      return '/' + pattern + '/' + flags;\\n    }, true);\\n    Value.preserveToString(RegExp.prototype.toString, origRegExpToString);\\n  }\\n\\n  if (supportsDescriptors && (!regExpSupportsFlagsWithRegex || regExpNeedsToSupportSymbolMatch)) {\\n    var flagsGetter = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get;\\n    var sourceDesc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'source') || {};\\n    var legacySourceGetter = function () {\\n      // prior to it being a getter, it's own + nonconfigurable\\n      return this.source;\\n    };\\n    var sourceGetter = ES.IsCallable(sourceDesc.get) ? sourceDesc.get : legacySourceGetter;\\n\\n    var OrigRegExp = RegExp;\\n    var RegExpShim = (function () {\\n      return function RegExp(pattern, flags) {\\n        var patternIsRegExp = ES.IsRegExp(pattern);\\n        var calledWithNew = this instanceof RegExp;\\n        if (!calledWithNew && patternIsRegExp && typeof flags === 'undefined' && pattern.constructor === RegExp) {\\n          return pattern;\\n        }\\n\\n        var P = pattern;\\n        var F = flags;\\n        if (Type.regex(pattern)) {\\n          P = ES.Call(sourceGetter, pattern);\\n          F = typeof flags === 'undefined' ? ES.Call(flagsGetter, pattern) : flags;\\n          return new RegExp(P, F);\\n        } else if (patternIsRegExp) {\\n          P = pattern.source;\\n          F = typeof flags === 'undefined' ? pattern.flags : flags;\\n        }\\n        return new OrigRegExp(pattern, flags);\\n      };\\n    }());\\n    wrapConstructor(OrigRegExp, RegExpShim, {\\n      $input: true // Chrome < v39 & Opera < 26 have a nonstandard \\\"$input\\\" property\\n    });\\n    /* globals RegExp: true */\\n    /* eslint-disable no-undef, no-global-assign */\\n    /* jshint -W020 */\\n    RegExp = RegExpShim;\\n    Value.redefine(globals, 'RegExp', RegExpShim);\\n    /* jshint +W020 */\\n    /* eslint-enable no-undef, no-global-assign */\\n    /* globals RegExp: false */\\n  }\\n\\n  if (supportsDescriptors) {\\n    var regexGlobals = {\\n      input: '$_',\\n      lastMatch: '$&',\\n      lastParen: '$+',\\n      leftContext: '$`',\\n      rightContext: '$\\\\''\\n    };\\n    _forEach(keys(regexGlobals), function (prop) {\\n      if (prop in RegExp && !(regexGlobals[prop] in RegExp)) {\\n        Value.getter(RegExp, regexGlobals[prop], function get() {\\n          return RegExp[prop];\\n        });\\n      }\\n    });\\n  }\\n  addDefaultSpecies(RegExp);\\n\\n  var inverseEpsilon = 1 / Number.EPSILON;\\n  var roundTiesToEven = function roundTiesToEven(n) {\\n    // Even though this reduces down to `return n`, it takes advantage of built-in rounding.\\n    return (n + inverseEpsilon) - inverseEpsilon;\\n  };\\n  var BINARY_32_EPSILON = Math.pow(2, -23);\\n  var BINARY_32_MAX_VALUE = Math.pow(2, 127) * (2 - BINARY_32_EPSILON);\\n  var BINARY_32_MIN_VALUE = Math.pow(2, -126);\\n  var E = Math.E;\\n  var LOG2E = Math.LOG2E;\\n  var LOG10E = Math.LOG10E;\\n  var numberCLZ = Number.prototype.clz;\\n  delete Number.prototype.clz; // Safari 8 has Number#clz\\n\\n  var MathShims = {\\n    acosh: function acosh(value) {\\n      var x = Number(value);\\n      if (numberIsNaN(x) || value < 1) { return NaN; }\\n      if (x === 1) { return 0; }\\n      if (x === Infinity) { return x; }\\n      return _log((x / E) + (_sqrt(x + 1) * _sqrt(x - 1) / E)) + 1;\\n    },\\n\\n    asinh: function asinh(value) {\\n      var x = Number(value);\\n      if (x === 0 || !globalIsFinite(x)) {\\n        return x;\\n      }\\n      return x < 0 ? -asinh(-x) : _log(x + _sqrt((x * x) + 1));\\n    },\\n\\n    atanh: function atanh(value) {\\n      var x = Number(value);\\n      if (numberIsNaN(x) || x < -1 || x > 1) {\\n        return NaN;\\n      }\\n      if (x === -1) { return -Infinity; }\\n      if (x === 1) { return Infinity; }\\n      if (x === 0) { return x; }\\n      return 0.5 * _log((1 + x) / (1 - x));\\n    },\\n\\n    cbrt: function cbrt(value) {\\n      var x = Number(value);\\n      if (x === 0) { return x; }\\n      var negate = x < 0;\\n      var result;\\n      if (negate) { x = -x; }\\n      if (x === Infinity) {\\n        result = Infinity;\\n      } else {\\n        result = _exp(_log(x) / 3);\\n        // from http://en.wikipedia.org/wiki/Cube_root#Numerical_methods\\n        result = ((x / (result * result)) + (2 * result)) / 3;\\n      }\\n      return negate ? -result : result;\\n    },\\n\\n    clz32: function clz32(value) {\\n      // See https://bugs.ecmascript.org/show_bug.cgi?id=2465\\n      var x = Number(value);\\n      var number = ES.ToUint32(x);\\n      if (number === 0) {\\n        return 32;\\n      }\\n      return numberCLZ ? ES.Call(numberCLZ, number) : 31 - _floor(_log(number + 0.5) * LOG2E);\\n    },\\n\\n    cosh: function cosh(value) {\\n      var x = Number(value);\\n      if (x === 0) { return 1; } // +0 or -0\\n      if (numberIsNaN(x)) { return NaN; }\\n      if (!globalIsFinite(x)) { return Infinity; }\\n      if (x < 0) { x = -x; }\\n      if (x > 21) { return _exp(x) / 2; }\\n      return (_exp(x) + _exp(-x)) / 2;\\n    },\\n\\n    expm1: function expm1(value) {\\n      var x = Number(value);\\n      if (x === -Infinity) { return -1; }\\n      if (!globalIsFinite(x) || x === 0) { return x; }\\n      if (_abs(x) > 0.5) {\\n        return _exp(x) - 1;\\n      }\\n      // A more precise approximation using Taylor series expansion\\n      // from https://github.com/paulmillr/es6-shim/issues/314#issuecomment-70293986\\n      var t = x;\\n      var sum = 0;\\n      var n = 1;\\n      while (sum + t !== sum) {\\n        sum += t;\\n        n += 1;\\n        t *= x / n;\\n      }\\n      return sum;\\n    },\\n\\n    hypot: function hypot(x, y) {\\n      var result = 0;\\n      var largest = 0;\\n      for (var i = 0; i < arguments.length; ++i) {\\n        var value = _abs(Number(arguments[i]));\\n        if (largest < value) {\\n          result *= (largest / value) * (largest / value);\\n          result += 1;\\n          largest = value;\\n        } else {\\n          result += value > 0 ? (value / largest) * (value / largest) : value;\\n        }\\n      }\\n      return largest === Infinity ? Infinity : largest * _sqrt(result);\\n    },\\n\\n    log2: function log2(value) {\\n      return _log(value) * LOG2E;\\n    },\\n\\n    log10: function log10(value) {\\n      return _log(value) * LOG10E;\\n    },\\n\\n    log1p: function log1p(value) {\\n      var x = Number(value);\\n      if (x < -1 || numberIsNaN(x)) { return NaN; }\\n      if (x === 0 || x === Infinity) { return x; }\\n      if (x === -1) { return -Infinity; }\\n\\n      return (1 + x) - 1 === 0 ? x : x * (_log(1 + x) / ((1 + x) - 1));\\n    },\\n\\n    sign: _sign,\\n\\n    sinh: function sinh(value) {\\n      var x = Number(value);\\n      if (!globalIsFinite(x) || x === 0) { return x; }\\n\\n      if (_abs(x) < 1) {\\n        return (Math.expm1(x) - Math.expm1(-x)) / 2;\\n      }\\n      return (_exp(x - 1) - _exp(-x - 1)) * E / 2;\\n    },\\n\\n    tanh: function tanh(value) {\\n      var x = Number(value);\\n      if (numberIsNaN(x) || x === 0) { return x; }\\n      // can exit early at +-20 as JS loses precision for true value at this integer\\n      if (x >= 20) { return 1; }\\n      if (x <= -20) { return -1; }\\n\\n      return (Math.expm1(x) - Math.expm1(-x)) / (_exp(x) + _exp(-x));\\n    },\\n\\n    trunc: function trunc(value) {\\n      var x = Number(value);\\n      return x < 0 ? -_floor(-x) : _floor(x);\\n    },\\n\\n    imul: function imul(x, y) {\\n      // taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\\n      var a = ES.ToUint32(x);\\n      var b = ES.ToUint32(y);\\n      var ah = (a >>> 16) & 0xffff;\\n      var al = a & 0xffff;\\n      var bh = (b >>> 16) & 0xffff;\\n      var bl = b & 0xffff;\\n      // the shift by 0 fixes the sign on the high part\\n      // the final |0 converts the unsigned value into a signed value\\n      return (al * bl) + ((((ah * bl) + (al * bh)) << 16) >>> 0) | 0;\\n    },\\n\\n    fround: function fround(x) {\\n      var v = Number(x);\\n      if (v === 0 || v === Infinity || v === -Infinity || numberIsNaN(v)) {\\n        return v;\\n      }\\n      var sign = _sign(v);\\n      var abs = _abs(v);\\n      if (abs < BINARY_32_MIN_VALUE) {\\n        return sign * roundTiesToEven(\\n          abs / BINARY_32_MIN_VALUE / BINARY_32_EPSILON\\n        ) * BINARY_32_MIN_VALUE * BINARY_32_EPSILON;\\n      }\\n      // Veltkamp's splitting (?)\\n      var a = (1 + (BINARY_32_EPSILON / Number.EPSILON)) * abs;\\n      var result = a - (a - abs);\\n      if (result > BINARY_32_MAX_VALUE || numberIsNaN(result)) {\\n        return sign * Infinity;\\n      }\\n      return sign * result;\\n    }\\n  };\\n  defineProperties(Math, MathShims);\\n  // IE 11 TP has an imprecise log1p: reports Math.log1p(-1e-17) as 0\\n  defineProperty(Math, 'log1p', MathShims.log1p, Math.log1p(-1e-17) !== -1e-17);\\n  // IE 11 TP has an imprecise asinh: reports Math.asinh(-1e7) as not exactly equal to -Math.asinh(1e7)\\n  defineProperty(Math, 'asinh', MathShims.asinh, Math.asinh(-1e7) !== -Math.asinh(1e7));\\n  // Chrome 40 has an imprecise Math.tanh with very small numbers\\n  defineProperty(Math, 'tanh', MathShims.tanh, Math.tanh(-2e-17) !== -2e-17);\\n  // Chrome 40 loses Math.acosh precision with high numbers\\n  defineProperty(Math, 'acosh', MathShims.acosh, Math.acosh(Number.MAX_VALUE) === Infinity);\\n  // Firefox 38 on Windows\\n  defineProperty(Math, 'cbrt', MathShims.cbrt, Math.abs(1 - (Math.cbrt(1e-300) / 1e-100)) / Number.EPSILON > 8);\\n  // node 0.11 has an imprecise Math.sinh with very small numbers\\n  defineProperty(Math, 'sinh', MathShims.sinh, Math.sinh(-2e-17) !== -2e-17);\\n  // FF 35 on Linux reports 22025.465794806725 for Math.expm1(10)\\n  var expm1OfTen = Math.expm1(10);\\n  defineProperty(Math, 'expm1', MathShims.expm1, expm1OfTen > 22025.465794806719 || expm1OfTen < 22025.4657948067165168);\\n\\n  var origMathRound = Math.round;\\n  // breaks in e.g. Safari 8, Internet Explorer 11, Opera 12\\n  var roundHandlesBoundaryConditions = Math.round(0.5 - (Number.EPSILON / 4)) === 0 &&\\n    Math.round(-0.5 + (Number.EPSILON / 3.99)) === 1;\\n\\n  // When engines use Math.floor(x + 0.5) internally, Math.round can be buggy for large integers.\\n  // This behavior should be governed by \\\"round to nearest, ties to even mode\\\"\\n  // see http://www.ecma-international.org/ecma-262/6.0/#sec-terms-and-definitions-number-type\\n  // These are the boundary cases where it breaks.\\n  var smallestPositiveNumberWhereRoundBreaks = inverseEpsilon + 1;\\n  var largestPositiveNumberWhereRoundBreaks = (2 * inverseEpsilon) - 1;\\n  var roundDoesNotIncreaseIntegers = [\\n    smallestPositiveNumberWhereRoundBreaks,\\n    largestPositiveNumberWhereRoundBreaks\\n  ].every(function (num) {\\n    return Math.round(num) === num;\\n  });\\n  defineProperty(Math, 'round', function round(x) {\\n    var floor = _floor(x);\\n    var ceil = floor === -1 ? -0 : floor + 1;\\n    return x - floor < 0.5 ? floor : ceil;\\n  }, !roundHandlesBoundaryConditions || !roundDoesNotIncreaseIntegers);\\n  Value.preserveToString(Math.round, origMathRound);\\n\\n  var origImul = Math.imul;\\n  if (Math.imul(0xffffffff, 5) !== -5) {\\n    // Safari 6.1, at least, reports \\\"0\\\" for this value\\n    Math.imul = MathShims.imul;\\n    Value.preserveToString(Math.imul, origImul);\\n  }\\n  if (Math.imul.length !== 2) {\\n    // Safari 8.0.4 has a length of 1\\n    // fixed in https://bugs.webkit.org/show_bug.cgi?id=143658\\n    overrideNative(Math, 'imul', function imul(x, y) {\\n      return ES.Call(origImul, Math, arguments);\\n    });\\n  }\\n\\n  // Promises\\n  // Simplest possible implementation; use a 3rd-party library if you\\n  // want the best possible speed and/or long stack traces.\\n  var PromiseShim = (function () {\\n    var setTimeout = globals.setTimeout;\\n    // some environments don't have setTimeout - no way to shim here.\\n    if (typeof setTimeout !== 'function' && typeof setTimeout !== 'object') { return; }\\n\\n    ES.IsPromise = function (promise) {\\n      if (!ES.TypeIsObject(promise)) {\\n        return false;\\n      }\\n      if (typeof promise._promise === 'undefined') {\\n        return false; // uninitialized, or missing our hidden field.\\n      }\\n      return true;\\n    };\\n\\n    // \\\"PromiseCapability\\\" in the spec is what most promise implementations\\n    // call a \\\"deferred\\\".\\n    var PromiseCapability = function (C) {\\n      if (!ES.IsConstructor(C)) {\\n        throw new TypeError('Bad promise constructor');\\n      }\\n      var capability = this;\\n      var resolver = function (resolve, reject) {\\n        if (capability.resolve !== void 0 || capability.reject !== void 0) {\\n          throw new TypeError('Bad Promise implementation!');\\n        }\\n        capability.resolve = resolve;\\n        capability.reject = reject;\\n      };\\n      // Initialize fields to inform optimizers about the object shape.\\n      capability.resolve = void 0;\\n      capability.reject = void 0;\\n      capability.promise = new C(resolver);\\n      if (!(ES.IsCallable(capability.resolve) && ES.IsCallable(capability.reject))) {\\n        throw new TypeError('Bad promise constructor');\\n      }\\n    };\\n\\n    // find an appropriate setImmediate-alike\\n    var makeZeroTimeout;\\n    /*global window */\\n    if (typeof window !== 'undefined' && ES.IsCallable(window.postMessage)) {\\n      makeZeroTimeout = function () {\\n        // from http://dbaron.org/log/20100309-faster-timeouts\\n        var timeouts = [];\\n        var messageName = 'zero-timeout-message';\\n        var setZeroTimeout = function (fn) {\\n          _push(timeouts, fn);\\n          window.postMessage(messageName, '*');\\n        };\\n        var handleMessage = function (event) {\\n          if (event.source === window && event.data === messageName) {\\n            event.stopPropagation();\\n            if (timeouts.length === 0) { return; }\\n            var fn = _shift(timeouts);\\n            fn();\\n          }\\n        };\\n        window.addEventListener('message', handleMessage, true);\\n        return setZeroTimeout;\\n      };\\n    }\\n    var makePromiseAsap = function () {\\n      // An efficient task-scheduler based on a pre-existing Promise\\n      // implementation, which we can use even if we override the\\n      // global Promise below (in order to workaround bugs)\\n      // https://github.com/Raynos/observ-hash/issues/2#issuecomment-35857671\\n      var P = globals.Promise;\\n      var pr = P && P.resolve && P.resolve();\\n      return pr && function (task) {\\n        return pr.then(task);\\n      };\\n    };\\n    /*global process */\\n    /* jscs:disable disallowMultiLineTernary */\\n    var enqueue = ES.IsCallable(globals.setImmediate) ?\\n      globals.setImmediate :\\n      typeof process === 'object' && process.nextTick ? process.nextTick :\\n      makePromiseAsap() ||\\n      (ES.IsCallable(makeZeroTimeout) ? makeZeroTimeout() :\\n      function (task) { setTimeout(task, 0); }); // fallback\\n    /* jscs:enable disallowMultiLineTernary */\\n\\n    // Constants for Promise implementation\\n    var PROMISE_IDENTITY = function (x) { return x; };\\n    var PROMISE_THROWER = function (e) { throw e; };\\n    var PROMISE_PENDING = 0;\\n    var PROMISE_FULFILLED = 1;\\n    var PROMISE_REJECTED = 2;\\n    // We store fulfill/reject handlers and capabilities in a single array.\\n    var PROMISE_FULFILL_OFFSET = 0;\\n    var PROMISE_REJECT_OFFSET = 1;\\n    var PROMISE_CAPABILITY_OFFSET = 2;\\n    // This is used in an optimization for chaining promises via then.\\n    var PROMISE_FAKE_CAPABILITY = {};\\n\\n    var enqueuePromiseReactionJob = function (handler, capability, argument) {\\n      enqueue(function () {\\n        promiseReactionJob(handler, capability, argument);\\n      });\\n    };\\n\\n    var promiseReactionJob = function (handler, promiseCapability, argument) {\\n      var handlerResult, f;\\n      if (promiseCapability === PROMISE_FAKE_CAPABILITY) {\\n        // Fast case, when we don't actually need to chain through to a\\n        // (real) promiseCapability.\\n        return handler(argument);\\n      }\\n      try {\\n        handlerResult = handler(argument);\\n        f = promiseCapability.resolve;\\n      } catch (e) {\\n        handlerResult = e;\\n        f = promiseCapability.reject;\\n      }\\n      f(handlerResult);\\n    };\\n\\n    var fulfillPromise = function (promise, value) {\\n      var _promise = promise._promise;\\n      var length = _promise.reactionLength;\\n      if (length > 0) {\\n        enqueuePromiseReactionJob(\\n          _promise.fulfillReactionHandler0,\\n          _promise.reactionCapability0,\\n          value\\n        );\\n        _promise.fulfillReactionHandler0 = void 0;\\n        _promise.rejectReactions0 = void 0;\\n        _promise.reactionCapability0 = void 0;\\n        if (length > 1) {\\n          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\\n            enqueuePromiseReactionJob(\\n              _promise[idx + PROMISE_FULFILL_OFFSET],\\n              _promise[idx + PROMISE_CAPABILITY_OFFSET],\\n              value\\n            );\\n            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\\n            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\\n            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\\n          }\\n        }\\n      }\\n      _promise.result = value;\\n      _promise.state = PROMISE_FULFILLED;\\n      _promise.reactionLength = 0;\\n    };\\n\\n    var rejectPromise = function (promise, reason) {\\n      var _promise = promise._promise;\\n      var length = _promise.reactionLength;\\n      if (length > 0) {\\n        enqueuePromiseReactionJob(\\n          _promise.rejectReactionHandler0,\\n          _promise.reactionCapability0,\\n          reason\\n        );\\n        _promise.fulfillReactionHandler0 = void 0;\\n        _promise.rejectReactions0 = void 0;\\n        _promise.reactionCapability0 = void 0;\\n        if (length > 1) {\\n          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\\n            enqueuePromiseReactionJob(\\n              _promise[idx + PROMISE_REJECT_OFFSET],\\n              _promise[idx + PROMISE_CAPABILITY_OFFSET],\\n              reason\\n            );\\n            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\\n            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\\n            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\\n          }\\n        }\\n      }\\n      _promise.result = reason;\\n      _promise.state = PROMISE_REJECTED;\\n      _promise.reactionLength = 0;\\n    };\\n\\n    var createResolvingFunctions = function (promise) {\\n      var alreadyResolved = false;\\n      var resolve = function (resolution) {\\n        var then;\\n        if (alreadyResolved) { return; }\\n        alreadyResolved = true;\\n        if (resolution === promise) {\\n          return rejectPromise(promise, new TypeError('Self resolution'));\\n        }\\n        if (!ES.TypeIsObject(resolution)) {\\n          return fulfillPromise(promise, resolution);\\n        }\\n        try {\\n          then = resolution.then;\\n        } catch (e) {\\n          return rejectPromise(promise, e);\\n        }\\n        if (!ES.IsCallable(then)) {\\n          return fulfillPromise(promise, resolution);\\n        }\\n        enqueue(function () {\\n          promiseResolveThenableJob(promise, resolution, then);\\n        });\\n      };\\n      var reject = function (reason) {\\n        if (alreadyResolved) { return; }\\n        alreadyResolved = true;\\n        return rejectPromise(promise, reason);\\n      };\\n      return { resolve: resolve, reject: reject };\\n    };\\n\\n    var optimizedThen = function (then, thenable, resolve, reject) {\\n      // Optimization: since we discard the result, we can pass our\\n      // own then implementation a special hint to let it know it\\n      // doesn't have to create it.  (The PROMISE_FAKE_CAPABILITY\\n      // object is local to this implementation and unforgeable outside.)\\n      if (then === Promise$prototype$then) {\\n        _call(then, thenable, resolve, reject, PROMISE_FAKE_CAPABILITY);\\n      } else {\\n        _call(then, thenable, resolve, reject);\\n      }\\n    };\\n    var promiseResolveThenableJob = function (promise, thenable, then) {\\n      var resolvingFunctions = createResolvingFunctions(promise);\\n      var resolve = resolvingFunctions.resolve;\\n      var reject = resolvingFunctions.reject;\\n      try {\\n        optimizedThen(then, thenable, resolve, reject);\\n      } catch (e) {\\n        reject(e);\\n      }\\n    };\\n\\n    var Promise$prototype, Promise$prototype$then;\\n    var Promise = (function () {\\n      var PromiseShim = function Promise(resolver) {\\n        if (!(this instanceof PromiseShim)) {\\n          throw new TypeError('Constructor Promise requires \\\"new\\\"');\\n        }\\n        if (this && this._promise) {\\n          throw new TypeError('Bad construction');\\n        }\\n        // see https://bugs.ecmascript.org/show_bug.cgi?id=2482\\n        if (!ES.IsCallable(resolver)) {\\n          throw new TypeError('not a valid resolver');\\n        }\\n        var promise = emulateES6construct(this, PromiseShim, Promise$prototype, {\\n          _promise: {\\n            result: void 0,\\n            state: PROMISE_PENDING,\\n            // The first member of the \\\"reactions\\\" array is inlined here,\\n            // since most promises only have one reaction.\\n            // We've also exploded the 'reaction' object to inline the\\n            // \\\"handler\\\" and \\\"capability\\\" fields, since both fulfill and\\n            // reject reactions share the same capability.\\n            reactionLength: 0,\\n            fulfillReactionHandler0: void 0,\\n            rejectReactionHandler0: void 0,\\n            reactionCapability0: void 0\\n          }\\n        });\\n        var resolvingFunctions = createResolvingFunctions(promise);\\n        var reject = resolvingFunctions.reject;\\n        try {\\n          resolver(resolvingFunctions.resolve, reject);\\n        } catch (e) {\\n          reject(e);\\n        }\\n        return promise;\\n      };\\n      return PromiseShim;\\n    }());\\n    Promise$prototype = Promise.prototype;\\n\\n    var _promiseAllResolver = function (index, values, capability, remaining) {\\n      var alreadyCalled = false;\\n      return function (x) {\\n        if (alreadyCalled) { return; }\\n        alreadyCalled = true;\\n        values[index] = x;\\n        if ((--remaining.count) === 0) {\\n          var resolve = capability.resolve;\\n          resolve(values); // call w/ this===undefined\\n        }\\n      };\\n    };\\n\\n    var performPromiseAll = function (iteratorRecord, C, resultCapability) {\\n      var it = iteratorRecord.iterator;\\n      var values = [];\\n      var remaining = { count: 1 };\\n      var next, nextValue;\\n      var index = 0;\\n      while (true) {\\n        try {\\n          next = ES.IteratorStep(it);\\n          if (next === false) {\\n            iteratorRecord.done = true;\\n            break;\\n          }\\n          nextValue = next.value;\\n        } catch (e) {\\n          iteratorRecord.done = true;\\n          throw e;\\n        }\\n        values[index] = void 0;\\n        var nextPromise = C.resolve(nextValue);\\n        var resolveElement = _promiseAllResolver(\\n          index, values, resultCapability, remaining\\n        );\\n        remaining.count += 1;\\n        optimizedThen(nextPromise.then, nextPromise, resolveElement, resultCapability.reject);\\n        index += 1;\\n      }\\n      if ((--remaining.count) === 0) {\\n        var resolve = resultCapability.resolve;\\n        resolve(values); // call w/ this===undefined\\n      }\\n      return resultCapability.promise;\\n    };\\n\\n    var performPromiseRace = function (iteratorRecord, C, resultCapability) {\\n      var it = iteratorRecord.iterator;\\n      var next, nextValue, nextPromise;\\n      while (true) {\\n        try {\\n          next = ES.IteratorStep(it);\\n          if (next === false) {\\n            // NOTE: If iterable has no items, resulting promise will never\\n            // resolve; see:\\n            // https://github.com/domenic/promises-unwrapping/issues/75\\n            // https://bugs.ecmascript.org/show_bug.cgi?id=2515\\n            iteratorRecord.done = true;\\n            break;\\n          }\\n          nextValue = next.value;\\n        } catch (e) {\\n          iteratorRecord.done = true;\\n          throw e;\\n        }\\n        nextPromise = C.resolve(nextValue);\\n        optimizedThen(nextPromise.then, nextPromise, resultCapability.resolve, resultCapability.reject);\\n      }\\n      return resultCapability.promise;\\n    };\\n\\n    defineProperties(Promise, {\\n      all: function all(iterable) {\\n        var C = this;\\n        if (!ES.TypeIsObject(C)) {\\n          throw new TypeError('Promise is not object');\\n        }\\n        var capability = new PromiseCapability(C);\\n        var iterator, iteratorRecord;\\n        try {\\n          iterator = ES.GetIterator(iterable);\\n          iteratorRecord = { iterator: iterator, done: false };\\n          return performPromiseAll(iteratorRecord, C, capability);\\n        } catch (e) {\\n          var exception = e;\\n          if (iteratorRecord && !iteratorRecord.done) {\\n            try {\\n              ES.IteratorClose(iterator, true);\\n            } catch (ee) {\\n              exception = ee;\\n            }\\n          }\\n          var reject = capability.reject;\\n          reject(exception);\\n          return capability.promise;\\n        }\\n      },\\n\\n      race: function race(iterable) {\\n        var C = this;\\n        if (!ES.TypeIsObject(C)) {\\n          throw new TypeError('Promise is not object');\\n        }\\n        var capability = new PromiseCapability(C);\\n        var iterator, iteratorRecord;\\n        try {\\n          iterator = ES.GetIterator(iterable);\\n          iteratorRecord = { iterator: iterator, done: false };\\n          return performPromiseRace(iteratorRecord, C, capability);\\n        } catch (e) {\\n          var exception = e;\\n          if (iteratorRecord && !iteratorRecord.done) {\\n            try {\\n              ES.IteratorClose(iterator, true);\\n            } catch (ee) {\\n              exception = ee;\\n            }\\n          }\\n          var reject = capability.reject;\\n          reject(exception);\\n          return capability.promise;\\n        }\\n      },\\n\\n      reject: function reject(reason) {\\n        var C = this;\\n        if (!ES.TypeIsObject(C)) {\\n          throw new TypeError('Bad promise constructor');\\n        }\\n        var capability = new PromiseCapability(C);\\n        var rejectFunc = capability.reject;\\n        rejectFunc(reason); // call with this===undefined\\n        return capability.promise;\\n      },\\n\\n      resolve: function resolve(v) {\\n        // See https://esdiscuss.org/topic/fixing-promise-resolve for spec\\n        var C = this;\\n        if (!ES.TypeIsObject(C)) {\\n          throw new TypeError('Bad promise constructor');\\n        }\\n        if (ES.IsPromise(v)) {\\n          var constructor = v.constructor;\\n          if (constructor === C) {\\n            return v;\\n          }\\n        }\\n        var capability = new PromiseCapability(C);\\n        var resolveFunc = capability.resolve;\\n        resolveFunc(v); // call with this===undefined\\n        return capability.promise;\\n      }\\n    });\\n\\n    defineProperties(Promise$prototype, {\\n      'catch': function (onRejected) {\\n        return this.then(null, onRejected);\\n      },\\n\\n      then: function then(onFulfilled, onRejected) {\\n        var promise = this;\\n        if (!ES.IsPromise(promise)) { throw new TypeError('not a promise'); }\\n        var C = ES.SpeciesConstructor(promise, Promise);\\n        var resultCapability;\\n        var returnValueIsIgnored = arguments.length > 2 && arguments[2] === PROMISE_FAKE_CAPABILITY;\\n        if (returnValueIsIgnored && C === Promise) {\\n          resultCapability = PROMISE_FAKE_CAPABILITY;\\n        } else {\\n          resultCapability = new PromiseCapability(C);\\n        }\\n        // PerformPromiseThen(promise, onFulfilled, onRejected, resultCapability)\\n        // Note that we've split the 'reaction' object into its two\\n        // components, \\\"capabilities\\\" and \\\"handler\\\"\\n        // \\\"capabilities\\\" is always equal to `resultCapability`\\n        var fulfillReactionHandler = ES.IsCallable(onFulfilled) ? onFulfilled : PROMISE_IDENTITY;\\n        var rejectReactionHandler = ES.IsCallable(onRejected) ? onRejected : PROMISE_THROWER;\\n        var _promise = promise._promise;\\n        var value;\\n        if (_promise.state === PROMISE_PENDING) {\\n          if (_promise.reactionLength === 0) {\\n            _promise.fulfillReactionHandler0 = fulfillReactionHandler;\\n            _promise.rejectReactionHandler0 = rejectReactionHandler;\\n            _promise.reactionCapability0 = resultCapability;\\n          } else {\\n            var idx = 3 * (_promise.reactionLength - 1);\\n            _promise[idx + PROMISE_FULFILL_OFFSET] = fulfillReactionHandler;\\n            _promise[idx + PROMISE_REJECT_OFFSET] = rejectReactionHandler;\\n            _promise[idx + PROMISE_CAPABILITY_OFFSET] = resultCapability;\\n          }\\n          _promise.reactionLength += 1;\\n        } else if (_promise.state === PROMISE_FULFILLED) {\\n          value = _promise.result;\\n          enqueuePromiseReactionJob(\\n            fulfillReactionHandler, resultCapability, value\\n          );\\n        } else if (_promise.state === PROMISE_REJECTED) {\\n          value = _promise.result;\\n          enqueuePromiseReactionJob(\\n            rejectReactionHandler, resultCapability, value\\n          );\\n        } else {\\n          throw new TypeError('unexpected Promise state');\\n        }\\n        return resultCapability.promise;\\n      }\\n    });\\n    // This helps the optimizer by ensuring that methods which take\\n    // capabilities aren't polymorphic.\\n    PROMISE_FAKE_CAPABILITY = new PromiseCapability(Promise);\\n    Promise$prototype$then = Promise$prototype.then;\\n\\n    return Promise;\\n  }());\\n\\n  // Chrome's native Promise has extra methods that it shouldn't have. Let's remove them.\\n  if (globals.Promise) {\\n    delete globals.Promise.accept;\\n    delete globals.Promise.defer;\\n    delete globals.Promise.prototype.chain;\\n  }\\n\\n  if (typeof PromiseShim === 'function') {\\n    // export the Promise constructor.\\n    defineProperties(globals, { Promise: PromiseShim });\\n    // In Chrome 33 (and thereabouts) Promise is defined, but the\\n    // implementation is buggy in a number of ways.  Let's check subclassing\\n    // support to see if we have a buggy implementation.\\n    var promiseSupportsSubclassing = supportsSubclassing(globals.Promise, function (S) {\\n      return S.resolve(42).then(function () {}) instanceof S;\\n    });\\n    var promiseIgnoresNonFunctionThenCallbacks = !throwsError(function () {\\n      globals.Promise.reject(42).then(null, 5).then(null, noop);\\n    });\\n    var promiseRequiresObjectContext = throwsError(function () { globals.Promise.call(3, noop); });\\n    // Promise.resolve() was errata'ed late in the ES6 process.\\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1170742\\n    //      https://code.google.com/p/v8/issues/detail?id=4161\\n    // It serves as a proxy for a number of other bugs in early Promise\\n    // implementations.\\n    var promiseResolveBroken = (function (Promise) {\\n      var p = Promise.resolve(5);\\n      p.constructor = {};\\n      var p2 = Promise.resolve(p);\\n      try {\\n        p2.then(null, noop).then(null, noop); // avoid \\\"uncaught rejection\\\" warnings in console\\n      } catch (e) {\\n        return true; // v8 native Promises break here https://code.google.com/p/chromium/issues/detail?id=575314\\n      }\\n      return p === p2; // This *should* be false!\\n    }(globals.Promise));\\n\\n    // Chrome 46 (probably older too) does not retrieve a thenable's .then synchronously\\n    var getsThenSynchronously = supportsDescriptors && (function () {\\n      var count = 0;\\n      var thenable = Object.defineProperty({}, 'then', { get: function () { count += 1; } });\\n      Promise.resolve(thenable);\\n      return count === 1;\\n    }());\\n\\n    var BadResolverPromise = function BadResolverPromise(executor) {\\n      var p = new Promise(executor);\\n      executor(3, function () {});\\n      this.then = p.then;\\n      this.constructor = BadResolverPromise;\\n    };\\n    BadResolverPromise.prototype = Promise.prototype;\\n    BadResolverPromise.all = Promise.all;\\n    // Chrome Canary 49 (probably older too) has some implementation bugs\\n    var hasBadResolverPromise = valueOrFalseIfThrows(function () {\\n      return !!BadResolverPromise.all([1, 2]);\\n    });\\n\\n    if (!promiseSupportsSubclassing || !promiseIgnoresNonFunctionThenCallbacks ||\\n        !promiseRequiresObjectContext || promiseResolveBroken ||\\n        !getsThenSynchronously || hasBadResolverPromise) {\\n      /* globals Promise: true */\\n      /* eslint-disable no-undef, no-global-assign */\\n      /* jshint -W020 */\\n      Promise = PromiseShim;\\n      /* jshint +W020 */\\n      /* eslint-enable no-undef, no-global-assign */\\n      /* globals Promise: false */\\n      overrideNative(globals, 'Promise', PromiseShim);\\n    }\\n    if (Promise.all.length !== 1) {\\n      var origAll = Promise.all;\\n      overrideNative(Promise, 'all', function all(iterable) {\\n        return ES.Call(origAll, this, arguments);\\n      });\\n    }\\n    if (Promise.race.length !== 1) {\\n      var origRace = Promise.race;\\n      overrideNative(Promise, 'race', function race(iterable) {\\n        return ES.Call(origRace, this, arguments);\\n      });\\n    }\\n    if (Promise.resolve.length !== 1) {\\n      var origResolve = Promise.resolve;\\n      overrideNative(Promise, 'resolve', function resolve(x) {\\n        return ES.Call(origResolve, this, arguments);\\n      });\\n    }\\n    if (Promise.reject.length !== 1) {\\n      var origReject = Promise.reject;\\n      overrideNative(Promise, 'reject', function reject(r) {\\n        return ES.Call(origReject, this, arguments);\\n      });\\n    }\\n    ensureEnumerable(Promise, 'all');\\n    ensureEnumerable(Promise, 'race');\\n    ensureEnumerable(Promise, 'resolve');\\n    ensureEnumerable(Promise, 'reject');\\n    addDefaultSpecies(Promise);\\n  }\\n\\n  // Map and Set require a true ES5 environment\\n  // Their fast path also requires that the environment preserve\\n  // property insertion order, which is not guaranteed by the spec.\\n  var testOrder = function (a) {\\n    var b = keys(_reduce(a, function (o, k) {\\n      o[k] = true;\\n      return o;\\n    }, {}));\\n    return a.join(':') === b.join(':');\\n  };\\n  var preservesInsertionOrder = testOrder(['z', 'a', 'bb']);\\n  // some engines (eg, Chrome) only preserve insertion order for string keys\\n  var preservesNumericInsertionOrder = testOrder(['z', 1, 'a', '3', 2]);\\n\\n  if (supportsDescriptors) {\\n\\n    var fastkey = function fastkey(key, skipInsertionOrderCheck) {\\n      if (!skipInsertionOrderCheck && !preservesInsertionOrder) {\\n        return null;\\n      }\\n      if (isNullOrUndefined(key)) {\\n        return '^' + ES.ToString(key);\\n      } else if (typeof key === 'string') {\\n        return '$' + key;\\n      } else if (typeof key === 'number') {\\n        // note that -0 will get coerced to \\\"0\\\" when used as a property key\\n        if (!preservesNumericInsertionOrder) {\\n          return 'n' + key;\\n        }\\n        return key;\\n      } else if (typeof key === 'boolean') {\\n        return 'b' + key;\\n      }\\n      return null;\\n    };\\n\\n    var emptyObject = function emptyObject() {\\n      // accomodate some older not-quite-ES5 browsers\\n      return Object.create ? Object.create(null) : {};\\n    };\\n\\n    var addIterableToMap = function addIterableToMap(MapConstructor, map, iterable) {\\n      if (isArray(iterable) || Type.string(iterable)) {\\n        _forEach(iterable, function (entry) {\\n          if (!ES.TypeIsObject(entry)) {\\n            throw new TypeError('Iterator value ' + entry + ' is not an entry object');\\n          }\\n          map.set(entry[0], entry[1]);\\n        });\\n      } else if (iterable instanceof MapConstructor) {\\n        _call(MapConstructor.prototype.forEach, iterable, function (value, key) {\\n          map.set(key, value);\\n        });\\n      } else {\\n        var iter, adder;\\n        if (!isNullOrUndefined(iterable)) {\\n          adder = map.set;\\n          if (!ES.IsCallable(adder)) { throw new TypeError('bad map'); }\\n          iter = ES.GetIterator(iterable);\\n        }\\n        if (typeof iter !== 'undefined') {\\n          while (true) {\\n            var next = ES.IteratorStep(iter);\\n            if (next === false) { break; }\\n            var nextItem = next.value;\\n            try {\\n              if (!ES.TypeIsObject(nextItem)) {\\n                throw new TypeError('Iterator value ' + nextItem + ' is not an entry object');\\n              }\\n              _call(adder, map, nextItem[0], nextItem[1]);\\n            } catch (e) {\\n              ES.IteratorClose(iter, true);\\n              throw e;\\n            }\\n          }\\n        }\\n      }\\n    };\\n    var addIterableToSet = function addIterableToSet(SetConstructor, set, iterable) {\\n      if (isArray(iterable) || Type.string(iterable)) {\\n        _forEach(iterable, function (value) {\\n          set.add(value);\\n        });\\n      } else if (iterable instanceof SetConstructor) {\\n        _call(SetConstructor.prototype.forEach, iterable, function (value) {\\n          set.add(value);\\n        });\\n      } else {\\n        var iter, adder;\\n        if (!isNullOrUndefined(iterable)) {\\n          adder = set.add;\\n          if (!ES.IsCallable(adder)) { throw new TypeError('bad set'); }\\n          iter = ES.GetIterator(iterable);\\n        }\\n        if (typeof iter !== 'undefined') {\\n          while (true) {\\n            var next = ES.IteratorStep(iter);\\n            if (next === false) { break; }\\n            var nextValue = next.value;\\n            try {\\n              _call(adder, set, nextValue);\\n            } catch (e) {\\n              ES.IteratorClose(iter, true);\\n              throw e;\\n            }\\n          }\\n        }\\n      }\\n    };\\n\\n    var collectionShims = {\\n      Map: (function () {\\n\\n        var empty = {};\\n\\n        var MapEntry = function MapEntry(key, value) {\\n          this.key = key;\\n          this.value = value;\\n          this.next = null;\\n          this.prev = null;\\n        };\\n\\n        MapEntry.prototype.isRemoved = function isRemoved() {\\n          return this.key === empty;\\n        };\\n\\n        var isMap = function isMap(map) {\\n          return !!map._es6map;\\n        };\\n\\n        var requireMapSlot = function requireMapSlot(map, method) {\\n          if (!ES.TypeIsObject(map) || !isMap(map)) {\\n            throw new TypeError('Method Map.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(map));\\n          }\\n        };\\n\\n        var MapIterator = function MapIterator(map, kind) {\\n          requireMapSlot(map, '[[MapIterator]]');\\n          this.head = map._head;\\n          this.i = this.head;\\n          this.kind = kind;\\n        };\\n\\n        MapIterator.prototype = {\\n          next: function next() {\\n            var i = this.i;\\n            var kind = this.kind;\\n            var head = this.head;\\n            if (typeof this.i === 'undefined') {\\n              return iteratorResult();\\n            }\\n            while (i.isRemoved() && i !== head) {\\n              // back up off of removed entries\\n              i = i.prev;\\n            }\\n            // advance to next unreturned element.\\n            var result;\\n            while (i.next !== head) {\\n              i = i.next;\\n              if (!i.isRemoved()) {\\n                if (kind === 'key') {\\n                  result = i.key;\\n                } else if (kind === 'value') {\\n                  result = i.value;\\n                } else {\\n                  result = [i.key, i.value];\\n                }\\n                this.i = i;\\n                return iteratorResult(result);\\n              }\\n            }\\n            // once the iterator is done, it is done forever.\\n            this.i = void 0;\\n            return iteratorResult();\\n          }\\n        };\\n        addIterator(MapIterator.prototype);\\n\\n        var Map$prototype;\\n        var MapShim = function Map() {\\n          if (!(this instanceof Map)) {\\n            throw new TypeError('Constructor Map requires \\\"new\\\"');\\n          }\\n          if (this && this._es6map) {\\n            throw new TypeError('Bad construction');\\n          }\\n          var map = emulateES6construct(this, Map, Map$prototype, {\\n            _es6map: true,\\n            _head: null,\\n            _map: OrigMap ? new OrigMap() : null,\\n            _size: 0,\\n            _storage: emptyObject()\\n          });\\n\\n          var head = new MapEntry(null, null);\\n          // circular doubly-linked list.\\n          /* eslint no-multi-assign: 1 */\\n          head.next = head.prev = head;\\n          map._head = head;\\n\\n          // Optionally initialize map from iterable\\n          if (arguments.length > 0) {\\n            addIterableToMap(Map, map, arguments[0]);\\n          }\\n          return map;\\n        };\\n        Map$prototype = MapShim.prototype;\\n\\n        Value.getter(Map$prototype, 'size', function () {\\n          if (typeof this._size === 'undefined') {\\n            throw new TypeError('size method called on incompatible Map');\\n          }\\n          return this._size;\\n        });\\n\\n        defineProperties(Map$prototype, {\\n          get: function get(key) {\\n            requireMapSlot(this, 'get');\\n            var entry;\\n            var fkey = fastkey(key, true);\\n            if (fkey !== null) {\\n              // fast O(1) path\\n              entry = this._storage[fkey];\\n              if (entry) {\\n                return entry.value;\\n              } else {\\n                return;\\n              }\\n            }\\n            if (this._map) {\\n              // fast object key path\\n              entry = origMapGet.call(this._map, key);\\n              if (entry) {\\n                return entry.value;\\n              } else {\\n                return;\\n              }\\n            }\\n            var head = this._head;\\n            var i = head;\\n            while ((i = i.next) !== head) {\\n              if (ES.SameValueZero(i.key, key)) {\\n                return i.value;\\n              }\\n            }\\n          },\\n\\n          has: function has(key) {\\n            requireMapSlot(this, 'has');\\n            var fkey = fastkey(key, true);\\n            if (fkey !== null) {\\n              // fast O(1) path\\n              return typeof this._storage[fkey] !== 'undefined';\\n            }\\n            if (this._map) {\\n              // fast object key path\\n              return origMapHas.call(this._map, key);\\n            }\\n            var head = this._head;\\n            var i = head;\\n            while ((i = i.next) !== head) {\\n              if (ES.SameValueZero(i.key, key)) {\\n                return true;\\n              }\\n            }\\n            return false;\\n          },\\n\\n          set: function set(key, value) {\\n            requireMapSlot(this, 'set');\\n            var head = this._head;\\n            var i = head;\\n            var entry;\\n            var fkey = fastkey(key, true);\\n            if (fkey !== null) {\\n              // fast O(1) path\\n              if (typeof this._storage[fkey] !== 'undefined') {\\n                this._storage[fkey].value = value;\\n                return this;\\n              } else {\\n                entry = this._storage[fkey] = new MapEntry(key, value); /* eslint no-multi-assign: 1 */\\n                i = head.prev;\\n                // fall through\\n              }\\n            } else if (this._map) {\\n              // fast object key path\\n              if (origMapHas.call(this._map, key)) {\\n                origMapGet.call(this._map, key).value = value;\\n              } else {\\n                entry = new MapEntry(key, value);\\n                origMapSet.call(this._map, key, entry);\\n                i = head.prev;\\n                // fall through\\n              }\\n            }\\n            while ((i = i.next) !== head) {\\n              if (ES.SameValueZero(i.key, key)) {\\n                i.value = value;\\n                return this;\\n              }\\n            }\\n            entry = entry || new MapEntry(key, value);\\n            if (ES.SameValue(-0, key)) {\\n              entry.key = +0; // coerce -0 to +0 in entry\\n            }\\n            entry.next = this._head;\\n            entry.prev = this._head.prev;\\n            entry.prev.next = entry;\\n            entry.next.prev = entry;\\n            this._size += 1;\\n            return this;\\n          },\\n\\n          'delete': function (key) {\\n            requireMapSlot(this, 'delete');\\n            var head = this._head;\\n            var i = head;\\n            var fkey = fastkey(key, true);\\n            if (fkey !== null) {\\n              // fast O(1) path\\n              if (typeof this._storage[fkey] === 'undefined') {\\n                return false;\\n              }\\n              i = this._storage[fkey].prev;\\n              delete this._storage[fkey];\\n              // fall through\\n            } else if (this._map) {\\n              // fast object key path\\n              if (!origMapHas.call(this._map, key)) {\\n                return false;\\n              }\\n              i = origMapGet.call(this._map, key).prev;\\n              origMapDelete.call(this._map, key);\\n              // fall through\\n            }\\n            while ((i = i.next) !== head) {\\n              if (ES.SameValueZero(i.key, key)) {\\n                i.key = empty;\\n                i.value = empty;\\n                i.prev.next = i.next;\\n                i.next.prev = i.prev;\\n                this._size -= 1;\\n                return true;\\n              }\\n            }\\n            return false;\\n          },\\n\\n          clear: function clear() {\\n             /* eslint no-multi-assign: 1 */\\n            requireMapSlot(this, 'clear');\\n            this._map = OrigMap ? new OrigMap() : null;\\n            this._size = 0;\\n            this._storage = emptyObject();\\n            var head = this._head;\\n            var i = head;\\n            var p = i.next;\\n            while ((i = p) !== head) {\\n              i.key = empty;\\n              i.value = empty;\\n              p = i.next;\\n              i.next = i.prev = head;\\n            }\\n            head.next = head.prev = head;\\n          },\\n\\n          keys: function keys() {\\n            requireMapSlot(this, 'keys');\\n            return new MapIterator(this, 'key');\\n          },\\n\\n          values: function values() {\\n            requireMapSlot(this, 'values');\\n            return new MapIterator(this, 'value');\\n          },\\n\\n          entries: function entries() {\\n            requireMapSlot(this, 'entries');\\n            return new MapIterator(this, 'key+value');\\n          },\\n\\n          forEach: function forEach(callback) {\\n            requireMapSlot(this, 'forEach');\\n            var context = arguments.length > 1 ? arguments[1] : null;\\n            var it = this.entries();\\n            for (var entry = it.next(); !entry.done; entry = it.next()) {\\n              if (context) {\\n                _call(callback, context, entry.value[1], entry.value[0], this);\\n              } else {\\n                callback(entry.value[1], entry.value[0], this);\\n              }\\n            }\\n          }\\n        });\\n        addIterator(Map$prototype, Map$prototype.entries);\\n\\n        return MapShim;\\n      }()),\\n\\n      Set: (function () {\\n        var isSet = function isSet(set) {\\n          return set._es6set && typeof set._storage !== 'undefined';\\n        };\\n        var requireSetSlot = function requireSetSlot(set, method) {\\n          if (!ES.TypeIsObject(set) || !isSet(set)) {\\n            // https://github.com/paulmillr/es6-shim/issues/176\\n            throw new TypeError('Set.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(set));\\n          }\\n        };\\n\\n        // Creating a Map is expensive.  To speed up the common case of\\n        // Sets containing only string or numeric keys, we use an object\\n        // as backing storage and lazily create a full Map only when\\n        // required.\\n        var Set$prototype;\\n        var SetShim = function Set() {\\n          if (!(this instanceof Set)) {\\n            throw new TypeError('Constructor Set requires \\\"new\\\"');\\n          }\\n          if (this && this._es6set) {\\n            throw new TypeError('Bad construction');\\n          }\\n          var set = emulateES6construct(this, Set, Set$prototype, {\\n            _es6set: true,\\n            '[[SetData]]': null,\\n            _storage: emptyObject()\\n          });\\n          if (!set._es6set) {\\n            throw new TypeError('bad set');\\n          }\\n\\n          // Optionally initialize Set from iterable\\n          if (arguments.length > 0) {\\n            addIterableToSet(Set, set, arguments[0]);\\n          }\\n          return set;\\n        };\\n        Set$prototype = SetShim.prototype;\\n\\n        var decodeKey = function (key) {\\n          var k = key;\\n          if (k === '^null') {\\n            return null;\\n          } else if (k === '^undefined') {\\n            return void 0;\\n          } else {\\n            var first = k.charAt(0);\\n            if (first === '$') {\\n              return _strSlice(k, 1);\\n            } else if (first === 'n') {\\n              return +_strSlice(k, 1);\\n            } else if (first === 'b') {\\n              return k === 'btrue';\\n            }\\n          }\\n          return +k;\\n        };\\n        // Switch from the object backing storage to a full Map.\\n        var ensureMap = function ensureMap(set) {\\n          if (!set['[[SetData]]']) {\\n            var m = new collectionShims.Map();\\n            set['[[SetData]]'] = m;\\n            _forEach(keys(set._storage), function (key) {\\n              var k = decodeKey(key);\\n              m.set(k, k);\\n            });\\n            set['[[SetData]]'] = m;\\n          }\\n          set._storage = null; // free old backing storage\\n        };\\n\\n        Value.getter(SetShim.prototype, 'size', function () {\\n          requireSetSlot(this, 'size');\\n          if (this._storage) {\\n            return keys(this._storage).length;\\n          }\\n          ensureMap(this);\\n          return this['[[SetData]]'].size;\\n        });\\n\\n        defineProperties(SetShim.prototype, {\\n          has: function has(key) {\\n            requireSetSlot(this, 'has');\\n            var fkey;\\n            if (this._storage && (fkey = fastkey(key)) !== null) {\\n              return !!this._storage[fkey];\\n            }\\n            ensureMap(this);\\n            return this['[[SetData]]'].has(key);\\n          },\\n\\n          add: function add(key) {\\n            requireSetSlot(this, 'add');\\n            var fkey;\\n            if (this._storage && (fkey = fastkey(key)) !== null) {\\n              this._storage[fkey] = true;\\n              return this;\\n            }\\n            ensureMap(this);\\n            this['[[SetData]]'].set(key, key);\\n            return this;\\n          },\\n\\n          'delete': function (key) {\\n            requireSetSlot(this, 'delete');\\n            var fkey;\\n            if (this._storage && (fkey = fastkey(key)) !== null) {\\n              var hasFKey = _hasOwnProperty(this._storage, fkey);\\n              return (delete this._storage[fkey]) && hasFKey;\\n            }\\n            ensureMap(this);\\n            return this['[[SetData]]']['delete'](key);\\n          },\\n\\n          clear: function clear() {\\n            requireSetSlot(this, 'clear');\\n            if (this._storage) {\\n              this._storage = emptyObject();\\n            }\\n            if (this['[[SetData]]']) {\\n              this['[[SetData]]'].clear();\\n            }\\n          },\\n\\n          values: function values() {\\n            requireSetSlot(this, 'values');\\n            ensureMap(this);\\n            return this['[[SetData]]'].values();\\n          },\\n\\n          entries: function entries() {\\n            requireSetSlot(this, 'entries');\\n            ensureMap(this);\\n            return this['[[SetData]]'].entries();\\n          },\\n\\n          forEach: function forEach(callback) {\\n            requireSetSlot(this, 'forEach');\\n            var context = arguments.length > 1 ? arguments[1] : null;\\n            var entireSet = this;\\n            ensureMap(entireSet);\\n            this['[[SetData]]'].forEach(function (value, key) {\\n              if (context) {\\n                _call(callback, context, key, key, entireSet);\\n              } else {\\n                callback(key, key, entireSet);\\n              }\\n            });\\n          }\\n        });\\n        defineProperty(SetShim.prototype, 'keys', SetShim.prototype.values, true);\\n        addIterator(SetShim.prototype, SetShim.prototype.values);\\n\\n        return SetShim;\\n      }())\\n    };\\n\\n    if (globals.Map || globals.Set) {\\n      // Safari 8, for example, doesn't accept an iterable.\\n      var mapAcceptsArguments = valueOrFalseIfThrows(function () { return new Map([[1, 2]]).get(1) === 2; });\\n      if (!mapAcceptsArguments) {\\n        globals.Map = function Map() {\\n          if (!(this instanceof Map)) {\\n            throw new TypeError('Constructor Map requires \\\"new\\\"');\\n          }\\n          var m = new OrigMap();\\n          if (arguments.length > 0) {\\n            addIterableToMap(Map, m, arguments[0]);\\n          }\\n          delete m.constructor;\\n          Object.setPrototypeOf(m, globals.Map.prototype);\\n          return m;\\n        };\\n        globals.Map.prototype = create(OrigMap.prototype);\\n        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\\n        Value.preserveToString(globals.Map, OrigMap);\\n      }\\n      var testMap = new Map();\\n      var mapUsesSameValueZero = (function () {\\n        // Chrome 38-42, node 0.11/0.12, iojs 1/2 also have a bug when the Map has a size > 4\\n        var m = new Map([[1, 0], [2, 0], [3, 0], [4, 0]]);\\n        m.set(-0, m);\\n        return m.get(0) === m && m.get(-0) === m && m.has(0) && m.has(-0);\\n      }());\\n      var mapSupportsChaining = testMap.set(1, 2) === testMap;\\n      if (!mapUsesSameValueZero || !mapSupportsChaining) {\\n        overrideNative(Map.prototype, 'set', function set(k, v) {\\n          _call(origMapSet, this, k === 0 ? 0 : k, v);\\n          return this;\\n        });\\n      }\\n      if (!mapUsesSameValueZero) {\\n        defineProperties(Map.prototype, {\\n          get: function get(k) {\\n            return _call(origMapGet, this, k === 0 ? 0 : k);\\n          },\\n          has: function has(k) {\\n            return _call(origMapHas, this, k === 0 ? 0 : k);\\n          }\\n        }, true);\\n        Value.preserveToString(Map.prototype.get, origMapGet);\\n        Value.preserveToString(Map.prototype.has, origMapHas);\\n      }\\n      var testSet = new Set();\\n      var setUsesSameValueZero = (function (s) {\\n        s['delete'](0);\\n        s.add(-0);\\n        return !s.has(0);\\n      }(testSet));\\n      var setSupportsChaining = testSet.add(1) === testSet;\\n      if (!setUsesSameValueZero || !setSupportsChaining) {\\n        var origSetAdd = Set.prototype.add;\\n        Set.prototype.add = function add(v) {\\n          _call(origSetAdd, this, v === 0 ? 0 : v);\\n          return this;\\n        };\\n        Value.preserveToString(Set.prototype.add, origSetAdd);\\n      }\\n      if (!setUsesSameValueZero) {\\n        var origSetHas = Set.prototype.has;\\n        Set.prototype.has = function has(v) {\\n          return _call(origSetHas, this, v === 0 ? 0 : v);\\n        };\\n        Value.preserveToString(Set.prototype.has, origSetHas);\\n        var origSetDel = Set.prototype['delete'];\\n        Set.prototype['delete'] = function SetDelete(v) {\\n          return _call(origSetDel, this, v === 0 ? 0 : v);\\n        };\\n        Value.preserveToString(Set.prototype['delete'], origSetDel);\\n      }\\n      var mapSupportsSubclassing = supportsSubclassing(globals.Map, function (M) {\\n        var m = new M([]);\\n        // Firefox 32 is ok with the instantiating the subclass but will\\n        // throw when the map is used.\\n        m.set(42, 42);\\n        return m instanceof M;\\n      });\\n      // without Object.setPrototypeOf, subclassing is not possible\\n      var mapFailsToSupportSubclassing = Object.setPrototypeOf && !mapSupportsSubclassing;\\n      var mapRequiresNew = (function () {\\n        try {\\n          return !(globals.Map() instanceof globals.Map);\\n        } catch (e) {\\n          return e instanceof TypeError;\\n        }\\n      }());\\n      if (globals.Map.length !== 0 || mapFailsToSupportSubclassing || !mapRequiresNew) {\\n        globals.Map = function Map() {\\n          if (!(this instanceof Map)) {\\n            throw new TypeError('Constructor Map requires \\\"new\\\"');\\n          }\\n          var m = new OrigMap();\\n          if (arguments.length > 0) {\\n            addIterableToMap(Map, m, arguments[0]);\\n          }\\n          delete m.constructor;\\n          Object.setPrototypeOf(m, Map.prototype);\\n          return m;\\n        };\\n        globals.Map.prototype = OrigMap.prototype;\\n        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\\n        Value.preserveToString(globals.Map, OrigMap);\\n      }\\n      var setSupportsSubclassing = supportsSubclassing(globals.Set, function (S) {\\n        var s = new S([]);\\n        s.add(42, 42);\\n        return s instanceof S;\\n      });\\n      // without Object.setPrototypeOf, subclassing is not possible\\n      var setFailsToSupportSubclassing = Object.setPrototypeOf && !setSupportsSubclassing;\\n      var setRequiresNew = (function () {\\n        try {\\n          return !(globals.Set() instanceof globals.Set);\\n        } catch (e) {\\n          return e instanceof TypeError;\\n        }\\n      }());\\n      if (globals.Set.length !== 0 || setFailsToSupportSubclassing || !setRequiresNew) {\\n        var OrigSet = globals.Set;\\n        globals.Set = function Set() {\\n          if (!(this instanceof Set)) {\\n            throw new TypeError('Constructor Set requires \\\"new\\\"');\\n          }\\n          var s = new OrigSet();\\n          if (arguments.length > 0) {\\n            addIterableToSet(Set, s, arguments[0]);\\n          }\\n          delete s.constructor;\\n          Object.setPrototypeOf(s, Set.prototype);\\n          return s;\\n        };\\n        globals.Set.prototype = OrigSet.prototype;\\n        defineProperty(globals.Set.prototype, 'constructor', globals.Set, true);\\n        Value.preserveToString(globals.Set, OrigSet);\\n      }\\n      var newMap = new globals.Map();\\n      var mapIterationThrowsStopIterator = !valueOrFalseIfThrows(function () {\\n        return newMap.keys().next().done;\\n      });\\n      /*\\n        - In Firefox < 23, Map#size is a function.\\n        - In all current Firefox, Set#entries/keys/values & Map#clear do not exist\\n        - https://bugzilla.mozilla.org/show_bug.cgi?id=869996\\n        - In Firefox 24, Map and Set do not implement forEach\\n        - In Firefox 25 at least, Map and Set are callable without \\\"new\\\"\\n      */\\n      if (\\n        typeof globals.Map.prototype.clear !== 'function' ||\\n        new globals.Set().size !== 0 ||\\n        newMap.size !== 0 ||\\n        typeof globals.Map.prototype.keys !== 'function' ||\\n        typeof globals.Set.prototype.keys !== 'function' ||\\n        typeof globals.Map.prototype.forEach !== 'function' ||\\n        typeof globals.Set.prototype.forEach !== 'function' ||\\n        isCallableWithoutNew(globals.Map) ||\\n        isCallableWithoutNew(globals.Set) ||\\n        typeof newMap.keys().next !== 'function' || // Safari 8\\n        mapIterationThrowsStopIterator || // Firefox 25\\n        !mapSupportsSubclassing\\n      ) {\\n        defineProperties(globals, {\\n          Map: collectionShims.Map,\\n          Set: collectionShims.Set\\n        }, true);\\n      }\\n\\n      if (globals.Set.prototype.keys !== globals.Set.prototype.values) {\\n        // Fixed in WebKit with https://bugs.webkit.org/show_bug.cgi?id=144190\\n        defineProperty(globals.Set.prototype, 'keys', globals.Set.prototype.values, true);\\n      }\\n\\n      // Shim incomplete iterator implementations.\\n      addIterator(Object.getPrototypeOf((new globals.Map()).keys()));\\n      addIterator(Object.getPrototypeOf((new globals.Set()).keys()));\\n\\n      if (functionsHaveNames && globals.Set.prototype.has.name !== 'has') {\\n        // Microsoft Edge v0.11.10074.0 is missing a name on Set#has\\n        var anonymousSetHas = globals.Set.prototype.has;\\n        overrideNative(globals.Set.prototype, 'has', function has(key) {\\n          return _call(anonymousSetHas, this, key);\\n        });\\n      }\\n    }\\n    defineProperties(globals, collectionShims);\\n    addDefaultSpecies(globals.Map);\\n    addDefaultSpecies(globals.Set);\\n  }\\n\\n  var throwUnlessTargetIsObject = function throwUnlessTargetIsObject(target) {\\n    if (!ES.TypeIsObject(target)) {\\n      throw new TypeError('target must be an object');\\n    }\\n  };\\n\\n  // Some Reflect methods are basically the same as\\n  // those on the Object global, except that a TypeError is thrown if\\n  // target isn't an object. As well as returning a boolean indicating\\n  // the success of the operation.\\n  var ReflectShims = {\\n    // Apply method in a functional form.\\n    apply: function apply() {\\n      return ES.Call(ES.Call, null, arguments);\\n    },\\n\\n    // New operator in a functional form.\\n    construct: function construct(constructor, args) {\\n      if (!ES.IsConstructor(constructor)) {\\n        throw new TypeError('First argument must be a constructor.');\\n      }\\n      var newTarget = arguments.length > 2 ? arguments[2] : constructor;\\n      if (!ES.IsConstructor(newTarget)) {\\n        throw new TypeError('new.target must be a constructor.');\\n      }\\n      return ES.Construct(constructor, args, newTarget, 'internal');\\n    },\\n\\n    // When deleting a non-existent or configurable property,\\n    // true is returned.\\n    // When attempting to delete a non-configurable property,\\n    // it will return false.\\n    deleteProperty: function deleteProperty(target, key) {\\n      throwUnlessTargetIsObject(target);\\n      if (supportsDescriptors) {\\n        var desc = Object.getOwnPropertyDescriptor(target, key);\\n\\n        if (desc && !desc.configurable) {\\n          return false;\\n        }\\n      }\\n\\n      // Will return true.\\n      return delete target[key];\\n    },\\n\\n    has: function has(target, key) {\\n      throwUnlessTargetIsObject(target);\\n      return key in target;\\n    }\\n  };\\n\\n  if (Object.getOwnPropertyNames) {\\n    Object.assign(ReflectShims, {\\n      // Basically the result of calling the internal [[OwnPropertyKeys]].\\n      // Concatenating propertyNames and propertySymbols should do the trick.\\n      // This should continue to work together with a Symbol shim\\n      // which overrides Object.getOwnPropertyNames and implements\\n      // Object.getOwnPropertySymbols.\\n      ownKeys: function ownKeys(target) {\\n        throwUnlessTargetIsObject(target);\\n        var keys = Object.getOwnPropertyNames(target);\\n\\n        if (ES.IsCallable(Object.getOwnPropertySymbols)) {\\n          _pushApply(keys, Object.getOwnPropertySymbols(target));\\n        }\\n\\n        return keys;\\n      }\\n    });\\n  }\\n\\n  var callAndCatchException = function ConvertExceptionToBoolean(func) {\\n    return !throwsError(func);\\n  };\\n\\n  if (Object.preventExtensions) {\\n    Object.assign(ReflectShims, {\\n      isExtensible: function isExtensible(target) {\\n        throwUnlessTargetIsObject(target);\\n        return Object.isExtensible(target);\\n      },\\n      preventExtensions: function preventExtensions(target) {\\n        throwUnlessTargetIsObject(target);\\n        return callAndCatchException(function () {\\n          Object.preventExtensions(target);\\n        });\\n      }\\n    });\\n  }\\n\\n  if (supportsDescriptors) {\\n    var internalGet = function get(target, key, receiver) {\\n      var desc = Object.getOwnPropertyDescriptor(target, key);\\n\\n      if (!desc) {\\n        var parent = Object.getPrototypeOf(target);\\n\\n        if (parent === null) {\\n          return void 0;\\n        }\\n\\n        return internalGet(parent, key, receiver);\\n      }\\n\\n      if ('value' in desc) {\\n        return desc.value;\\n      }\\n\\n      if (desc.get) {\\n        return ES.Call(desc.get, receiver);\\n      }\\n\\n      return void 0;\\n    };\\n\\n    var internalSet = function set(target, key, value, receiver) {\\n      var desc = Object.getOwnPropertyDescriptor(target, key);\\n\\n      if (!desc) {\\n        var parent = Object.getPrototypeOf(target);\\n\\n        if (parent !== null) {\\n          return internalSet(parent, key, value, receiver);\\n        }\\n\\n        desc = {\\n          value: void 0,\\n          writable: true,\\n          enumerable: true,\\n          configurable: true\\n        };\\n      }\\n\\n      if ('value' in desc) {\\n        if (!desc.writable) {\\n          return false;\\n        }\\n\\n        if (!ES.TypeIsObject(receiver)) {\\n          return false;\\n        }\\n\\n        var existingDesc = Object.getOwnPropertyDescriptor(receiver, key);\\n\\n        if (existingDesc) {\\n          return Reflect.defineProperty(receiver, key, {\\n            value: value\\n          });\\n        } else {\\n          return Reflect.defineProperty(receiver, key, {\\n            value: value,\\n            writable: true,\\n            enumerable: true,\\n            configurable: true\\n          });\\n        }\\n      }\\n\\n      if (desc.set) {\\n        _call(desc.set, receiver, value);\\n        return true;\\n      }\\n\\n      return false;\\n    };\\n\\n    Object.assign(ReflectShims, {\\n      defineProperty: function defineProperty(target, propertyKey, attributes) {\\n        throwUnlessTargetIsObject(target);\\n        return callAndCatchException(function () {\\n          Object.defineProperty(target, propertyKey, attributes);\\n        });\\n      },\\n\\n      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {\\n        throwUnlessTargetIsObject(target);\\n        return Object.getOwnPropertyDescriptor(target, propertyKey);\\n      },\\n\\n      // Syntax in a functional form.\\n      get: function get(target, key) {\\n        throwUnlessTargetIsObject(target);\\n        var receiver = arguments.length > 2 ? arguments[2] : target;\\n\\n        return internalGet(target, key, receiver);\\n      },\\n\\n      set: function set(target, key, value) {\\n        throwUnlessTargetIsObject(target);\\n        var receiver = arguments.length > 3 ? arguments[3] : target;\\n\\n        return internalSet(target, key, value, receiver);\\n      }\\n    });\\n  }\\n\\n  if (Object.getPrototypeOf) {\\n    var objectDotGetPrototypeOf = Object.getPrototypeOf;\\n    ReflectShims.getPrototypeOf = function getPrototypeOf(target) {\\n      throwUnlessTargetIsObject(target);\\n      return objectDotGetPrototypeOf(target);\\n    };\\n  }\\n\\n  if (Object.setPrototypeOf && ReflectShims.getPrototypeOf) {\\n    var willCreateCircularPrototype = function (object, lastProto) {\\n      var proto = lastProto;\\n      while (proto) {\\n        if (object === proto) {\\n          return true;\\n        }\\n        proto = ReflectShims.getPrototypeOf(proto);\\n      }\\n      return false;\\n    };\\n\\n    Object.assign(ReflectShims, {\\n      // Sets the prototype of the given object.\\n      // Returns true on success, otherwise false.\\n      setPrototypeOf: function setPrototypeOf(object, proto) {\\n        throwUnlessTargetIsObject(object);\\n        if (proto !== null && !ES.TypeIsObject(proto)) {\\n          throw new TypeError('proto must be an object or null');\\n        }\\n\\n        // If they already are the same, we're done.\\n        if (proto === Reflect.getPrototypeOf(object)) {\\n          return true;\\n        }\\n\\n        // Cannot alter prototype if object not extensible.\\n        if (Reflect.isExtensible && !Reflect.isExtensible(object)) {\\n          return false;\\n        }\\n\\n        // Ensure that we do not create a circular prototype chain.\\n        if (willCreateCircularPrototype(object, proto)) {\\n          return false;\\n        }\\n\\n        Object.setPrototypeOf(object, proto);\\n\\n        return true;\\n      }\\n    });\\n  }\\n  var defineOrOverrideReflectProperty = function (key, shim) {\\n    if (!ES.IsCallable(globals.Reflect[key])) {\\n      defineProperty(globals.Reflect, key, shim);\\n    } else {\\n      var acceptsPrimitives = valueOrFalseIfThrows(function () {\\n        globals.Reflect[key](1);\\n        globals.Reflect[key](NaN);\\n        globals.Reflect[key](true);\\n        return true;\\n      });\\n      if (acceptsPrimitives) {\\n        overrideNative(globals.Reflect, key, shim);\\n      }\\n    }\\n  };\\n  Object.keys(ReflectShims).forEach(function (key) {\\n    defineOrOverrideReflectProperty(key, ReflectShims[key]);\\n  });\\n  var originalReflectGetProto = globals.Reflect.getPrototypeOf;\\n  if (functionsHaveNames && originalReflectGetProto && originalReflectGetProto.name !== 'getPrototypeOf') {\\n    overrideNative(globals.Reflect, 'getPrototypeOf', function getPrototypeOf(target) {\\n      return _call(originalReflectGetProto, globals.Reflect, target);\\n    });\\n  }\\n  if (globals.Reflect.setPrototypeOf) {\\n    if (valueOrFalseIfThrows(function () {\\n      globals.Reflect.setPrototypeOf(1, {});\\n      return true;\\n    })) {\\n      overrideNative(globals.Reflect, 'setPrototypeOf', ReflectShims.setPrototypeOf);\\n    }\\n  }\\n  if (globals.Reflect.defineProperty) {\\n    if (!valueOrFalseIfThrows(function () {\\n      var basic = !globals.Reflect.defineProperty(1, 'test', { value: 1 });\\n      // \\\"extensible\\\" fails on Edge 0.12\\n      var extensible = typeof Object.preventExtensions !== 'function' || !globals.Reflect.defineProperty(Object.preventExtensions({}), 'test', {});\\n      return basic && extensible;\\n    })) {\\n      overrideNative(globals.Reflect, 'defineProperty', ReflectShims.defineProperty);\\n    }\\n  }\\n  if (globals.Reflect.construct) {\\n    if (!valueOrFalseIfThrows(function () {\\n      var F = function F() {};\\n      return globals.Reflect.construct(function () {}, [], F) instanceof F;\\n    })) {\\n      overrideNative(globals.Reflect, 'construct', ReflectShims.construct);\\n    }\\n  }\\n\\n  if (String(new Date(NaN)) !== 'Invalid Date') {\\n    var dateToString = Date.prototype.toString;\\n    var shimmedDateToString = function toString() {\\n      var valueOf = +this;\\n      if (valueOf !== valueOf) {\\n        return 'Invalid Date';\\n      }\\n      return ES.Call(dateToString, this);\\n    };\\n    overrideNative(Date.prototype, 'toString', shimmedDateToString);\\n  }\\n\\n  // Annex B HTML methods\\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-additional-properties-of-the-string.prototype-object\\n  var stringHTMLshims = {\\n    anchor: function anchor(name) { return ES.CreateHTML(this, 'a', 'name', name); },\\n    big: function big() { return ES.CreateHTML(this, 'big', '', ''); },\\n    blink: function blink() { return ES.CreateHTML(this, 'blink', '', ''); },\\n    bold: function bold() { return ES.CreateHTML(this, 'b', '', ''); },\\n    fixed: function fixed() { return ES.CreateHTML(this, 'tt', '', ''); },\\n    fontcolor: function fontcolor(color) { return ES.CreateHTML(this, 'font', 'color', color); },\\n    fontsize: function fontsize(size) { return ES.CreateHTML(this, 'font', 'size', size); },\\n    italics: function italics() { return ES.CreateHTML(this, 'i', '', ''); },\\n    link: function link(url) { return ES.CreateHTML(this, 'a', 'href', url); },\\n    small: function small() { return ES.CreateHTML(this, 'small', '', ''); },\\n    strike: function strike() { return ES.CreateHTML(this, 'strike', '', ''); },\\n    sub: function sub() { return ES.CreateHTML(this, 'sub', '', ''); },\\n    sup: function sub() { return ES.CreateHTML(this, 'sup', '', ''); }\\n  };\\n  _forEach(Object.keys(stringHTMLshims), function (key) {\\n    var method = String.prototype[key];\\n    var shouldOverwrite = false;\\n    if (ES.IsCallable(method)) {\\n      var output = _call(method, '', ' \\\" ');\\n      var quotesCount = _concat([], output.match(/\\\"/g)).length;\\n      shouldOverwrite = output !== output.toLowerCase() || quotesCount > 2;\\n    } else {\\n      shouldOverwrite = true;\\n    }\\n    if (shouldOverwrite) {\\n      overrideNative(String.prototype, key, stringHTMLshims[key]);\\n    }\\n  });\\n\\n  var JSONstringifiesSymbols = (function () {\\n    // Microsoft Edge v0.12 stringifies Symbols incorrectly\\n    if (!hasSymbols) { return false; } // Symbols are not supported\\n    var stringify = typeof JSON === 'object' && typeof JSON.stringify === 'function' ? JSON.stringify : null;\\n    if (!stringify) { return false; } // JSON.stringify is not supported\\n    if (typeof stringify(Symbol()) !== 'undefined') { return true; } // Symbols should become `undefined`\\n    if (stringify([Symbol()]) !== '[null]') { return true; } // Symbols in arrays should become `null`\\n    var obj = { a: Symbol() };\\n    obj[Symbol()] = true;\\n    if (stringify(obj) !== '{}') { return true; } // Symbol-valued keys *and* Symbol-valued properties should be omitted\\n    return false;\\n  }());\\n  var JSONstringifyAcceptsObjectSymbol = valueOrFalseIfThrows(function () {\\n    // Chrome 45 throws on stringifying object symbols\\n    if (!hasSymbols) { return true; } // Symbols are not supported\\n    return JSON.stringify(Object(Symbol())) === '{}' && JSON.stringify([Object(Symbol())]) === '[{}]';\\n  });\\n  if (JSONstringifiesSymbols || !JSONstringifyAcceptsObjectSymbol) {\\n    var origStringify = JSON.stringify;\\n    overrideNative(JSON, 'stringify', function stringify(value) {\\n      if (typeof value === 'symbol') { return; }\\n      var replacer;\\n      if (arguments.length > 1) {\\n        replacer = arguments[1];\\n      }\\n      var args = [value];\\n      if (!isArray(replacer)) {\\n        var replaceFn = ES.IsCallable(replacer) ? replacer : null;\\n        var wrappedReplacer = function (key, val) {\\n          var parsedValue = replaceFn ? _call(replaceFn, this, key, val) : val;\\n          if (typeof parsedValue !== 'symbol') {\\n            if (Type.symbol(parsedValue)) {\\n              return assignTo({})(parsedValue);\\n            } else {\\n              return parsedValue;\\n            }\\n          }\\n        };\\n        args.push(wrappedReplacer);\\n      } else {\\n        // create wrapped replacer that handles an array replacer?\\n        args.push(replacer);\\n      }\\n      if (arguments.length > 2) {\\n        args.push(arguments[2]);\\n      }\\n      return origStringify.apply(this, args);\\n    });\\n  }\\n\\n  return globals;\\n}));\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Local Projects/manualruf/my-app/node_modules/raw-loader!C:/Local Projects/manualruf/my-app/node_modules/es6-shim/es6-shim.js\n// module id = ../../../../raw-loader/index.js!../../../../es6-shim/es6-shim.js\n// module chunks = scripts","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Local Projects/manualruf/my-app/node_modules/script-loader/addScript.js\n// module id = ../../../../script-loader/addScript.js\n// module chunks = scripts","require(\"!!C:\\\\Local Projects\\\\manualruf\\\\my-app\\\\node_modules\\\\script-loader\\\\addScript.js\")(require(\"!!C:\\\\Local Projects\\\\manualruf\\\\my-app\\\\node_modules\\\\raw-loader\\\\index.js!C:\\\\Local Projects\\\\manualruf\\\\my-app\\\\node_modules\\\\es5-shim\\\\es5-shim.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Local Projects/manualruf/my-app/node_modules/script-loader!C:/Local Projects/manualruf/my-app/node_modules/es5-shim/es5-shim.js\n// module id = ../../../../script-loader/index.js!../../../../es5-shim/es5-shim.js\n// module chunks = scripts","require(\"!!C:\\\\Local Projects\\\\manualruf\\\\my-app\\\\node_modules\\\\script-loader\\\\addScript.js\")(require(\"!!C:\\\\Local Projects\\\\manualruf\\\\my-app\\\\node_modules\\\\raw-loader\\\\index.js!C:\\\\Local Projects\\\\manualruf\\\\my-app\\\\node_modules\\\\es6-shim\\\\es6-shim.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Local Projects/manualruf/my-app/node_modules/script-loader!C:/Local Projects/manualruf/my-app/node_modules/es6-shim/es6-shim.js\n// module id = ../../../../script-loader/index.js!../../../../es6-shim/es6-shim.js\n// module chunks = scripts"],"sourceRoot":"webpack:///"}